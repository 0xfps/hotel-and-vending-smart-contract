{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "name": "Approve",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "Book",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "BookFor",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "Leave",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "Lock",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "name": "Revoke",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "Unlock",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_password",
          "type": "string"
        }
      ],
      "name": "book",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_password",
          "type": "string"
        }
      ],
      "name": "bookFor",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "leave",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "lock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "revoke",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_key",
          "type": "string"
        }
      ],
      "name": "unlock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "viewOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/HotelAndVending.sol"
  },
  "ast": {
    "absolutePath": "contracts/HotelAndVending.sol",
    "exportedSymbols": {
      "HAV": [
        582
      ]
    },
    "id": 583,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "HAV",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 582,
        "linearizedBaseContracts": [
          582
        ],
        "name": "HAV",
        "nameLocation": "190:3:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "id": 7,
            "name": "Book",
            "nameLocation": "206:4:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 6,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7,
                  "src": "211:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "211:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7,
                  "src": "220:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 4,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "220:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "210:18:0"
            },
            "src": "200:29:0"
          },
          {
            "anonymous": false,
            "id": 15,
            "name": "BookFor",
            "nameLocation": "240:7:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 14,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 15,
                  "src": "248:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "248:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 15,
                  "src": "257:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "257:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 15,
                  "src": "266:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 12,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "266:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "247:27:0"
            },
            "src": "234:41:0"
          },
          {
            "anonymous": false,
            "id": 23,
            "name": "Unlock",
            "nameLocation": "286:6:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 22,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 23,
                  "src": "293:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "293:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 23,
                  "src": "302:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "302:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 23,
                  "src": "311:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "311:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "292:27:0"
            },
            "src": "280:40:0"
          },
          {
            "anonymous": false,
            "id": 31,
            "name": "Lock",
            "nameLocation": "331:4:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 30,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 31,
                  "src": "336:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "336:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 31,
                  "src": "345:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 26,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "345:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 31,
                  "src": "354:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "354:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "335:27:0"
            },
            "src": "325:38:0"
          },
          {
            "anonymous": false,
            "id": 39,
            "name": "Approve",
            "nameLocation": "374:7:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 38,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 39,
                  "src": "382:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "382:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 39,
                  "src": "391:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "391:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 39,
                  "src": "400:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 36,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "400:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "381:24:0"
            },
            "src": "368:38:0"
          },
          {
            "anonymous": false,
            "id": 47,
            "name": "Revoke",
            "nameLocation": "417:6:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 46,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 47,
                  "src": "424:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "424:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 47,
                  "src": "433:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 42,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "433:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 47,
                  "src": "442:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 44,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "442:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "423:24:0"
            },
            "src": "411:37:0"
          },
          {
            "anonymous": false,
            "id": 53,
            "name": "Leave",
            "nameLocation": "459:5:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 52,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 53,
                  "src": "465:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 48,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "465:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 53,
                  "src": "474:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 50,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "474:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "464:18:0"
            },
            "src": "453:30:0"
          },
          {
            "canonicalName": "HAV.Rooms",
            "id": 62,
            "members": [
              {
                "constant": false,
                "id": 55,
                "mutability": "mutable",
                "name": "occupant",
                "nameLocation": "634:8:0",
                "nodeType": "VariableDeclaration",
                "scope": 62,
                "src": "626:16:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 54,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "626:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 57,
                "mutability": "mutable",
                "name": "price",
                "nameLocation": "660:5:0",
                "nodeType": "VariableDeclaration",
                "scope": 62,
                "src": "652:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 56,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "652:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 59,
                "mutability": "mutable",
                "name": "key",
                "nameLocation": "683:3:0",
                "nodeType": "VariableDeclaration",
                "scope": 62,
                "src": "675:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 58,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "675:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 61,
                "mutability": "mutable",
                "name": "door_open",
                "nameLocation": "701:9:0",
                "nodeType": "VariableDeclaration",
                "scope": 62,
                "src": "696:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 60,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "696:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Rooms",
            "nameLocation": "606:5:0",
            "nodeType": "StructDefinition",
            "scope": 582,
            "src": "599:118:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 67,
            "mutability": "mutable",
            "name": "guests",
            "nameLocation": "776:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 582,
            "src": "742:40:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Rooms_$62_storage_$",
              "typeString": "mapping(address => struct HAV.Rooms)"
            },
            "typeName": {
              "id": 66,
              "keyType": {
                "id": 63,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "750:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "742:25:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Rooms_$62_storage_$",
                "typeString": "mapping(address => struct HAV.Rooms)"
              },
              "valueType": {
                "id": 65,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 64,
                  "name": "Rooms",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 62,
                  "src": "761:5:0"
                },
                "referencedDeclaration": 62,
                "src": "761:5:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Rooms_$62_storage_ptr",
                  "typeString": "struct HAV.Rooms"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 73,
            "mutability": "mutable",
            "name": "approvals",
            "nameLocation": "896:9:0",
            "nodeType": "VariableDeclaration",
            "scope": 582,
            "src": "843:62:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(address => mapping(address => bool))"
            },
            "typeName": {
              "id": 72,
              "keyType": {
                "id": 68,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "851:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "843:44:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(address => mapping(address => bool))"
              },
              "valueType": {
                "id": 71,
                "keyType": {
                  "id": 69,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "870:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "862:24:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 70,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "881:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 87,
              "nodeType": "Block",
              "src": "1058:74:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 82,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 76,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1076:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 77,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1076:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 80,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1098:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 79,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1090:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 78,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1090:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 81,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1090:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1076:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "212041646472657373",
                        "id": 83,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1102:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6657473f620eaf9720c805e2a21f348f4d9e9e8d81bc1f14722d256c4d2c18c9",
                          "typeString": "literal_string \"! Address\""
                        },
                        "value": "! Address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6657473f620eaf9720c805e2a21f348f4d9e9e8d81bc1f14722d256c4d2c18c9",
                          "typeString": "literal_string \"! Address\""
                        }
                      ],
                      "id": 75,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1068:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 84,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1068:46:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85,
                  "nodeType": "ExpressionStatement",
                  "src": "1068:46:0"
                },
                {
                  "id": 86,
                  "nodeType": "PlaceholderStatement",
                  "src": "1124:1:0"
                }
              ]
            },
            "id": 88,
            "name": "isValidSender",
            "nameLocation": "1038:13:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 74,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1051:2:0"
            },
            "src": "1029:103:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 105,
              "nodeType": "Block",
              "src": "1303:115:0",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 95,
                          "name": "guests",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 67,
                          "src": "1320:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Rooms_$62_storage_$",
                            "typeString": "mapping(address => struct HAV.Rooms storage ref)"
                          }
                        },
                        "id": 97,
                        "indexExpression": {
                          "id": 96,
                          "name": "_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 90,
                          "src": "1327:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1320:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Rooms_$62_storage",
                          "typeString": "struct HAV.Rooms storage ref"
                        }
                      },
                      "id": 98,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "occupant",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 55,
                      "src": "1320:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 101,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1357:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 100,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1349:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 99,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1349:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 102,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1349:10:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1320:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 94,
                  "id": 104,
                  "nodeType": "Return",
                  "src": "1313:46:0"
                }
              ]
            },
            "id": 106,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "hasRoom",
            "nameLocation": "1246:7:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 91,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 90,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "1262:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 106,
                  "src": "1254:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 89,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1254:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1253:18:0"
            },
            "returnParameters": {
              "id": 94,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 93,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 106,
                  "src": "1293:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 92,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1293:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1292:6:0"
            },
            "scope": 582,
            "src": "1237:181:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 135,
              "nodeType": "Block",
              "src": "1582:262:0",
              "statements": [
                {
                  "assignments": [
                    114
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 114,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "1600:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 135,
                      "src": "1592:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 113,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1592:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 119,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 115,
                        "name": "guests",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67,
                        "src": "1608:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Rooms_$62_storage_$",
                          "typeString": "mapping(address => struct HAV.Rooms storage ref)"
                        }
                      },
                      "id": 117,
                      "indexExpression": {
                        "id": 116,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 108,
                        "src": "1615:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1608:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Rooms_$62_storage",
                        "typeString": "struct HAV.Rooms storage ref"
                      }
                    },
                    "id": 118,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "occupant",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 55,
                    "src": "1608:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1592:41:0"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 132,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 123,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 120,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "1652:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 121,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1652:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 122,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 114,
                                "src": "1666:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "1652:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 124,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "1651:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "components": [
                            {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 125,
                                  "name": "approvals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 73,
                                  "src": "1677:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                                    "typeString": "mapping(address => mapping(address => bool))"
                                  }
                                },
                                "id": 127,
                                "indexExpression": {
                                  "id": 126,
                                  "name": "_address",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 108,
                                  "src": "1687:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1677:19:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                  "typeString": "mapping(address => bool)"
                                }
                              },
                              "id": 130,
                              "indexExpression": {
                                "expression": {
                                  "id": 128,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "1697:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 129,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1697:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1677:31:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 131,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "1676:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1651:58:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 133,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1650:60:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 112,
                  "id": 134,
                  "nodeType": "Return",
                  "src": "1643:67:0"
                }
              ]
            },
            "id": 136,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isAllowed",
            "nameLocation": "1523:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 109,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 108,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "1541:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 136,
                  "src": "1533:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 107,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1533:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1532:18:0"
            },
            "returnParameters": {
              "id": 112,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 111,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 136,
                  "src": "1572:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 110,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1572:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1571:6:0"
            },
            "scope": 582,
            "src": "1514:330:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 205,
              "nodeType": "Block",
              "src": "2038:548:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2056:20:0",
                        "subExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 145,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2065:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 146,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2065:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 144,
                            "name": "hasRoom",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 106,
                            "src": "2057:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 147,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2057:19:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752068617665206120726f6f6d2e",
                        "id": 149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2078:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5bfe672397e32d2ea9c2540672c1b386fe64f9962258793654595165a4865e50",
                          "typeString": "literal_string \"You have a room.\""
                        },
                        "value": "You have a room."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5bfe672397e32d2ea9c2540672c1b386fe64f9962258793654595165a4865e50",
                          "typeString": "literal_string \"You have a room.\""
                        }
                      ],
                      "id": 143,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2048:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2048:49:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 151,
                  "nodeType": "ExpressionStatement",
                  "src": "2048:49:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 155,
                                "name": "_password",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 138,
                                "src": "2196:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "id": 154,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2190:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 153,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "2190:5:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 156,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2190:16:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 157,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "2190:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 158,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2217:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2190:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50617373776f7264206c656e677468203d3d2030",
                        "id": 160,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2220:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e23dc15ea9cb1333100f9eb7e2020e89a8d54d01c13a4539f949b39f87a367b7",
                          "typeString": "literal_string \"Password length == 0\""
                        },
                        "value": "Password length == 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e23dc15ea9cb1333100f9eb7e2020e89a8d54d01c13a4539f949b39f87a367b7",
                          "typeString": "literal_string \"Password length == 0\""
                        }
                      ],
                      "id": 152,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2182:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2182:61:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 162,
                  "nodeType": "ExpressionStatement",
                  "src": "2182:61:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 167,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 164,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2261:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 165,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "2261:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "35305f303030",
                          "id": 166,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2274:11:0",
                          "subdenomination": "gwei",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_50000000000000_by_1",
                            "typeString": "int_const 50000000000000"
                          },
                          "value": "50_000"
                        },
                        "src": "2261:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5072696365203e3d2035302c3030302067776569",
                        "id": 168,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2287:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_29a6b86fcc2d34c389e0456d5ffbded0e29b639bdae5ccc8e369a28966c14cb2",
                          "typeString": "literal_string \"Price >= 50,000 gwei\""
                        },
                        "value": "Price >= 50,000 gwei"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_29a6b86fcc2d34c389e0456d5ffbded0e29b639bdae5ccc8e369a28966c14cb2",
                          "typeString": "literal_string \"Price >= 50,000 gwei\""
                        }
                      ],
                      "id": 163,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2253:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2253:57:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 170,
                  "nodeType": "ExpressionStatement",
                  "src": "2253:57:0"
                },
                {
                  "assignments": [
                    172
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 172,
                      "mutability": "mutable",
                      "name": "password",
                      "nameLocation": "2329:8:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 205,
                      "src": "2321:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 171,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2321:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 179,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 176,
                            "name": "_password",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 138,
                            "src": "2356:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 175,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2350:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 174,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "2350:5:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 177,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2350:16:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 173,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "2340:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2340:27:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2321:46:0"
                },
                {
                  "assignments": [
                    182
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 182,
                      "mutability": "mutable",
                      "name": "room",
                      "nameLocation": "2391:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 205,
                      "src": "2378:17:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Rooms_$62_memory_ptr",
                        "typeString": "struct HAV.Rooms"
                      },
                      "typeName": {
                        "id": 181,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 180,
                          "name": "Rooms",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 62,
                          "src": "2378:5:0"
                        },
                        "referencedDeclaration": 62,
                        "src": "2378:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Rooms_$62_storage_ptr",
                          "typeString": "struct HAV.Rooms"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 191,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 184,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2417:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 185,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2417:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 186,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2441:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 187,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "2441:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 188,
                        "name": "password",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 172,
                        "src": "2464:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2486:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 183,
                      "name": "Rooms",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62,
                      "src": "2398:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Rooms_$62_storage_ptr_$",
                        "typeString": "type(struct HAV.Rooms storage pointer)"
                      }
                    },
                    "id": 190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2398:103:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Rooms_$62_memory_ptr",
                      "typeString": "struct HAV.Rooms memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2378:123:0"
                },
                {
                  "expression": {
                    "id": 197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 192,
                        "name": "guests",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67,
                        "src": "2512:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Rooms_$62_storage_$",
                          "typeString": "mapping(address => struct HAV.Rooms storage ref)"
                        }
                      },
                      "id": 195,
                      "indexExpression": {
                        "expression": {
                          "id": 193,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2519:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2519:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2512:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Rooms_$62_storage",
                        "typeString": "struct HAV.Rooms storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 196,
                      "name": "room",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 182,
                      "src": "2533:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Rooms_$62_memory_ptr",
                        "typeString": "struct HAV.Rooms memory"
                      }
                    },
                    "src": "2512:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Rooms_$62_storage",
                      "typeString": "struct HAV.Rooms storage ref"
                    }
                  },
                  "id": 198,
                  "nodeType": "ExpressionStatement",
                  "src": "2512:25:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 200,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2558:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 201,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2558:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 202,
                        "name": "password",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 172,
                        "src": "2570:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 199,
                      "name": "Book",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "2553:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,bytes32)"
                      }
                    },
                    "id": 203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2553:26:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 204,
                  "nodeType": "EmitStatement",
                  "src": "2548:31:0"
                }
              ]
            },
            "functionSelector": "74ca6e2d",
            "id": 206,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 141,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 140,
                  "name": "isValidSender",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 88,
                  "src": "2020:13:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2020:13:0"
              }
            ],
            "name": "book",
            "nameLocation": "1975:4:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 139,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 138,
                  "mutability": "mutable",
                  "name": "_password",
                  "nameLocation": "1994:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 206,
                  "src": "1980:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 137,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1980:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1979:25:0"
            },
            "returnParameters": {
              "id": 142,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2038:0:0"
            },
            "scope": 582,
            "src": "1966:620:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 285,
              "nodeType": "Block",
              "src": "2817:613:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 221,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 216,
                          "name": "_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 208,
                          "src": "2835:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 219,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2855:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 218,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2847:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 217,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2847:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 220,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2847:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2835:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "2120466f722041646472657373",
                        "id": 222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2859:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_10c4c66b16fd18ef7130d69f1572a1d1d5a3b9c39825c9d0a6f7a374aef5933b",
                          "typeString": "literal_string \"! For Address\""
                        },
                        "value": "! For Address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_10c4c66b16fd18ef7130d69f1572a1d1d5a3b9c39825c9d0a6f7a374aef5933b",
                          "typeString": "literal_string \"! For Address\""
                        }
                      ],
                      "id": 215,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2827:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2827:48:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 224,
                  "nodeType": "ExpressionStatement",
                  "src": "2827:48:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2893:18:0",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 227,
                              "name": "_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 208,
                              "src": "2902:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 226,
                            "name": "hasRoom",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 106,
                            "src": "2894:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 228,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2894:17:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752068617665206120726f6f6d2e",
                        "id": 230,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2913:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5bfe672397e32d2ea9c2540672c1b386fe64f9962258793654595165a4865e50",
                          "typeString": "literal_string \"You have a room.\""
                        },
                        "value": "You have a room."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5bfe672397e32d2ea9c2540672c1b386fe64f9962258793654595165a4865e50",
                          "typeString": "literal_string \"You have a room.\""
                        }
                      ],
                      "id": 225,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2885:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2885:47:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 232,
                  "nodeType": "ExpressionStatement",
                  "src": "2885:47:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 236,
                                "name": "_password",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 210,
                                "src": "3031:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "id": 235,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3025:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 234,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "3025:5:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 237,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3025:16:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 238,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "3025:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 239,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3052:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3025:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50617373776f7264206c656e677468203d3d2030",
                        "id": 241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3055:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e23dc15ea9cb1333100f9eb7e2020e89a8d54d01c13a4539f949b39f87a367b7",
                          "typeString": "literal_string \"Password length == 0\""
                        },
                        "value": "Password length == 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e23dc15ea9cb1333100f9eb7e2020e89a8d54d01c13a4539f949b39f87a367b7",
                          "typeString": "literal_string \"Password length == 0\""
                        }
                      ],
                      "id": 233,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3017:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3017:61:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 243,
                  "nodeType": "ExpressionStatement",
                  "src": "3017:61:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 248,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 245,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3096:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 246,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "3096:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "35305f303030",
                          "id": 247,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3109:11:0",
                          "subdenomination": "gwei",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_50000000000000_by_1",
                            "typeString": "int_const 50000000000000"
                          },
                          "value": "50_000"
                        },
                        "src": "3096:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5072696365203e3d2035302c3030302067776569",
                        "id": 249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3122:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_29a6b86fcc2d34c389e0456d5ffbded0e29b639bdae5ccc8e369a28966c14cb2",
                          "typeString": "literal_string \"Price >= 50,000 gwei\""
                        },
                        "value": "Price >= 50,000 gwei"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_29a6b86fcc2d34c389e0456d5ffbded0e29b639bdae5ccc8e369a28966c14cb2",
                          "typeString": "literal_string \"Price >= 50,000 gwei\""
                        }
                      ],
                      "id": 244,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3088:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3088:57:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 251,
                  "nodeType": "ExpressionStatement",
                  "src": "3088:57:0"
                },
                {
                  "assignments": [
                    253
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 253,
                      "mutability": "mutable",
                      "name": "password",
                      "nameLocation": "3164:8:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 285,
                      "src": "3156:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 252,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3156:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 260,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 257,
                            "name": "_password",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 210,
                            "src": "3191:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 256,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3185:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 255,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "3185:5:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 258,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3185:16:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 254,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "3175:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3175:27:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3156:46:0"
                },
                {
                  "assignments": [
                    263
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 263,
                      "mutability": "mutable",
                      "name": "room",
                      "nameLocation": "3226:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 285,
                      "src": "3213:17:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Rooms_$62_memory_ptr",
                        "typeString": "struct HAV.Rooms"
                      },
                      "typeName": {
                        "id": 262,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 261,
                          "name": "Rooms",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 62,
                          "src": "3213:5:0"
                        },
                        "referencedDeclaration": 62,
                        "src": "3213:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Rooms_$62_storage_ptr",
                          "typeString": "struct HAV.Rooms"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 271,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 265,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 208,
                        "src": "3252:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 266,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3274:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "3274:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 268,
                        "name": "password",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 253,
                        "src": "3297:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 269,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3319:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 264,
                      "name": "Rooms",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62,
                      "src": "3233:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Rooms_$62_storage_ptr_$",
                        "typeString": "type(struct HAV.Rooms storage pointer)"
                      }
                    },
                    "id": 270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3233:101:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Rooms_$62_memory_ptr",
                      "typeString": "struct HAV.Rooms memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3213:121:0"
                },
                {
                  "expression": {
                    "id": 276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 272,
                        "name": "guests",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67,
                        "src": "3345:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Rooms_$62_storage_$",
                          "typeString": "mapping(address => struct HAV.Rooms storage ref)"
                        }
                      },
                      "id": 274,
                      "indexExpression": {
                        "id": 273,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 208,
                        "src": "3352:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3345:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Rooms_$62_storage",
                        "typeString": "struct HAV.Rooms storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 275,
                      "name": "room",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 263,
                      "src": "3364:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Rooms_$62_memory_ptr",
                        "typeString": "struct HAV.Rooms memory"
                      }
                    },
                    "src": "3345:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Rooms_$62_storage",
                      "typeString": "struct HAV.Rooms storage ref"
                    }
                  },
                  "id": 277,
                  "nodeType": "ExpressionStatement",
                  "src": "3345:23:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 279,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3392:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3392:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 281,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 208,
                        "src": "3404:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 282,
                        "name": "password",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 253,
                        "src": "3414:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 278,
                      "name": "BookFor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "3384:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,address,bytes32)"
                      }
                    },
                    "id": 283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3384:39:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 284,
                  "nodeType": "EmitStatement",
                  "src": "3379:44:0"
                }
              ]
            },
            "functionSelector": "e2d3edd0",
            "id": 286,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 213,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 212,
                  "name": "isValidSender",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 88,
                  "src": "2799:13:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2799:13:0"
              }
            ],
            "name": "bookFor",
            "nameLocation": "2733:7:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 211,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 208,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "2749:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 286,
                  "src": "2741:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 207,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2741:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 210,
                  "mutability": "mutable",
                  "name": "_password",
                  "nameLocation": "2773:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 286,
                  "src": "2759:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 209,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2759:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2740:43:0"
            },
            "returnParameters": {
              "id": 214,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2817:0:0"
            },
            "scope": 582,
            "src": "2724:706:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 358,
              "nodeType": "Block",
              "src": "3699:592:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 297,
                            "name": "_address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 288,
                            "src": "3725:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 296,
                          "name": "hasRoom",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 106,
                          "src": "3717:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3717:17:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "2120426f6f6b6564",
                        "id": 299,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3736:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a20a7e2dc37e00456a9ba3c68145157e39d28ad8793468fa3545a713db03c22b",
                          "typeString": "literal_string \"! Booked\""
                        },
                        "value": "! Booked"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a20a7e2dc37e00456a9ba3c68145157e39d28ad8793468fa3545a713db03c22b",
                          "typeString": "literal_string \"! Booked\""
                        }
                      ],
                      "id": 295,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3709:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3709:38:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 301,
                  "nodeType": "ExpressionStatement",
                  "src": "3709:38:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 304,
                            "name": "_address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 288,
                            "src": "3775:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 303,
                          "name": "isAllowed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 136,
                          "src": "3765:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 305,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3765:19:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "21205065726d6974746564",
                        "id": 306,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3786:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_019b1aea3912887b2b38a892afb90ce70061270bc2ac9c7837e08b1ab63cafff",
                          "typeString": "literal_string \"! Permitted\""
                        },
                        "value": "! Permitted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_019b1aea3912887b2b38a892afb90ce70061270bc2ac9c7837e08b1ab63cafff",
                          "typeString": "literal_string \"! Permitted\""
                        }
                      ],
                      "id": 302,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3757:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3757:43:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 308,
                  "nodeType": "ExpressionStatement",
                  "src": "3757:43:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 316,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 312,
                                "name": "_key",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 290,
                                "src": "3913:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "id": 311,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3907:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 310,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "3907:5:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 313,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3907:11:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 314,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "3907:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 315,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3929:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3907:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50617373776f7264206c656e677468203d3d2030",
                        "id": 317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3932:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e23dc15ea9cb1333100f9eb7e2020e89a8d54d01c13a4539f949b39f87a367b7",
                          "typeString": "literal_string \"Password length == 0\""
                        },
                        "value": "Password length == 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e23dc15ea9cb1333100f9eb7e2020e89a8d54d01c13a4539f949b39f87a367b7",
                          "typeString": "literal_string \"Password length == 0\""
                        }
                      ],
                      "id": 309,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3899:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3899:56:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 319,
                  "nodeType": "ExpressionStatement",
                  "src": "3899:56:0"
                },
                {
                  "assignments": [
                    321
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 321,
                      "mutability": "mutable",
                      "name": "test_password",
                      "nameLocation": "3973:13:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 358,
                      "src": "3965:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 320,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3965:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 328,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 325,
                            "name": "_key",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 290,
                            "src": "4005:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 324,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3999:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 323,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "3999:5:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 326,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3999:11:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 322,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "3989:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3989:22:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3965:46:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 335,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 330,
                          "name": "test_password",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 321,
                          "src": "4030:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 331,
                              "name": "guests",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67,
                              "src": "4047:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Rooms_$62_storage_$",
                                "typeString": "mapping(address => struct HAV.Rooms storage ref)"
                              }
                            },
                            "id": 333,
                            "indexExpression": {
                              "id": 332,
                              "name": "_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 288,
                              "src": "4054:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4047:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Rooms_$62_storage",
                              "typeString": "struct HAV.Rooms storage ref"
                            }
                          },
                          "id": 334,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "key",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 59,
                          "src": "4047:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "4030:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "212050617373776f7264",
                        "id": 336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4069:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a397282ea5cbecf5a96b80859cd96ca240f9b0503848641eb71bcc8e74c7bb45",
                          "typeString": "literal_string \"! Password\""
                        },
                        "value": "! Password"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a397282ea5cbecf5a96b80859cd96ca240f9b0503848641eb71bcc8e74c7bb45",
                          "typeString": "literal_string \"! Password\""
                        }
                      ],
                      "id": 329,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4022:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4022:60:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 338,
                  "nodeType": "ExpressionStatement",
                  "src": "4022:60:0"
                },
                {
                  "assignments": [
                    340
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 340,
                      "mutability": "mutable",
                      "name": "unlock_time",
                      "nameLocation": "4154:11:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 358,
                      "src": "4146:19:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 339,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4146:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 343,
                  "initialValue": {
                    "expression": {
                      "id": 341,
                      "name": "block",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -4,
                      "src": "4168:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_block",
                        "typeString": "block"
                      }
                    },
                    "id": 342,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "timestamp",
                    "nodeType": "MemberAccess",
                    "src": "4168:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4146:37:0"
                },
                {
                  "expression": {
                    "id": 349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 344,
                          "name": "guests",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 67,
                          "src": "4194:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Rooms_$62_storage_$",
                            "typeString": "mapping(address => struct HAV.Rooms storage ref)"
                          }
                        },
                        "id": 346,
                        "indexExpression": {
                          "id": 345,
                          "name": "_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 288,
                          "src": "4201:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4194:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Rooms_$62_storage",
                          "typeString": "struct HAV.Rooms storage ref"
                        }
                      },
                      "id": 347,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "door_open",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 61,
                      "src": "4194:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 348,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4223:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4194:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 350,
                  "nodeType": "ExpressionStatement",
                  "src": "4194:33:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 352,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4250:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 353,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4250:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 354,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 288,
                        "src": "4262:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 355,
                        "name": "unlock_time",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 340,
                        "src": "4272:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 351,
                      "name": "Unlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23,
                      "src": "4243:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4243:41:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 357,
                  "nodeType": "EmitStatement",
                  "src": "4238:46:0"
                }
              ]
            },
            "functionSelector": "3ead71cb",
            "id": 359,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 293,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 292,
                  "name": "isValidSender",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 88,
                  "src": "3611:13:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "3611:13:0"
              }
            ],
            "name": "unlock",
            "nameLocation": "3559:6:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 291,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 288,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "3574:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 359,
                  "src": "3566:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 287,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3566:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 290,
                  "mutability": "mutable",
                  "name": "_key",
                  "nameLocation": "3598:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 359,
                  "src": "3584:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 289,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3584:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3565:38:0"
            },
            "returnParameters": {
              "id": 294,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3699:0:0"
            },
            "scope": 582,
            "src": "3550:741:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 399,
              "nodeType": "Block",
              "src": "4536:252:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 368,
                            "name": "_address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 361,
                            "src": "4562:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 367,
                          "name": "hasRoom",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 106,
                          "src": "4554:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 369,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4554:17:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "2120426f6f6b6564",
                        "id": 370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4573:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a20a7e2dc37e00456a9ba3c68145157e39d28ad8793468fa3545a713db03c22b",
                          "typeString": "literal_string \"! Booked\""
                        },
                        "value": "! Booked"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a20a7e2dc37e00456a9ba3c68145157e39d28ad8793468fa3545a713db03c22b",
                          "typeString": "literal_string \"! Booked\""
                        }
                      ],
                      "id": 366,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4546:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4546:38:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 372,
                  "nodeType": "ExpressionStatement",
                  "src": "4546:38:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 375,
                            "name": "_address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 361,
                            "src": "4612:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 374,
                          "name": "isAllowed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 136,
                          "src": "4602:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 376,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4602:19:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "21205065726d6974746564",
                        "id": 377,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4623:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_019b1aea3912887b2b38a892afb90ce70061270bc2ac9c7837e08b1ab63cafff",
                          "typeString": "literal_string \"! Permitted\""
                        },
                        "value": "! Permitted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_019b1aea3912887b2b38a892afb90ce70061270bc2ac9c7837e08b1ab63cafff",
                          "typeString": "literal_string \"! Permitted\""
                        }
                      ],
                      "id": 373,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4594:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4594:43:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 379,
                  "nodeType": "ExpressionStatement",
                  "src": "4594:43:0"
                },
                {
                  "assignments": [
                    381
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 381,
                      "mutability": "mutable",
                      "name": "lock_time",
                      "nameLocation": "4656:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 399,
                      "src": "4648:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 380,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4648:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 384,
                  "initialValue": {
                    "expression": {
                      "id": 382,
                      "name": "block",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -4,
                      "src": "4668:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_block",
                        "typeString": "block"
                      }
                    },
                    "id": 383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "timestamp",
                    "nodeType": "MemberAccess",
                    "src": "4668:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4648:35:0"
                },
                {
                  "expression": {
                    "id": 390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 385,
                          "name": "guests",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 67,
                          "src": "4694:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Rooms_$62_storage_$",
                            "typeString": "mapping(address => struct HAV.Rooms storage ref)"
                          }
                        },
                        "id": 387,
                        "indexExpression": {
                          "id": 386,
                          "name": "_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 361,
                          "src": "4701:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4694:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Rooms_$62_storage",
                          "typeString": "struct HAV.Rooms storage ref"
                        }
                      },
                      "id": 388,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "door_open",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 61,
                      "src": "4694:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 389,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4723:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "4694:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 391,
                  "nodeType": "ExpressionStatement",
                  "src": "4694:34:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 393,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4749:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4749:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 395,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 361,
                        "src": "4761:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 396,
                        "name": "lock_time",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 381,
                        "src": "4771:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 392,
                      "name": "Lock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31,
                      "src": "4744:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4744:37:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 398,
                  "nodeType": "EmitStatement",
                  "src": "4739:42:0"
                }
              ]
            },
            "functionSelector": "f435f5a7",
            "id": 400,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 364,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 363,
                  "name": "isValidSender",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 88,
                  "src": "4448:13:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "4448:13:0"
              }
            ],
            "name": "lock",
            "nameLocation": "4418:4:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 362,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 361,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "4431:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 400,
                  "src": "4423:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 360,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4423:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4422:18:0"
            },
            "returnParameters": {
              "id": 365,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4536:0:0"
            },
            "scope": 582,
            "src": "4409:379:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 452,
              "nodeType": "Block",
              "src": "4948:359:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 409,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4974:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 410,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4974:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 408,
                          "name": "hasRoom",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 106,
                          "src": "4966:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 411,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4966:19:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "2120526f6f6d2e",
                        "id": 412,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4987:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6a6c8fd9bf74ae07150dcc619e8658ec9bc855a7cb6fc117f55d4dbc09b772d2",
                          "typeString": "literal_string \"! Room.\""
                        },
                        "value": "! Room."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6a6c8fd9bf74ae07150dcc619e8658ec9bc855a7cb6fc117f55d4dbc09b772d2",
                          "typeString": "literal_string \"! Room.\""
                        }
                      ],
                      "id": 407,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4958:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4958:39:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 414,
                  "nodeType": "ExpressionStatement",
                  "src": "4958:39:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 421,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 416,
                          "name": "_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 402,
                          "src": "5092:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 419,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5112:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 418,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5104:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 417,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5104:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 420,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5104:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5092:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "212041646472657373",
                        "id": 422,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5116:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6657473f620eaf9720c805e2a21f348f4d9e9e8d81bc1f14722d256c4d2c18c9",
                          "typeString": "literal_string \"! Address\""
                        },
                        "value": "! Address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6657473f620eaf9720c805e2a21f348f4d9e9e8d81bc1f14722d256c4d2c18c9",
                          "typeString": "literal_string \"! Address\""
                        }
                      ],
                      "id": 415,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5084:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 423,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5084:44:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 424,
                  "nodeType": "ExpressionStatement",
                  "src": "5084:44:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 432,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "5147:32:0",
                        "subExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 426,
                              "name": "approvals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 73,
                              "src": "5148:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                                "typeString": "mapping(address => mapping(address => bool))"
                              }
                            },
                            "id": 429,
                            "indexExpression": {
                              "expression": {
                                "id": 427,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5158:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 428,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5158:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5148:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 431,
                          "indexExpression": {
                            "id": 430,
                            "name": "_address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 402,
                            "src": "5170:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5148:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c726561647920617070726f766564",
                        "id": 433,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5181:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_16e598d16040adb87b6d85232208bb042b358c0adf26dfdb79ecea728dcc57ac",
                          "typeString": "literal_string \"Already approved\""
                        },
                        "value": "Already approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_16e598d16040adb87b6d85232208bb042b358c0adf26dfdb79ecea728dcc57ac",
                          "typeString": "literal_string \"Already approved\""
                        }
                      ],
                      "id": 425,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5139:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 434,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5139:61:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 435,
                  "nodeType": "ExpressionStatement",
                  "src": "5139:61:0"
                },
                {
                  "expression": {
                    "id": 443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 436,
                          "name": "approvals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73,
                          "src": "5211:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(address => bool))"
                          }
                        },
                        "id": 440,
                        "indexExpression": {
                          "expression": {
                            "id": 437,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5221:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 438,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5221:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5211:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 441,
                      "indexExpression": {
                        "id": 439,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 402,
                        "src": "5233:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5211:31:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 442,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5245:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "5211:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 444,
                  "nodeType": "ExpressionStatement",
                  "src": "5211:38:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 446,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5273:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 447,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5273:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 448,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 402,
                        "src": "5285:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 449,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5295:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 445,
                      "name": "Approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39,
                      "src": "5265:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,bool)"
                      }
                    },
                    "id": 450,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5265:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 451,
                  "nodeType": "EmitStatement",
                  "src": "5260:40:0"
                }
              ]
            },
            "functionSelector": "daea85c5",
            "id": 453,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 405,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 404,
                  "name": "isValidSender",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 88,
                  "src": "4930:13:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "4930:13:0"
              }
            ],
            "name": "approve",
            "nameLocation": "4897:7:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 403,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 402,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "4913:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 453,
                  "src": "4905:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 401,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4905:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4904:18:0"
            },
            "returnParameters": {
              "id": 406,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4948:0:0"
            },
            "scope": 582,
            "src": "4888:419:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 504,
              "nodeType": "Block",
              "src": "5465:358:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 462,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "5491:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 463,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5491:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 461,
                          "name": "hasRoom",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 106,
                          "src": "5483:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 464,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5483:19:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "2120526f6f6d2e",
                        "id": 465,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5504:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6a6c8fd9bf74ae07150dcc619e8658ec9bc855a7cb6fc117f55d4dbc09b772d2",
                          "typeString": "literal_string \"! Room.\""
                        },
                        "value": "! Room."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6a6c8fd9bf74ae07150dcc619e8658ec9bc855a7cb6fc117f55d4dbc09b772d2",
                          "typeString": "literal_string \"! Room.\""
                        }
                      ],
                      "id": 460,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5475:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5475:39:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 467,
                  "nodeType": "ExpressionStatement",
                  "src": "5475:39:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 474,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 469,
                          "name": "_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 455,
                          "src": "5609:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 472,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5629:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 471,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5621:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 470,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5621:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 473,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5621:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5609:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "212041646472657373",
                        "id": 475,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5633:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6657473f620eaf9720c805e2a21f348f4d9e9e8d81bc1f14722d256c4d2c18c9",
                          "typeString": "literal_string \"! Address\""
                        },
                        "value": "! Address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6657473f620eaf9720c805e2a21f348f4d9e9e8d81bc1f14722d256c4d2c18c9",
                          "typeString": "literal_string \"! Address\""
                        }
                      ],
                      "id": 468,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5601:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 476,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5601:44:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 477,
                  "nodeType": "ExpressionStatement",
                  "src": "5601:44:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 479,
                            "name": "approvals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73,
                            "src": "5664:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                              "typeString": "mapping(address => mapping(address => bool))"
                            }
                          },
                          "id": 482,
                          "indexExpression": {
                            "expression": {
                              "id": 480,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "5674:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 481,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5674:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5664:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 484,
                        "indexExpression": {
                          "id": 483,
                          "name": "_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 455,
                          "src": "5686:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5664:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c7265616479207265766f6b6564",
                        "id": 485,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5697:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ff30964d1d2e395450954287443a47ce4b7aeb0e55cf0d440f942617fe7e784c",
                          "typeString": "literal_string \"Already revoked\""
                        },
                        "value": "Already revoked"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ff30964d1d2e395450954287443a47ce4b7aeb0e55cf0d440f942617fe7e784c",
                          "typeString": "literal_string \"Already revoked\""
                        }
                      ],
                      "id": 478,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5656:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 486,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5656:59:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 487,
                  "nodeType": "ExpressionStatement",
                  "src": "5656:59:0"
                },
                {
                  "expression": {
                    "id": 495,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 488,
                          "name": "approvals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73,
                          "src": "5726:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(address => bool))"
                          }
                        },
                        "id": 492,
                        "indexExpression": {
                          "expression": {
                            "id": 489,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5736:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 490,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5736:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5726:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 493,
                      "indexExpression": {
                        "id": 491,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 455,
                        "src": "5748:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5726:31:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 494,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5760:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "5726:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 496,
                  "nodeType": "ExpressionStatement",
                  "src": "5726:39:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 498,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5788:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 499,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5788:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 500,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 455,
                        "src": "5800:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 501,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5810:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 497,
                      "name": "Revoke",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47,
                      "src": "5781:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,bool)"
                      }
                    },
                    "id": 502,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5781:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 503,
                  "nodeType": "EmitStatement",
                  "src": "5776:40:0"
                }
              ]
            },
            "functionSelector": "74a8f103",
            "id": 505,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 458,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 457,
                  "name": "isValidSender",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 88,
                  "src": "5447:13:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "5447:13:0"
              }
            ],
            "name": "revoke",
            "nameLocation": "5415:6:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 456,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 455,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "5430:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 505,
                  "src": "5422:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 454,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5422:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5421:18:0"
            },
            "returnParameters": {
              "id": 459,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5465:0:0"
            },
            "scope": 582,
            "src": "5406:417:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 548,
              "nodeType": "Block",
              "src": "5959:323:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 514,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "5985:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 515,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5985:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 513,
                          "name": "hasRoom",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 106,
                          "src": "5977:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 516,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5977:19:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "2120526f6f6d2e",
                        "id": 517,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5998:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6a6c8fd9bf74ae07150dcc619e8658ec9bc855a7cb6fc117f55d4dbc09b772d2",
                          "typeString": "literal_string \"! Room.\""
                        },
                        "value": "! Room."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6a6c8fd9bf74ae07150dcc619e8658ec9bc855a7cb6fc117f55d4dbc09b772d2",
                          "typeString": "literal_string \"! Room.\""
                        }
                      ],
                      "id": 512,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5969:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 518,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5969:39:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 519,
                  "nodeType": "ExpressionStatement",
                  "src": "5969:39:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 527,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 521,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "6101:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 522,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6101:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 523,
                              "name": "guests",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67,
                              "src": "6115:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Rooms_$62_storage_$",
                                "typeString": "mapping(address => struct HAV.Rooms storage ref)"
                              }
                            },
                            "id": 525,
                            "indexExpression": {
                              "id": 524,
                              "name": "_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 507,
                              "src": "6122:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6115:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Rooms_$62_storage",
                              "typeString": "struct HAV.Rooms storage ref"
                            }
                          },
                          "id": 526,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "occupant",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 55,
                          "src": "6115:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6101:39:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "21204f776e6564",
                        "id": 528,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6142:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_de86e30487ee556567ff5cd8661021729f1104c6f0fc250ee63631a47db6d2bf",
                          "typeString": "literal_string \"! Owned\""
                        },
                        "value": "! Owned"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_de86e30487ee556567ff5cd8661021729f1104c6f0fc250ee63631a47db6d2bf",
                          "typeString": "literal_string \"! Owned\""
                        }
                      ],
                      "id": 520,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6093:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6093:59:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 530,
                  "nodeType": "ExpressionStatement",
                  "src": "6093:59:0"
                },
                {
                  "assignments": [
                    532
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 532,
                      "mutability": "mutable",
                      "name": "left",
                      "nameLocation": "6179:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 548,
                      "src": "6171:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 531,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6171:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 535,
                  "initialValue": {
                    "expression": {
                      "id": 533,
                      "name": "block",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -4,
                      "src": "6186:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_block",
                        "typeString": "block"
                      }
                    },
                    "id": 534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "timestamp",
                    "nodeType": "MemberAccess",
                    "src": "6186:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6171:30:0"
                },
                {
                  "expression": {
                    "id": 540,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "6211:25:0",
                    "subExpression": {
                      "baseExpression": {
                        "id": 536,
                        "name": "guests",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67,
                        "src": "6218:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Rooms_$62_storage_$",
                          "typeString": "mapping(address => struct HAV.Rooms storage ref)"
                        }
                      },
                      "id": 539,
                      "indexExpression": {
                        "expression": {
                          "id": 537,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6225:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 538,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6225:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6218:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Rooms_$62_storage",
                        "typeString": "struct HAV.Rooms storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 541,
                  "nodeType": "ExpressionStatement",
                  "src": "6211:25:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 543,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6258:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 544,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6258:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 545,
                        "name": "left",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 532,
                        "src": "6270:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 542,
                      "name": "Leave",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53,
                      "src": "6252:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6252:23:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 547,
                  "nodeType": "EmitStatement",
                  "src": "6247:28:0"
                }
              ]
            },
            "functionSelector": "bedf77a6",
            "id": 549,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 510,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 509,
                  "name": "isValidSender",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 88,
                  "src": "5941:13:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "5941:13:0"
              }
            ],
            "name": "leave",
            "nameLocation": "5910:5:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 508,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 507,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "5924:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 549,
                  "src": "5916:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 506,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5916:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5915:18:0"
            },
            "returnParameters": {
              "id": 511,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5959:0:0"
            },
            "scope": 582,
            "src": "5901:381:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 580,
              "nodeType": "Block",
              "src": "6441:234:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 564,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 559,
                          "name": "_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 551,
                          "src": "6459:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 562,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6479:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 561,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6471:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 560,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6471:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 563,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6471:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6459:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "212041646472657373",
                        "id": 565,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6483:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6657473f620eaf9720c805e2a21f348f4d9e9e8d81bc1f14722d256c4d2c18c9",
                          "typeString": "literal_string \"! Address\""
                        },
                        "value": "! Address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6657473f620eaf9720c805e2a21f348f4d9e9e8d81bc1f14722d256c4d2c18c9",
                          "typeString": "literal_string \"! Address\""
                        }
                      ],
                      "id": 558,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6451:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 566,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6451:44:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 567,
                  "nodeType": "ExpressionStatement",
                  "src": "6451:44:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 570,
                            "name": "_address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 551,
                            "src": "6521:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 569,
                          "name": "hasRoom",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 106,
                          "src": "6513:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 571,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6513:17:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "2120526f6f6d2e",
                        "id": 572,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6532:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6a6c8fd9bf74ae07150dcc619e8658ec9bc855a7cb6fc117f55d4dbc09b772d2",
                          "typeString": "literal_string \"! Room.\""
                        },
                        "value": "! Room."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6a6c8fd9bf74ae07150dcc619e8658ec9bc855a7cb6fc117f55d4dbc09b772d2",
                          "typeString": "literal_string \"! Room.\""
                        }
                      ],
                      "id": 568,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6505:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6505:37:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 574,
                  "nodeType": "ExpressionStatement",
                  "src": "6505:37:0"
                },
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 575,
                        "name": "guests",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67,
                        "src": "6643:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Rooms_$62_storage_$",
                          "typeString": "mapping(address => struct HAV.Rooms storage ref)"
                        }
                      },
                      "id": 577,
                      "indexExpression": {
                        "id": 576,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 551,
                        "src": "6650:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6643:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Rooms_$62_storage",
                        "typeString": "struct HAV.Rooms storage ref"
                      }
                    },
                    "id": 578,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "occupant",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 55,
                    "src": "6643:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 557,
                  "id": 579,
                  "nodeType": "Return",
                  "src": "6636:32:0"
                }
              ]
            },
            "functionSelector": "c9409148",
            "id": 581,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 554,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 553,
                  "name": "isValidSender",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 88,
                  "src": "6406:13:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "6406:13:0"
              }
            ],
            "name": "viewOwner",
            "nameLocation": "6366:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 552,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 551,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "6384:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 581,
                  "src": "6376:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 550,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6376:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6375:18:0"
            },
            "returnParameters": {
              "id": 557,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 556,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 581,
                  "src": "6428:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 555,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6428:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6427:9:0"
            },
            "scope": 582,
            "src": "6357:318:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 583,
        "src": "181:6497:0",
        "usedErrors": []
      }
    ],
    "src": "32:6646:0"
  },
  "bytecode": "608060405234801561001057600080fd5b50610dfc806100206000396000f3fe60806040526004361061007b5760003560e01c8063c94091481161004e578063c9409148146100f5578063daea85c514610131578063e2d3edd014610151578063f435f5a71461016457600080fd5b80633ead71cb1461008057806374a8f103146100a257806374ca6e2d146100c2578063bedf77a6146100d5575b600080fd5b34801561008c57600080fd5b506100a061009b366004610cae565b610184565b005b3480156100ae57600080fd5b506100a06100bd366004610cfc565b61031d565b6100a06100d0366004610d17565b610457565b3480156100e157600080fd5b506100a06100f0366004610cfc565b6105dd565b34801561010157600080fd5b50610115610110366004610cfc565b6106e9565b6040516001600160a01b03909116815260200160405180910390f35b34801561013d57600080fd5b506100a061014c366004610cfc565b610775565b6100a061015f366004610cae565b6108ae565b34801561017057600080fd5b506100a061017f366004610cfc565b610a7c565b336101aa5760405162461bcd60e51b81526004016101a190610d54565b60405180910390fd5b6101b382610b7f565b6101ea5760405162461bcd60e51b81526020600482015260086024820152670848109bdbdad95960c21b60448201526064016101a1565b6101f382610b9f565b61022d5760405162461bcd60e51b815260206004820152600b60248201526a084814195c9b5a5d1d195960aa1b60448201526064016101a1565b805161024b5760405162461bcd60e51b81526004016101a190610d77565b80516020808301919091206001600160a01b03841660009081529182905260409091206002015481146102ad5760405162461bcd60e51b815260206004820152600a602482015269084814185cdcdddbdc9960b21b60448201526064016101a1565b6001600160a01b03831660008181526020818152604091829020600301805460ff1916600117905581513381529081019290925242908201819052907fc1c90b8e0705b212262c0dbd7580efe1862c2f185bf96899226f7596beb2db09906060015b60405180910390a150505050565b3361033a5760405162461bcd60e51b81526004016101a190610d54565b61034333610b7f565b61035f5760405162461bcd60e51b81526004016101a190610da5565b6001600160a01b0381166103855760405162461bcd60e51b81526004016101a190610d54565b3360009081526001602090815260408083206001600160a01b038516845290915290205460ff166103ea5760405162461bcd60e51b815260206004820152600f60248201526e105b1c9958591e481c995d9bdad959608a1b60448201526064016101a1565b3360008181526001602090815260408083206001600160a01b038616808552908352818420805460ff191690558151948552918401919091528201527fb10892907d1785e9c412fba4152a8282bcbb3a1b8e71701036c341cf9d5704ae906060015b60405180910390a150565b336104745760405162461bcd60e51b81526004016101a190610d54565b61047d33610b7f565b156104bd5760405162461bcd60e51b815260206004820152601060248201526f2cb7ba903430bb329030903937b7b69760811b60448201526064016101a1565b80516104db5760405162461bcd60e51b81526004016101a190610d77565b652d79883d20003410156105285760405162461bcd60e51b81526020600482015260146024820152735072696365203e3d2035302c303030206777656960601b60448201526064016101a1565b805160208083019190912060408051608081018252338082523482860190815282840185815260006060850181815284825281895290869020855181546001600160a01b0319166001600160a01b039091161781559251600184015590516002830155516003909101805460ff1916911515919091179055825190815293840183905291927fba49a8318d072c8e8dc370612e44c40798bf6df880b71878a5c0fd0aea854eed910160405180910390a1505050565b336105fa5760405162461bcd60e51b81526004016101a190610d54565b61060333610b7f565b61061f5760405162461bcd60e51b81526004016101a190610da5565b6001600160a01b038181166000908152602081905260409020541633146106725760405162461bcd60e51b8152602060048201526007602482015266084813dddb995960ca1b60448201526064016101a1565b3360008181526020818152604080832080546001600160a01b03191681556001810184905560028101939093556003909201805460ff19169055815192835242908301819052917f61a26f7c17d8780c095ccfa67e689a13ee4e06ddce3da18956369f4a396100e891015b60405180910390a15050565b6000336107085760405162461bcd60e51b81526004016101a190610d54565b6001600160a01b03821661072e5760405162461bcd60e51b81526004016101a190610d54565b61073782610b7f565b6107535760405162461bcd60e51b81526004016101a190610da5565b506001600160a01b03808216600090815260208190526040902054165b919050565b336107925760405162461bcd60e51b81526004016101a190610d54565b61079b33610b7f565b6107b75760405162461bcd60e51b81526004016101a190610da5565b6001600160a01b0381166107dd5760405162461bcd60e51b81526004016101a190610d54565b3360009081526001602090815260408083206001600160a01b038516845290915290205460ff16156108445760405162461bcd60e51b815260206004820152601060248201526f105b1c9958591e48185c1c1c9bdd995960821b60448201526064016101a1565b3360008181526001602081815260408084206001600160a01b03871680865290835293819020805460ff191684179055805194855290840192909252908201527faaf27816598688732a80b26fb3b6d0bc241c08f38a6d8ca2a0723f4835d593d69060600161044c565b336108cb5760405162461bcd60e51b81526004016101a190610d54565b6001600160a01b0382166109115760405162461bcd60e51b815260206004820152600d60248201526c2120466f72204164647265737360981b60448201526064016101a1565b61091a82610b7f565b1561095a5760405162461bcd60e51b815260206004820152601060248201526f2cb7ba903430bb329030903937b7b69760811b60448201526064016101a1565b80516109785760405162461bcd60e51b81526004016101a190610d77565b652d79883d20003410156109c55760405162461bcd60e51b81526020600482015260146024820152735072696365203e3d2035302c303030206777656960601b60448201526064016101a1565b8051602080830191909120604080516080810182526001600160a01b038681168083523483870190815283850186815260006060808701828152858352828b5291889020875181546001600160a01b03191697169690961786559251600186015590516002850155516003909301805460ff19169315159390931790925583513381529586015291840183905291927f91226c3460ae6c8efea379cb28ba0d3c10b90ed7104c7df82f1a8617b6278857910161030f565b33610a995760405162461bcd60e51b81526004016101a190610d54565b610aa281610b7f565b610ad95760405162461bcd60e51b81526020600482015260086024820152670848109bdbdad95960c21b60448201526064016101a1565b610ae281610b9f565b610b1c5760405162461bcd60e51b815260206004820152600b60248201526a084814195c9b5a5d1d195960aa1b60448201526064016101a1565b6001600160a01b03811660008181526020818152604091829020600301805460ff1916905581513381529081019290925242908201819052907fec36c0364d931187a76cf66d7eee08fad0ec2e8b7458a8d8b26b36769d4d13f3906060016106dd565b6001600160a01b0390811660009081526020819052604090205416151590565b6001600160a01b0380821660009081526020819052604081205490911633811480610bed57506001600160a01b038316600090815260016020908152604080832033845290915290205460ff165b9392505050565b80356001600160a01b038116811461077057600080fd5b634e487b7160e01b600052604160045260246000fd5b600082601f830112610c3257600080fd5b813567ffffffffffffffff80821115610c4d57610c4d610c0b565b604051601f8301601f19908116603f01168101908282118183101715610c7557610c75610c0b565b81604052838152866020858801011115610c8e57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060408385031215610cc157600080fd5b610cca83610bf4565b9150602083013567ffffffffffffffff811115610ce657600080fd5b610cf285828601610c21565b9150509250929050565b600060208284031215610d0e57600080fd5b610bed82610bf4565b600060208284031215610d2957600080fd5b813567ffffffffffffffff811115610d4057600080fd5b610d4c84828501610c21565b949350505050565b60208082526009908201526821204164647265737360b81b604082015260600190565b602080825260149082015273050617373776f7264206c656e677468203d3d20360641b604082015260600190565b60208082526007908201526610902937b7b69760c91b60408201526060019056fea26469706673582212203f4f6d90c01ad87c0fb70f118f17db8a4afceaa7fb539bcdcbbb8c03f299028664736f6c634300080c0033",
  "bytecodeSha1": "5155fa34e9b6aaff9e4fc9c79162d435bac81663",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "HAV",
  "coverageMap": {
    "branches": {
      "0": {
        "HAV.approve": {
          "52": [
            4966,
            4985,
            true
          ],
          "53": [
            5092,
            5114,
            true
          ],
          "54": [
            5147,
            5179,
            true
          ]
        },
        "HAV.book": {
          "46": [
            2056,
            2076,
            true
          ],
          "47": [
            2261,
            2285,
            true
          ]
        },
        "HAV.bookFor": {
          "55": [
            2835,
            2857,
            true
          ],
          "56": [
            2893,
            2911,
            true
          ],
          "57": [
            3096,
            3120,
            true
          ]
        },
        "HAV.leave": {
          "48": [
            5977,
            5996,
            true
          ],
          "49": [
            6101,
            6140,
            true
          ]
        },
        "HAV.lock": {
          "58": [
            4554,
            4571,
            true
          ],
          "59": [
            4602,
            4621,
            true
          ]
        },
        "HAV.revoke": {
          "43": [
            5483,
            5502,
            true
          ],
          "44": [
            5609,
            5631,
            true
          ],
          "45": [
            5664,
            5695,
            true
          ]
        },
        "HAV.unlock": {
          "40": [
            3717,
            3734,
            true
          ],
          "41": [
            3765,
            3784,
            true
          ],
          "42": [
            4030,
            4067,
            true
          ]
        },
        "HAV.viewOwner": {
          "50": [
            6459,
            6481,
            true
          ],
          "51": [
            6513,
            6530,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "HAV.approve": {
          "23": [
            4958,
            4997
          ],
          "24": [
            5084,
            5128
          ],
          "25": [
            5139,
            5200
          ],
          "26": [
            5211,
            5249
          ],
          "27": [
            5260,
            5300
          ]
        },
        "HAV.book": {
          "11": [
            2048,
            2097
          ],
          "12": [
            2182,
            2243
          ],
          "13": [
            2253,
            2310
          ],
          "14": [
            2512,
            2537
          ],
          "15": [
            2548,
            2579
          ]
        },
        "HAV.bookFor": {
          "28": [
            2827,
            2875
          ],
          "29": [
            2885,
            2932
          ],
          "30": [
            3017,
            3078
          ],
          "31": [
            3088,
            3145
          ],
          "32": [
            3345,
            3368
          ],
          "33": [
            3379,
            3423
          ]
        },
        "HAV.hasRoom": {
          "38": [
            1313,
            1359
          ]
        },
        "HAV.isAllowed": {
          "39": [
            1643,
            1710
          ]
        },
        "HAV.leave": {
          "16": [
            5969,
            6008
          ],
          "17": [
            6093,
            6152
          ],
          "18": [
            6211,
            6236
          ],
          "19": [
            6247,
            6275
          ]
        },
        "HAV.lock": {
          "34": [
            4546,
            4584
          ],
          "35": [
            4594,
            4637
          ],
          "36": [
            4694,
            4728
          ],
          "37": [
            4739,
            4781
          ]
        },
        "HAV.revoke": {
          "6": [
            5475,
            5514
          ],
          "7": [
            5601,
            5645
          ],
          "8": [
            5656,
            5715
          ],
          "9": [
            5726,
            5765
          ],
          "10": [
            5776,
            5816
          ]
        },
        "HAV.unlock": {
          "0": [
            3709,
            3747
          ],
          "1": [
            3757,
            3800
          ],
          "2": [
            3899,
            3955
          ],
          "3": [
            4022,
            4082
          ],
          "4": [
            4194,
            4227
          ],
          "5": [
            4238,
            4284
          ]
        },
        "HAV.viewOwner": {
          "20": [
            6451,
            6495
          ],
          "21": [
            6505,
            6542
          ],
          "22": [
            6636,
            6668
          ]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "60806040526004361061007b5760003560e01c8063c94091481161004e578063c9409148146100f5578063daea85c514610131578063e2d3edd014610151578063f435f5a71461016457600080fd5b80633ead71cb1461008057806374a8f103146100a257806374ca6e2d146100c2578063bedf77a6146100d5575b600080fd5b34801561008c57600080fd5b506100a061009b366004610cae565b610184565b005b3480156100ae57600080fd5b506100a06100bd366004610cfc565b61031d565b6100a06100d0366004610d17565b610457565b3480156100e157600080fd5b506100a06100f0366004610cfc565b6105dd565b34801561010157600080fd5b50610115610110366004610cfc565b6106e9565b6040516001600160a01b03909116815260200160405180910390f35b34801561013d57600080fd5b506100a061014c366004610cfc565b610775565b6100a061015f366004610cae565b6108ae565b34801561017057600080fd5b506100a061017f366004610cfc565b610a7c565b336101aa5760405162461bcd60e51b81526004016101a190610d54565b60405180910390fd5b6101b382610b7f565b6101ea5760405162461bcd60e51b81526020600482015260086024820152670848109bdbdad95960c21b60448201526064016101a1565b6101f382610b9f565b61022d5760405162461bcd60e51b815260206004820152600b60248201526a084814195c9b5a5d1d195960aa1b60448201526064016101a1565b805161024b5760405162461bcd60e51b81526004016101a190610d77565b80516020808301919091206001600160a01b03841660009081529182905260409091206002015481146102ad5760405162461bcd60e51b815260206004820152600a602482015269084814185cdcdddbdc9960b21b60448201526064016101a1565b6001600160a01b03831660008181526020818152604091829020600301805460ff1916600117905581513381529081019290925242908201819052907fc1c90b8e0705b212262c0dbd7580efe1862c2f185bf96899226f7596beb2db09906060015b60405180910390a150505050565b3361033a5760405162461bcd60e51b81526004016101a190610d54565b61034333610b7f565b61035f5760405162461bcd60e51b81526004016101a190610da5565b6001600160a01b0381166103855760405162461bcd60e51b81526004016101a190610d54565b3360009081526001602090815260408083206001600160a01b038516845290915290205460ff166103ea5760405162461bcd60e51b815260206004820152600f60248201526e105b1c9958591e481c995d9bdad959608a1b60448201526064016101a1565b3360008181526001602090815260408083206001600160a01b038616808552908352818420805460ff191690558151948552918401919091528201527fb10892907d1785e9c412fba4152a8282bcbb3a1b8e71701036c341cf9d5704ae906060015b60405180910390a150565b336104745760405162461bcd60e51b81526004016101a190610d54565b61047d33610b7f565b156104bd5760405162461bcd60e51b815260206004820152601060248201526f2cb7ba903430bb329030903937b7b69760811b60448201526064016101a1565b80516104db5760405162461bcd60e51b81526004016101a190610d77565b652d79883d20003410156105285760405162461bcd60e51b81526020600482015260146024820152735072696365203e3d2035302c303030206777656960601b60448201526064016101a1565b805160208083019190912060408051608081018252338082523482860190815282840185815260006060850181815284825281895290869020855181546001600160a01b0319166001600160a01b039091161781559251600184015590516002830155516003909101805460ff1916911515919091179055825190815293840183905291927fba49a8318d072c8e8dc370612e44c40798bf6df880b71878a5c0fd0aea854eed910160405180910390a1505050565b336105fa5760405162461bcd60e51b81526004016101a190610d54565b61060333610b7f565b61061f5760405162461bcd60e51b81526004016101a190610da5565b6001600160a01b038181166000908152602081905260409020541633146106725760405162461bcd60e51b8152602060048201526007602482015266084813dddb995960ca1b60448201526064016101a1565b3360008181526020818152604080832080546001600160a01b03191681556001810184905560028101939093556003909201805460ff19169055815192835242908301819052917f61a26f7c17d8780c095ccfa67e689a13ee4e06ddce3da18956369f4a396100e891015b60405180910390a15050565b6000336107085760405162461bcd60e51b81526004016101a190610d54565b6001600160a01b03821661072e5760405162461bcd60e51b81526004016101a190610d54565b61073782610b7f565b6107535760405162461bcd60e51b81526004016101a190610da5565b506001600160a01b03808216600090815260208190526040902054165b919050565b336107925760405162461bcd60e51b81526004016101a190610d54565b61079b33610b7f565b6107b75760405162461bcd60e51b81526004016101a190610da5565b6001600160a01b0381166107dd5760405162461bcd60e51b81526004016101a190610d54565b3360009081526001602090815260408083206001600160a01b038516845290915290205460ff16156108445760405162461bcd60e51b815260206004820152601060248201526f105b1c9958591e48185c1c1c9bdd995960821b60448201526064016101a1565b3360008181526001602081815260408084206001600160a01b03871680865290835293819020805460ff191684179055805194855290840192909252908201527faaf27816598688732a80b26fb3b6d0bc241c08f38a6d8ca2a0723f4835d593d69060600161044c565b336108cb5760405162461bcd60e51b81526004016101a190610d54565b6001600160a01b0382166109115760405162461bcd60e51b815260206004820152600d60248201526c2120466f72204164647265737360981b60448201526064016101a1565b61091a82610b7f565b1561095a5760405162461bcd60e51b815260206004820152601060248201526f2cb7ba903430bb329030903937b7b69760811b60448201526064016101a1565b80516109785760405162461bcd60e51b81526004016101a190610d77565b652d79883d20003410156109c55760405162461bcd60e51b81526020600482015260146024820152735072696365203e3d2035302c303030206777656960601b60448201526064016101a1565b8051602080830191909120604080516080810182526001600160a01b038681168083523483870190815283850186815260006060808701828152858352828b5291889020875181546001600160a01b03191697169690961786559251600186015590516002850155516003909301805460ff19169315159390931790925583513381529586015291840183905291927f91226c3460ae6c8efea379cb28ba0d3c10b90ed7104c7df82f1a8617b6278857910161030f565b33610a995760405162461bcd60e51b81526004016101a190610d54565b610aa281610b7f565b610ad95760405162461bcd60e51b81526020600482015260086024820152670848109bdbdad95960c21b60448201526064016101a1565b610ae281610b9f565b610b1c5760405162461bcd60e51b815260206004820152600b60248201526a084814195c9b5a5d1d195960aa1b60448201526064016101a1565b6001600160a01b03811660008181526020818152604091829020600301805460ff1916905581513381529081019290925242908201819052907fec36c0364d931187a76cf66d7eee08fad0ec2e8b7458a8d8b26b36769d4d13f3906060016106dd565b6001600160a01b0390811660009081526020819052604090205416151590565b6001600160a01b0380821660009081526020819052604081205490911633811480610bed57506001600160a01b038316600090815260016020908152604080832033845290915290205460ff165b9392505050565b80356001600160a01b038116811461077057600080fd5b634e487b7160e01b600052604160045260246000fd5b600082601f830112610c3257600080fd5b813567ffffffffffffffff80821115610c4d57610c4d610c0b565b604051601f8301601f19908116603f01168101908282118183101715610c7557610c75610c0b565b81604052838152866020858801011115610c8e57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060408385031215610cc157600080fd5b610cca83610bf4565b9150602083013567ffffffffffffffff811115610ce657600080fd5b610cf285828601610c21565b9150509250929050565b600060208284031215610d0e57600080fd5b610bed82610bf4565b600060208284031215610d2957600080fd5b813567ffffffffffffffff811115610d4057600080fd5b610d4c84828501610c21565b949350505050565b60208082526009908201526821204164647265737360b81b604082015260600190565b602080825260149082015273050617373776f7264206c656e677468203d3d20360641b604082015260600190565b60208082526007908201526610902937b7b69760c91b60408201526060019056fea26469706673582212203f4f6d90c01ad87c0fb70f118f17db8a4afceaa7fb539bcdcbbb8c03f299028664736f6c634300080c0033",
  "deployedSourceMap": "181:6497:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3550:741;;;;;;;;;;-1:-1:-1;3550:741:0;;;;;:::i;:::-;;:::i;:::-;;5406:417;;;;;;;;;;-1:-1:-1;5406:417:0;;;;;:::i;:::-;;:::i;1966:620::-;;;;;;:::i;:::-;;:::i;5901:381::-;;;;;;;;;;-1:-1:-1;5901:381:0;;;;;:::i;:::-;;:::i;6357:318::-;;;;;;;;;;-1:-1:-1;6357:318:0;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;2131:32:1;;;2113:51;;2101:2;2086:18;6357:318:0;;;;;;;4888:419;;;;;;;;;;-1:-1:-1;4888:419:0;;;;;:::i;:::-;;:::i;2724:706::-;;;;;;:::i;:::-;;:::i;4409:379::-;;;;;;;;;;-1:-1:-1;4409:379:0;;;;;:::i;:::-;;:::i;3550:741::-;1076:10;1068:46;;;;-1:-1:-1;;;1068:46:0;;;;;;;:::i;:::-;;;;;;;;;3717:17:::1;3725:8;3717:7;:17::i;:::-;3709:38;;;::::0;-1:-1:-1;;;3709:38:0;;2714:2:1;3709:38:0::1;::::0;::::1;2696:21:1::0;2753:1;2733:18;;;2726:29;-1:-1:-1;;;2771:18:1;;;2764:38;2819:18;;3709:38:0::1;2512:331:1::0;3709:38:0::1;3765:19;3775:8;3765:9;:19::i;:::-;3757:43;;;::::0;-1:-1:-1;;;3757:43:0;;3050:2:1;3757:43:0::1;::::0;::::1;3032:21:1::0;3089:2;3069:18;;;3062:30;-1:-1:-1;;;3108:18:1;;;3101:41;3159:18;;3757:43:0::1;2848:335:1::0;3757:43:0::1;3907:18:::0;;3899:56:::1;;;;-1:-1:-1::0;;;3899:56:0::1;;;;;;;:::i;:::-;3989:22:::0;;::::1;::::0;;::::1;::::0;;;;-1:-1:-1;;;;;4047:16:0;::::1;3965:21;4047:16:::0;;;;;;;;;;;:20:::1;;::::0;4030:37;::::1;4022:60;;;::::0;-1:-1:-1;;;4022:60:0;;3739:2:1;4022:60:0::1;::::0;::::1;3721:21:1::0;3778:2;3758:18;;;3751:30;-1:-1:-1;;;3797:18:1;;;3790:40;3847:18;;4022:60:0::1;3537:334:1::0;4022:60:0::1;-1:-1:-1::0;;;;;4194:16:0;::::1;4146:19;4194:16:::0;;;::::1;::::0;;;;;;;;:26:::1;;:33:::0;;-1:-1:-1;;4194:33:0::1;4223:4;4194:33;::::0;;4243:41;;4250:10:::1;4116:34:1::0;;4166:18;;;4159:43;;;;4168:15:0::1;4218:18:1::0;;;4211:34;;;4168:15:0;4243:41:::1;::::0;4066:2:1;4051:18;4243:41:0::1;;;;;;;;3699:592;;3550:741:::0;;:::o;5406:417::-;1076:10;1068:46;;;;-1:-1:-1;;;1068:46:0;;;;;;;:::i;:::-;5483:19:::1;5491:10;5483:7;:19::i;:::-;5475:39;;;;-1:-1:-1::0;;;5475:39:0::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;5609:22:0;::::1;5601:44;;;;-1:-1:-1::0;;;5601:44:0::1;;;;;;;:::i;:::-;5674:10;5664:21;::::0;;;:9:::1;:21;::::0;;;;;;;-1:-1:-1;;;;;5664:31:0;::::1;::::0;;;;;;;;::::1;;5656:59;;;::::0;-1:-1:-1;;;5656:59:0;;4793:2:1;5656:59:0::1;::::0;::::1;4775:21:1::0;4832:2;4812:18;;;4805:30;-1:-1:-1;;;4851:18:1;;;4844:45;4906:18;;5656:59:0::1;4591:339:1::0;5656:59:0::1;5736:10;5760:5;5726:21:::0;;;:9:::1;:21;::::0;;;;;;;-1:-1:-1;;;;;5726:31:0;::::1;::::0;;;;;;;;;:39;;-1:-1:-1;;5726:39:0::1;::::0;;5781:35;;5169:34:1;;;5219:18;;;5212:43;;;;5271:18;;5264:50;5781:35:0::1;::::0;5119:2:1;5104:18;5781:35:0::1;;;;;;;;5406:417:::0;:::o;1966:620::-;1076:10;1068:46;;;;-1:-1:-1;;;1068:46:0;;;;;;;:::i;:::-;2057:19:::1;2065:10;2057:7;:19::i;:::-;2056:20;2048:49;;;::::0;-1:-1:-1;;;2048:49:0;;5527:2:1;2048:49:0::1;::::0;::::1;5509:21:1::0;5566:2;5546:18;;;5539:30;-1:-1:-1;;;5585:18:1;;;5578:46;5641:18;;2048:49:0::1;5325:340:1::0;2048:49:0::1;2190:23:::0;;2182:61:::1;;;;-1:-1:-1::0;;;2182:61:0::1;;;;;;;:::i;:::-;2274:11;2261:9;:24;;2253:57;;;::::0;-1:-1:-1;;;2253:57:0;;5872:2:1;2253:57:0::1;::::0;::::1;5854:21:1::0;5911:2;5891:18;;;5884:30;-1:-1:-1;;;5930:18:1;;;5923:50;5990:18;;2253:57:0::1;5670:344:1::0;2253:57:0::1;2340:27:::0;;::::1;::::0;;::::1;::::0;;;;2398:103:::1;::::0;;::::1;::::0;::::1;::::0;;2417:10:::1;2398:103:::0;;;2441:9:::1;2398:103:::0;;::::1;::::0;;;;;;;;;-1:-1:-1;2398:103:0;;;;;;2512:18;;;;;;;;;;:25;;;;-1:-1:-1;;;;;;2512:25:0::1;-1:-1:-1::0;;;;;2512:25:0;;::::1;;::::0;;;;-1:-1:-1;2512:25:0;::::1;::::0;;;::::1;::::0;::::1;::::0;;::::1;::::0;;::::1;::::0;;-1:-1:-1;;2512:25:0::1;::::0;::::1;;::::0;;;::::1;::::0;;2553:26;;6193:51:1;;;6260:18;;;6253:34;;;2340:27:0;;2553:26:::1;::::0;6166:18:1;2553:26:0::1;;;;;;;2038:548;;1966:620:::0;:::o;5901:381::-;1076:10;1068:46;;;;-1:-1:-1;;;1068:46:0;;;;;;;:::i;:::-;5977:19:::1;5985:10;5977:7;:19::i;:::-;5969:39;;;;-1:-1:-1::0;;;5969:39:0::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;6115:16:0;;::::1;:6;:16:::0;;;::::1;::::0;;;;;;:25;::::1;6101:10;:39;6093:59;;;::::0;-1:-1:-1;;;6093:59:0;;6500:2:1;6093:59:0::1;::::0;::::1;6482:21:1::0;6539:1;6519:18;;;6512:29;-1:-1:-1;;;6557:18:1;;;6550:37;6604:18;;6093:59:0::1;6298:330:1::0;6093:59:0::1;6225:10;6171:12;6218:18:::0;;;::::1;::::0;;;;;;;6211:25;;-1:-1:-1;;;;;;6211:25:0::1;::::0;;-1:-1:-1;6211:25:0;::::1;::::0;;;::::1;::::0;::::1;::::0;;;;::::1;::::0;;::::1;::::0;;-1:-1:-1;;6211:25:0::1;::::0;;6252:23;;6193:51:1;;;6186:15:0::1;6260:18:1::0;;;6253:34;;;6186:15:0;6252:23:::1;::::0;6166:18:1;6252:23:0::1;;;;;;;;5959:323;5901:381:::0;:::o;6357:318::-;6428:7;1076:10;1068:46;;;;-1:-1:-1;;;1068:46:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;6459:22:0;::::1;6451:44;;;;-1:-1:-1::0;;;6451:44:0::1;;;;;;;:::i;:::-;6513:17;6521:8;6513:7;:17::i;:::-;6505:37;;;;-1:-1:-1::0;;;6505:37:0::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;;6643:16:0;;::::1;:6;:16:::0;;;::::1;::::0;;;;;;:25;::::1;1124:1;6357:318:::0;;;:::o;4888:419::-;1076:10;1068:46;;;;-1:-1:-1;;;1068:46:0;;;;;;;:::i;:::-;4966:19:::1;4974:10;4966:7;:19::i;:::-;4958:39;;;;-1:-1:-1::0;;;4958:39:0::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;5092:22:0;::::1;5084:44;;;;-1:-1:-1::0;;;5084:44:0::1;;;;;;;:::i;:::-;5158:10;5148:21;::::0;;;:9:::1;:21;::::0;;;;;;;-1:-1:-1;;;;;5148:31:0;::::1;::::0;;;;;;;;::::1;;5147:32;5139:61;;;::::0;-1:-1:-1;;;5139:61:0;;7114:2:1;5139:61:0::1;::::0;::::1;7096:21:1::0;7153:2;7133:18;;;7126:30;-1:-1:-1;;;7172:18:1;;;7165:46;7228:18;;5139:61:0::1;6912:340:1::0;5139:61:0::1;5221:10;5211:21;::::0;;;5245:4:::1;5211:21;::::0;;;;;;;-1:-1:-1;;;;;5211:31:0;::::1;::::0;;;;;;;;;;:38;;-1:-1:-1;;5211:38:0::1;::::0;::::1;::::0;;5265:35;;5169:34:1;;;5219:18;;;5212:43;;;;5271:18;;;5264:50;5265:35:0::1;::::0;5119:2:1;5104:18;5265:35:0::1;4935:385:1::0;2724:706:0;1076:10;1068:46;;;;-1:-1:-1;;;1068:46:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2835:22:0;::::1;2827:48;;;::::0;-1:-1:-1;;;2827:48:0;;7459:2:1;2827:48:0::1;::::0;::::1;7441:21:1::0;7498:2;7478:18;;;7471:30;-1:-1:-1;;;7517:18:1;;;7510:43;7570:18;;2827:48:0::1;7257:337:1::0;2827:48:0::1;2894:17;2902:8;2894:7;:17::i;:::-;2893:18;2885:47;;;::::0;-1:-1:-1;;;2885:47:0;;5527:2:1;2885:47:0::1;::::0;::::1;5509:21:1::0;5566:2;5546:18;;;5539:30;-1:-1:-1;;;5585:18:1;;;5578:46;5641:18;;2885:47:0::1;5325:340:1::0;2885:47:0::1;3025:23:::0;;3017:61:::1;;;;-1:-1:-1::0;;;3017:61:0::1;;;;;;;:::i;:::-;3109:11;3096:9;:24;;3088:57;;;::::0;-1:-1:-1;;;3088:57:0;;5872:2:1;3088:57:0::1;::::0;::::1;5854:21:1::0;5911:2;5891:18;;;5884:30;-1:-1:-1;;;5930:18:1;;;5923:50;5990:18;;3088:57:0::1;5670:344:1::0;3088:57:0::1;3175:27:::0;;::::1;::::0;;::::1;::::0;;;;3233:101:::1;::::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;3233:101:0;;::::1;::::0;;;3274:9:::1;3233:101:::0;;::::1;::::0;;;;;;;;;-1:-1:-1;3233:101:0;;;;;;;3345:16;;;;;;;;;;:23;;;;-1:-1:-1;;;;;;3345:23:0::1;::::0;::::1;::::0;;;::::1;::::0;;;;-1:-1:-1;3345:23:0;::::1;::::0;;;::::1;::::0;::::1;::::0;;::::1;::::0;;::::1;::::0;;-1:-1:-1;;3345:23:0::1;::::0;::::1;;::::0;;;::::1;::::0;;;3384:39;;3392:10:::1;4116:34:1::0;;4166:18;;;4159:43;4218:18;;;4211:34;;;3175:27:0;;3384:39:::1;::::0;4051:18:1;3384:39:0::1;3876:375:1::0;4409:379:0;1076:10;1068:46;;;;-1:-1:-1;;;1068:46:0;;;;;;;:::i;:::-;4554:17:::1;4562:8;4554:7;:17::i;:::-;4546:38;;;::::0;-1:-1:-1;;;4546:38:0;;2714:2:1;4546:38:0::1;::::0;::::1;2696:21:1::0;2753:1;2733:18;;;2726:29;-1:-1:-1;;;2771:18:1;;;2764:38;2819:18;;4546:38:0::1;2512:331:1::0;4546:38:0::1;4602:19;4612:8;4602:9;:19::i;:::-;4594:43;;;::::0;-1:-1:-1;;;4594:43:0;;3050:2:1;4594:43:0::1;::::0;::::1;3032:21:1::0;3089:2;3069:18;;;3062:30;-1:-1:-1;;;3108:18:1;;;3101:41;3159:18;;4594:43:0::1;2848:335:1::0;4594:43:0::1;-1:-1:-1::0;;;;;4694:16:0;::::1;4648:17;4694:16:::0;;;::::1;::::0;;;;;;;;:26:::1;;:34:::0;;-1:-1:-1;;4694:34:0::1;::::0;;4744:37;;4749:10:::1;4116:34:1::0;;4166:18;;;4159:43;;;;4668:15:0::1;4218:18:1::0;;;4211:34;;;4668:15:0;4744:37:::1;::::0;4066:2:1;4051:18;4744:37:0::1;3876:375:1::0;1237:181:0;-1:-1:-1;;;;;1320:16:0;;;1293:4;1320:16;;;;;;;;;;:25;;:39;;;1237:181::o;1514:330::-;-1:-1:-1;;;;;1608:16:0;;;1572:4;1608:16;;;;;;;;;;:25;1572:4;;1608:25;1652:10;:19;;;1651:58;;-1:-1:-1;;;;;;1677:19:0;;;;;;:9;:19;;;;;;;;1697:10;1677:31;;;;;;;;;;1651:58;1643:67;1514:330;-1:-1:-1;;;1514:330:0:o;14:173:1:-;82:20;;-1:-1:-1;;;;;131:31:1;;121:42;;111:70;;177:1;174;167:12;192:127;253:10;248:3;244:20;241:1;234:31;284:4;281:1;274:15;308:4;305:1;298:15;324:719;367:5;420:3;413:4;405:6;401:17;397:27;387:55;;438:1;435;428:12;387:55;474:6;461:20;500:18;537:2;533;530:10;527:36;;;543:18;;:::i;:::-;618:2;612:9;586:2;672:13;;-1:-1:-1;;668:22:1;;;692:2;664:31;660:40;648:53;;;716:18;;;736:22;;;713:46;710:72;;;762:18;;:::i;:::-;802:10;798:2;791:22;837:2;829:6;822:18;883:3;876:4;871:2;863:6;859:15;855:26;852:35;849:55;;;900:1;897;890:12;849:55;964:2;957:4;949:6;945:17;938:4;930:6;926:17;913:54;1011:1;1004:4;999:2;991:6;987:15;983:26;976:37;1031:6;1022:15;;;;;;324:719;;;;:::o;1048:396::-;1126:6;1134;1187:2;1175:9;1166:7;1162:23;1158:32;1155:52;;;1203:1;1200;1193:12;1155:52;1226:29;1245:9;1226:29;:::i;:::-;1216:39;;1306:2;1295:9;1291:18;1278:32;1333:18;1325:6;1322:30;1319:50;;;1365:1;1362;1355:12;1319:50;1388;1430:7;1421:6;1410:9;1406:22;1388:50;:::i;:::-;1378:60;;;1048:396;;;;;:::o;1449:186::-;1508:6;1561:2;1549:9;1540:7;1536:23;1532:32;1529:52;;;1577:1;1574;1567:12;1529:52;1600:29;1619:9;1600:29;:::i;1640:322::-;1709:6;1762:2;1750:9;1741:7;1737:23;1733:32;1730:52;;;1778:1;1775;1768:12;1730:52;1818:9;1805:23;1851:18;1843:6;1840:30;1837:50;;;1883:1;1880;1873:12;1837:50;1906;1948:7;1939:6;1928:9;1924:22;1906:50;:::i;:::-;1896:60;1640:322;-1:-1:-1;;;;1640:322:1:o;2175:332::-;2377:2;2359:21;;;2416:1;2396:18;;;2389:29;-1:-1:-1;;;2449:2:1;2434:18;;2427:39;2498:2;2483:18;;2175:332::o;3188:344::-;3390:2;3372:21;;;3429:2;3409:18;;;3402:30;-1:-1:-1;;;3463:2:1;3448:18;;3441:50;3523:2;3508:18;;3188:344::o;4256:330::-;4458:2;4440:21;;;4497:1;4477:18;;;4470:29;-1:-1:-1;;;4530:2:1;4515:18;;4508:37;4577:2;4562:18;;4256:330::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    181,
    6678
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC9409148 GT PUSH2 0x4E JUMPI DUP1 PUSH4 0xC9409148 EQ PUSH2 0xF5 JUMPI DUP1 PUSH4 0xDAEA85C5 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0xE2D3EDD0 EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0xF435F5A7 EQ PUSH2 0x164 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3EAD71CB EQ PUSH2 0x80 JUMPI DUP1 PUSH4 0x74A8F103 EQ PUSH2 0xA2 JUMPI DUP1 PUSH4 0x74CA6E2D EQ PUSH2 0xC2 JUMPI DUP1 PUSH4 0xBEDF77A6 EQ PUSH2 0xD5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA0 PUSH2 0x9B CALLDATASIZE PUSH1 0x4 PUSH2 0xCAE JUMP JUMPDEST PUSH2 0x184 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA0 PUSH2 0xBD CALLDATASIZE PUSH1 0x4 PUSH2 0xCFC JUMP JUMPDEST PUSH2 0x31D JUMP JUMPDEST PUSH2 0xA0 PUSH2 0xD0 CALLDATASIZE PUSH1 0x4 PUSH2 0xD17 JUMP JUMPDEST PUSH2 0x457 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA0 PUSH2 0xF0 CALLDATASIZE PUSH1 0x4 PUSH2 0xCFC JUMP JUMPDEST PUSH2 0x5DD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x101 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x115 PUSH2 0x110 CALLDATASIZE PUSH1 0x4 PUSH2 0xCFC JUMP JUMPDEST PUSH2 0x6E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA0 PUSH2 0x14C CALLDATASIZE PUSH1 0x4 PUSH2 0xCFC JUMP JUMPDEST PUSH2 0x775 JUMP JUMPDEST PUSH2 0xA0 PUSH2 0x15F CALLDATASIZE PUSH1 0x4 PUSH2 0xCAE JUMP JUMPDEST PUSH2 0x8AE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x170 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA0 PUSH2 0x17F CALLDATASIZE PUSH1 0x4 PUSH2 0xCFC JUMP JUMPDEST PUSH2 0xA7C JUMP JUMPDEST CALLER PUSH2 0x1AA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A1 SWAP1 PUSH2 0xD54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1B3 DUP3 PUSH2 0xB7F JUMP JUMPDEST PUSH2 0x1EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x24 DUP3 ADD MSTORE PUSH8 0x848109BDBDAD959 PUSH1 0xC2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1A1 JUMP JUMPDEST PUSH2 0x1F3 DUP3 PUSH2 0xB9F JUMP JUMPDEST PUSH2 0x22D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x84814195C9B5A5D1D1959 PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1A1 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x24B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A1 SWAP1 PUSH2 0xD77 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP2 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 ADD SLOAD DUP2 EQ PUSH2 0x2AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x84814185CDCDDDBDC99 PUSH1 0xB2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1A1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP2 MLOAD CALLER DUP2 MSTORE SWAP1 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE TIMESTAMP SWAP1 DUP3 ADD DUP2 SWAP1 MSTORE SWAP1 PUSH32 0xC1C90B8E0705B212262C0DBD7580EFE1862C2F185BF96899226F7596BEB2DB09 SWAP1 PUSH1 0x60 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST CALLER PUSH2 0x33A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A1 SWAP1 PUSH2 0xD54 JUMP JUMPDEST PUSH2 0x343 CALLER PUSH2 0xB7F JUMP JUMPDEST PUSH2 0x35F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A1 SWAP1 PUSH2 0xDA5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x385 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A1 SWAP1 PUSH2 0xD54 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x3EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x105B1C9958591E481C995D9BDAD959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1A1 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE DUP2 MLOAD SWAP5 DUP6 MSTORE SWAP2 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 ADD MSTORE PUSH32 0xB10892907D1785E9C412FBA4152A8282BCBB3A1B8E71701036C341CF9D5704AE SWAP1 PUSH1 0x60 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST CALLER PUSH2 0x474 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A1 SWAP1 PUSH2 0xD54 JUMP JUMPDEST PUSH2 0x47D CALLER PUSH2 0xB7F JUMP JUMPDEST ISZERO PUSH2 0x4BD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x2CB7BA903430BB329030903937B7B697 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1A1 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x4DB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A1 SWAP1 PUSH2 0xD77 JUMP JUMPDEST PUSH6 0x2D79883D2000 CALLVALUE LT ISZERO PUSH2 0x528 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x5072696365203E3D2035302C3030302067776569 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1A1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE CALLER DUP1 DUP3 MSTORE CALLVALUE DUP3 DUP7 ADD SWAP1 DUP2 MSTORE DUP3 DUP5 ADD DUP6 DUP2 MSTORE PUSH1 0x0 PUSH1 0x60 DUP6 ADD DUP2 DUP2 MSTORE DUP5 DUP3 MSTORE DUP2 DUP10 MSTORE SWAP1 DUP7 SWAP1 KECCAK256 DUP6 MLOAD DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP2 SSTORE SWAP3 MLOAD PUSH1 0x1 DUP5 ADD SSTORE SWAP1 MLOAD PUSH1 0x2 DUP4 ADD SSTORE MLOAD PUSH1 0x3 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP3 MLOAD SWAP1 DUP2 MSTORE SWAP4 DUP5 ADD DUP4 SWAP1 MSTORE SWAP2 SWAP3 PUSH32 0xBA49A8318D072C8E8DC370612E44C40798BF6DF880B71878A5C0FD0AEA854EED SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST CALLER PUSH2 0x5FA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A1 SWAP1 PUSH2 0xD54 JUMP JUMPDEST PUSH2 0x603 CALLER PUSH2 0xB7F JUMP JUMPDEST PUSH2 0x61F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A1 SWAP1 PUSH2 0xDA5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND CALLER EQ PUSH2 0x672 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x7 PUSH1 0x24 DUP3 ADD MSTORE PUSH7 0x84813DDDB9959 PUSH1 0xCA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1A1 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP5 SWAP1 SSTORE PUSH1 0x2 DUP2 ADD SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x3 SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE DUP2 MLOAD SWAP3 DUP4 MSTORE TIMESTAMP SWAP1 DUP4 ADD DUP2 SWAP1 MSTORE SWAP2 PUSH32 0x61A26F7C17D8780C095CCFA67E689A13EE4E06DDCE3DA18956369F4A396100E8 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x708 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A1 SWAP1 PUSH2 0xD54 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x72E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A1 SWAP1 PUSH2 0xD54 JUMP JUMPDEST PUSH2 0x737 DUP3 PUSH2 0xB7F JUMP JUMPDEST PUSH2 0x753 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A1 SWAP1 PUSH2 0xDA5 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH2 0x792 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A1 SWAP1 PUSH2 0xD54 JUMP JUMPDEST PUSH2 0x79B CALLER PUSH2 0xB7F JUMP JUMPDEST PUSH2 0x7B7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A1 SWAP1 PUSH2 0xDA5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x7DD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A1 SWAP1 PUSH2 0xD54 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x844 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x105B1C9958591E48185C1C1C9BDD9959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1A1 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP7 MSTORE SWAP1 DUP4 MSTORE SWAP4 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP5 OR SWAP1 SSTORE DUP1 MLOAD SWAP5 DUP6 MSTORE SWAP1 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH32 0xAAF27816598688732A80B26FB3B6D0BC241C08F38A6D8CA2A0723F4835D593D6 SWAP1 PUSH1 0x60 ADD PUSH2 0x44C JUMP JUMPDEST CALLER PUSH2 0x8CB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A1 SWAP1 PUSH2 0xD54 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x911 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x2120466F722041646472657373 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1A1 JUMP JUMPDEST PUSH2 0x91A DUP3 PUSH2 0xB7F JUMP JUMPDEST ISZERO PUSH2 0x95A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x2CB7BA903430BB329030903937B7B697 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1A1 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x978 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A1 SWAP1 PUSH2 0xD77 JUMP JUMPDEST PUSH6 0x2D79883D2000 CALLVALUE LT ISZERO PUSH2 0x9C5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x5072696365203E3D2035302C3030302067776569 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1A1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP1 DUP4 MSTORE CALLVALUE DUP4 DUP8 ADD SWAP1 DUP2 MSTORE DUP4 DUP6 ADD DUP7 DUP2 MSTORE PUSH1 0x0 PUSH1 0x60 DUP1 DUP8 ADD DUP3 DUP2 MSTORE DUP6 DUP4 MSTORE DUP3 DUP12 MSTORE SWAP2 DUP9 SWAP1 KECCAK256 DUP8 MLOAD DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP8 AND SWAP7 SWAP1 SWAP7 OR DUP7 SSTORE SWAP3 MLOAD PUSH1 0x1 DUP7 ADD SSTORE SWAP1 MLOAD PUSH1 0x2 DUP6 ADD SSTORE MLOAD PUSH1 0x3 SWAP1 SWAP4 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP4 ISZERO ISZERO SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE DUP4 MLOAD CALLER DUP2 MSTORE SWAP6 DUP7 ADD MSTORE SWAP2 DUP5 ADD DUP4 SWAP1 MSTORE SWAP2 SWAP3 PUSH32 0x91226C3460AE6C8EFEA379CB28BA0D3C10B90ED7104C7DF82F1A8617B6278857 SWAP2 ADD PUSH2 0x30F JUMP JUMPDEST CALLER PUSH2 0xA99 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A1 SWAP1 PUSH2 0xD54 JUMP JUMPDEST PUSH2 0xAA2 DUP2 PUSH2 0xB7F JUMP JUMPDEST PUSH2 0xAD9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x24 DUP3 ADD MSTORE PUSH8 0x848109BDBDAD959 PUSH1 0xC2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1A1 JUMP JUMPDEST PUSH2 0xAE2 DUP2 PUSH2 0xB9F JUMP JUMPDEST PUSH2 0xB1C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x84814195C9B5A5D1D1959 PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1A1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE DUP2 MLOAD CALLER DUP2 MSTORE SWAP1 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE TIMESTAMP SWAP1 DUP3 ADD DUP2 SWAP1 MSTORE SWAP1 PUSH32 0xEC36C0364D931187A76CF66D7EEE08FAD0EC2E8B7458A8D8B26B36769D4D13F3 SWAP1 PUSH1 0x60 ADD PUSH2 0x6DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 AND CALLER DUP2 EQ DUP1 PUSH2 0xBED JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x770 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xC4D JUMPI PUSH2 0xC4D PUSH2 0xC0B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xC75 JUMPI PUSH2 0xC75 PUSH2 0xC0B JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0xC8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCCA DUP4 PUSH2 0xBF4 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCF2 DUP6 DUP3 DUP7 ADD PUSH2 0xC21 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBED DUP3 PUSH2 0xBF4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD29 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD4C DUP5 DUP3 DUP6 ADD PUSH2 0xC21 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x9 SWAP1 DUP3 ADD MSTORE PUSH9 0x212041646472657373 PUSH1 0xB8 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x50617373776F7264206C656E677468203D3D203 PUSH1 0x64 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x7 SWAP1 DUP3 ADD MSTORE PUSH7 0x10902937B7B697 PUSH1 0xC9 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODEHASH 0x4F PUSH14 0x90C01AD87C0FB70F118F17DB8A4A 0xFC 0xEA 0xA7 0xFB MSTORE8 SWAP12 0xCD 0xCB 0xBB DUP13 SUB CALLCODE SWAP10 MUL DUP7 PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        181,
        6678
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        181,
        6678
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        181,
        6678
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        181,
        6678
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        181,
        6678
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        181,
        6678
      ],
      "op": "LT",
      "path": "0"
    },
    "9": {
      "fn": null,
      "offset": [
        181,
        6678
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7B"
    },
    "12": {
      "fn": null,
      "offset": [
        181,
        6678
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "13": {
      "fn": null,
      "offset": [
        181,
        6678
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        181,
        6678
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        181,
        6678
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        181,
        6678
      ],
      "op": "SHR",
      "path": "0"
    },
    "19": {
      "fn": null,
      "offset": [
        181,
        6678
      ],
      "op": "DUP1",
      "path": "0"
    },
    "20": {
      "fn": null,
      "offset": [
        181,
        6678
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xC9409148"
    },
    "25": {
      "fn": null,
      "offset": [
        181,
        6678
      ],
      "op": "GT",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        181,
        6678
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4E"
    },
    "29": {
      "fn": null,
      "offset": [
        181,
        6678
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "30": {
      "fn": null,
      "offset": [
        181,
        6678
      ],
      "op": "DUP1",
      "path": "0"
    },
    "31": {
      "fn": null,
      "offset": [
        181,
        6678
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xC9409148"
    },
    "36": {
      "fn": null,
      "offset": [
        181,
        6678
      ],
      "op": "EQ",
      "path": "0"
    },
    "37": {
      "fn": null,
      "offset": [
        181,
        6678
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF5"
    },
    "40": {
      "fn": null,
      "offset": [
        181,
        6678
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "41": {
      "fn": null,
      "offset": [
        181,
        6678
      ],
      "op": "DUP1",
      "path": "0"
    },
    "42": {
      "fn": null,
      "offset": [
        181,
        6678
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xDAEA85C5"
    },
    "47": {
      "fn": null,
      "offset": [
        181,
        6678
      ],
      "op": "EQ",
      "path": "0"
    },
    "48": {
      "fn": null,
      "offset": [
        181,
        6678
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x131"
    },
    "51": {
      "fn": null,
      "offset": [
        181,
        6678
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "52": {
      "fn": null,
      "offset": [
        181,
        6678
      ],
      "op": "DUP1",
      "path": "0"
    },
    "53": {
      "fn": null,
      "offset": [
        181,
        6678
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xE2D3EDD0"
    },
    "58": {
      "fn": null,
      "offset": [
        181,
        6678
      ],
      "op": "EQ",
      "path": "0"
    },
    "59": {
      "fn": null,
      "offset": [
        181,
        6678
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x151"
    },
    "62": {
      "fn": null,
      "offset": [
        181,
        6678
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "63": {
      "fn": null,
      "offset": [
        181,
        6678
      ],
      "op": "DUP1",
      "path": "0"
    },
    "64": {
      "fn": null,
      "offset": [
        181,
        6678
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xF435F5A7"
    },
    "69": {
      "fn": null,
      "offset": [
        181,
        6678
      ],
      "op": "EQ",
      "path": "0"
    },
    "70": {
      "fn": null,
      "offset": [
        181,
        6678
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x164"
    },
    "73": {
      "fn": null,
      "offset": [
        181,
        6678
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "74": {
      "fn": null,
      "offset": [
        181,
        6678
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "76": {
      "fn": null,
      "offset": [
        181,
        6678
      ],
      "op": "DUP1",
      "path": "0"
    },
    "77": {
      "fn": null,
      "offset": [
        181,
        6678
      ],
      "op": "REVERT",
      "path": "0"
    },
    "78": {
      "fn": null,
      "offset": [
        181,
        6678
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "79": {
      "fn": null,
      "offset": [
        181,
        6678
      ],
      "op": "DUP1",
      "path": "0"
    },
    "80": {
      "fn": null,
      "offset": [
        181,
        6678
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x3EAD71CB"
    },
    "85": {
      "fn": null,
      "offset": [
        181,
        6678
      ],
      "op": "EQ",
      "path": "0"
    },
    "86": {
      "fn": null,
      "offset": [
        181,
        6678
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x80"
    },
    "89": {
      "fn": null,
      "offset": [
        181,
        6678
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "90": {
      "fn": null,
      "offset": [
        181,
        6678
      ],
      "op": "DUP1",
      "path": "0"
    },
    "91": {
      "fn": null,
      "offset": [
        181,
        6678
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x74A8F103"
    },
    "96": {
      "fn": null,
      "offset": [
        181,
        6678
      ],
      "op": "EQ",
      "path": "0"
    },
    "97": {
      "fn": null,
      "offset": [
        181,
        6678
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA2"
    },
    "100": {
      "fn": null,
      "offset": [
        181,
        6678
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "101": {
      "fn": null,
      "offset": [
        181,
        6678
      ],
      "op": "DUP1",
      "path": "0"
    },
    "102": {
      "fn": null,
      "offset": [
        181,
        6678
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x74CA6E2D"
    },
    "107": {
      "fn": null,
      "offset": [
        181,
        6678
      ],
      "op": "EQ",
      "path": "0"
    },
    "108": {
      "fn": null,
      "offset": [
        181,
        6678
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC2"
    },
    "111": {
      "fn": null,
      "offset": [
        181,
        6678
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "112": {
      "fn": null,
      "offset": [
        181,
        6678
      ],
      "op": "DUP1",
      "path": "0"
    },
    "113": {
      "fn": null,
      "offset": [
        181,
        6678
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xBEDF77A6"
    },
    "118": {
      "fn": null,
      "offset": [
        181,
        6678
      ],
      "op": "EQ",
      "path": "0"
    },
    "119": {
      "fn": null,
      "offset": [
        181,
        6678
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD5"
    },
    "122": {
      "fn": null,
      "offset": [
        181,
        6678
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "123": {
      "fn": null,
      "offset": [
        181,
        6678
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "124": {
      "fn": null,
      "offset": [
        181,
        6678
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "126": {
      "fn": null,
      "offset": [
        181,
        6678
      ],
      "op": "DUP1",
      "path": "0"
    },
    "127": {
      "first_revert": true,
      "fn": null,
      "offset": [
        181,
        6678
      ],
      "op": "REVERT",
      "path": "0"
    },
    "128": {
      "fn": "HAV.unlock",
      "offset": [
        3550,
        4291
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "129": {
      "fn": "HAV.unlock",
      "offset": [
        3550,
        4291
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "130": {
      "fn": "HAV.unlock",
      "offset": [
        3550,
        4291
      ],
      "op": "DUP1",
      "path": "0"
    },
    "131": {
      "fn": "HAV.unlock",
      "offset": [
        3550,
        4291
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "132": {
      "fn": "HAV.unlock",
      "offset": [
        3550,
        4291
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8C"
    },
    "135": {
      "fn": "HAV.unlock",
      "offset": [
        3550,
        4291
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "136": {
      "fn": "HAV.unlock",
      "offset": [
        3550,
        4291
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "138": {
      "fn": "HAV.unlock",
      "offset": [
        3550,
        4291
      ],
      "op": "DUP1",
      "path": "0"
    },
    "139": {
      "fn": "HAV.unlock",
      "offset": [
        3550,
        4291
      ],
      "op": "REVERT",
      "path": "0"
    },
    "140": {
      "fn": "HAV.unlock",
      "offset": [
        3550,
        4291
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "141": {
      "op": "POP"
    },
    "142": {
      "fn": "HAV.unlock",
      "offset": [
        3550,
        4291
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA0"
    },
    "145": {
      "fn": "HAV.unlock",
      "offset": [
        3550,
        4291
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9B"
    },
    "148": {
      "fn": "HAV.unlock",
      "offset": [
        3550,
        4291
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "149": {
      "fn": "HAV.unlock",
      "offset": [
        3550,
        4291
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "151": {
      "fn": "HAV.unlock",
      "offset": [
        3550,
        4291
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCAE"
    },
    "154": {
      "fn": "HAV.unlock",
      "jump": "i",
      "offset": [
        3550,
        4291
      ],
      "op": "JUMP",
      "path": "0"
    },
    "155": {
      "fn": "HAV.unlock",
      "offset": [
        3550,
        4291
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "156": {
      "fn": "HAV.unlock",
      "offset": [
        3550,
        4291
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x184"
    },
    "159": {
      "fn": "HAV.unlock",
      "jump": "i",
      "offset": [
        3550,
        4291
      ],
      "op": "JUMP",
      "path": "0"
    },
    "160": {
      "fn": "HAV.unlock",
      "offset": [
        3550,
        4291
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "161": {
      "fn": "HAV.unlock",
      "offset": [
        3550,
        4291
      ],
      "op": "STOP",
      "path": "0"
    },
    "162": {
      "fn": "HAV.revoke",
      "offset": [
        5406,
        5823
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "163": {
      "fn": "HAV.revoke",
      "offset": [
        5406,
        5823
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "164": {
      "fn": "HAV.revoke",
      "offset": [
        5406,
        5823
      ],
      "op": "DUP1",
      "path": "0"
    },
    "165": {
      "fn": "HAV.revoke",
      "offset": [
        5406,
        5823
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "166": {
      "fn": "HAV.revoke",
      "offset": [
        5406,
        5823
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAE"
    },
    "169": {
      "fn": "HAV.revoke",
      "offset": [
        5406,
        5823
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "170": {
      "fn": "HAV.revoke",
      "offset": [
        5406,
        5823
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "172": {
      "fn": "HAV.revoke",
      "offset": [
        5406,
        5823
      ],
      "op": "DUP1",
      "path": "0"
    },
    "173": {
      "fn": "HAV.revoke",
      "offset": [
        5406,
        5823
      ],
      "op": "REVERT",
      "path": "0"
    },
    "174": {
      "fn": "HAV.revoke",
      "offset": [
        5406,
        5823
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "175": {
      "op": "POP"
    },
    "176": {
      "fn": "HAV.revoke",
      "offset": [
        5406,
        5823
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA0"
    },
    "179": {
      "fn": "HAV.revoke",
      "offset": [
        5406,
        5823
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBD"
    },
    "182": {
      "fn": "HAV.revoke",
      "offset": [
        5406,
        5823
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "183": {
      "fn": "HAV.revoke",
      "offset": [
        5406,
        5823
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "185": {
      "fn": "HAV.revoke",
      "offset": [
        5406,
        5823
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCFC"
    },
    "188": {
      "fn": "HAV.revoke",
      "jump": "i",
      "offset": [
        5406,
        5823
      ],
      "op": "JUMP",
      "path": "0"
    },
    "189": {
      "fn": "HAV.revoke",
      "offset": [
        5406,
        5823
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "190": {
      "fn": "HAV.revoke",
      "offset": [
        5406,
        5823
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x31D"
    },
    "193": {
      "fn": "HAV.revoke",
      "jump": "i",
      "offset": [
        5406,
        5823
      ],
      "op": "JUMP",
      "path": "0"
    },
    "194": {
      "fn": "HAV.book",
      "offset": [
        1966,
        2586
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "195": {
      "fn": "HAV.book",
      "offset": [
        1966,
        2586
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA0"
    },
    "198": {
      "fn": "HAV.book",
      "offset": [
        1966,
        2586
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD0"
    },
    "201": {
      "fn": "HAV.book",
      "offset": [
        1966,
        2586
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "202": {
      "fn": "HAV.book",
      "offset": [
        1966,
        2586
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "204": {
      "fn": "HAV.book",
      "offset": [
        1966,
        2586
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD17"
    },
    "207": {
      "fn": "HAV.book",
      "jump": "i",
      "offset": [
        1966,
        2586
      ],
      "op": "JUMP",
      "path": "0"
    },
    "208": {
      "fn": "HAV.book",
      "offset": [
        1966,
        2586
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "209": {
      "fn": "HAV.book",
      "offset": [
        1966,
        2586
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x457"
    },
    "212": {
      "fn": "HAV.book",
      "jump": "i",
      "offset": [
        1966,
        2586
      ],
      "op": "JUMP",
      "path": "0"
    },
    "213": {
      "fn": "HAV.leave",
      "offset": [
        5901,
        6282
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "214": {
      "fn": "HAV.leave",
      "offset": [
        5901,
        6282
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "215": {
      "fn": "HAV.leave",
      "offset": [
        5901,
        6282
      ],
      "op": "DUP1",
      "path": "0"
    },
    "216": {
      "fn": "HAV.leave",
      "offset": [
        5901,
        6282
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "217": {
      "fn": "HAV.leave",
      "offset": [
        5901,
        6282
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE1"
    },
    "220": {
      "fn": "HAV.leave",
      "offset": [
        5901,
        6282
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "221": {
      "fn": "HAV.leave",
      "offset": [
        5901,
        6282
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "223": {
      "fn": "HAV.leave",
      "offset": [
        5901,
        6282
      ],
      "op": "DUP1",
      "path": "0"
    },
    "224": {
      "fn": "HAV.leave",
      "offset": [
        5901,
        6282
      ],
      "op": "REVERT",
      "path": "0"
    },
    "225": {
      "fn": "HAV.leave",
      "offset": [
        5901,
        6282
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "226": {
      "op": "POP"
    },
    "227": {
      "fn": "HAV.leave",
      "offset": [
        5901,
        6282
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA0"
    },
    "230": {
      "fn": "HAV.leave",
      "offset": [
        5901,
        6282
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF0"
    },
    "233": {
      "fn": "HAV.leave",
      "offset": [
        5901,
        6282
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "234": {
      "fn": "HAV.leave",
      "offset": [
        5901,
        6282
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "236": {
      "fn": "HAV.leave",
      "offset": [
        5901,
        6282
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCFC"
    },
    "239": {
      "fn": "HAV.leave",
      "jump": "i",
      "offset": [
        5901,
        6282
      ],
      "op": "JUMP",
      "path": "0"
    },
    "240": {
      "fn": "HAV.leave",
      "offset": [
        5901,
        6282
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "241": {
      "fn": "HAV.leave",
      "offset": [
        5901,
        6282
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5DD"
    },
    "244": {
      "fn": "HAV.leave",
      "jump": "i",
      "offset": [
        5901,
        6282
      ],
      "op": "JUMP",
      "path": "0"
    },
    "245": {
      "fn": "HAV.viewOwner",
      "offset": [
        6357,
        6675
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "246": {
      "fn": "HAV.viewOwner",
      "offset": [
        6357,
        6675
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "247": {
      "fn": "HAV.viewOwner",
      "offset": [
        6357,
        6675
      ],
      "op": "DUP1",
      "path": "0"
    },
    "248": {
      "fn": "HAV.viewOwner",
      "offset": [
        6357,
        6675
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "249": {
      "fn": "HAV.viewOwner",
      "offset": [
        6357,
        6675
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x101"
    },
    "252": {
      "fn": "HAV.viewOwner",
      "offset": [
        6357,
        6675
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "253": {
      "fn": "HAV.viewOwner",
      "offset": [
        6357,
        6675
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "255": {
      "fn": "HAV.viewOwner",
      "offset": [
        6357,
        6675
      ],
      "op": "DUP1",
      "path": "0"
    },
    "256": {
      "fn": "HAV.viewOwner",
      "offset": [
        6357,
        6675
      ],
      "op": "REVERT",
      "path": "0"
    },
    "257": {
      "fn": "HAV.viewOwner",
      "offset": [
        6357,
        6675
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "258": {
      "op": "POP"
    },
    "259": {
      "fn": "HAV.viewOwner",
      "offset": [
        6357,
        6675
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x115"
    },
    "262": {
      "fn": "HAV.viewOwner",
      "offset": [
        6357,
        6675
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x110"
    },
    "265": {
      "fn": "HAV.viewOwner",
      "offset": [
        6357,
        6675
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "266": {
      "fn": "HAV.viewOwner",
      "offset": [
        6357,
        6675
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "268": {
      "fn": "HAV.viewOwner",
      "offset": [
        6357,
        6675
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCFC"
    },
    "271": {
      "fn": "HAV.viewOwner",
      "jump": "i",
      "offset": [
        6357,
        6675
      ],
      "op": "JUMP",
      "path": "0"
    },
    "272": {
      "fn": "HAV.viewOwner",
      "offset": [
        6357,
        6675
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "273": {
      "fn": "HAV.viewOwner",
      "offset": [
        6357,
        6675
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6E9"
    },
    "276": {
      "fn": "HAV.viewOwner",
      "jump": "i",
      "offset": [
        6357,
        6675
      ],
      "op": "JUMP",
      "path": "0"
    },
    "277": {
      "fn": "HAV.viewOwner",
      "offset": [
        6357,
        6675
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "278": {
      "fn": "HAV.viewOwner",
      "offset": [
        6357,
        6675
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "280": {
      "fn": "HAV.viewOwner",
      "offset": [
        6357,
        6675
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "281": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "283": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "285": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "287": {
      "op": "SHL"
    },
    "288": {
      "op": "SUB"
    },
    "289": {
      "op": "SWAP1"
    },
    "290": {
      "op": "SWAP2"
    },
    "291": {
      "op": "AND"
    },
    "292": {
      "op": "DUP2"
    },
    "293": {
      "op": "MSTORE"
    },
    "294": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "296": {
      "op": "ADD"
    },
    "297": {
      "fn": "HAV.viewOwner",
      "offset": [
        6357,
        6675
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "299": {
      "fn": "HAV.viewOwner",
      "offset": [
        6357,
        6675
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "300": {
      "fn": "HAV.viewOwner",
      "offset": [
        6357,
        6675
      ],
      "op": "DUP1",
      "path": "0"
    },
    "301": {
      "fn": "HAV.viewOwner",
      "offset": [
        6357,
        6675
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "302": {
      "fn": "HAV.viewOwner",
      "offset": [
        6357,
        6675
      ],
      "op": "SUB",
      "path": "0"
    },
    "303": {
      "fn": "HAV.viewOwner",
      "offset": [
        6357,
        6675
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "304": {
      "fn": "HAV.viewOwner",
      "offset": [
        6357,
        6675
      ],
      "op": "RETURN",
      "path": "0"
    },
    "305": {
      "fn": "HAV.approve",
      "offset": [
        4888,
        5307
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "306": {
      "fn": "HAV.approve",
      "offset": [
        4888,
        5307
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "307": {
      "fn": "HAV.approve",
      "offset": [
        4888,
        5307
      ],
      "op": "DUP1",
      "path": "0"
    },
    "308": {
      "fn": "HAV.approve",
      "offset": [
        4888,
        5307
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "309": {
      "fn": "HAV.approve",
      "offset": [
        4888,
        5307
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13D"
    },
    "312": {
      "fn": "HAV.approve",
      "offset": [
        4888,
        5307
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "313": {
      "fn": "HAV.approve",
      "offset": [
        4888,
        5307
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "315": {
      "fn": "HAV.approve",
      "offset": [
        4888,
        5307
      ],
      "op": "DUP1",
      "path": "0"
    },
    "316": {
      "fn": "HAV.approve",
      "offset": [
        4888,
        5307
      ],
      "op": "REVERT",
      "path": "0"
    },
    "317": {
      "fn": "HAV.approve",
      "offset": [
        4888,
        5307
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "318": {
      "op": "POP"
    },
    "319": {
      "fn": "HAV.approve",
      "offset": [
        4888,
        5307
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA0"
    },
    "322": {
      "fn": "HAV.approve",
      "offset": [
        4888,
        5307
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14C"
    },
    "325": {
      "fn": "HAV.approve",
      "offset": [
        4888,
        5307
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "326": {
      "fn": "HAV.approve",
      "offset": [
        4888,
        5307
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "328": {
      "fn": "HAV.approve",
      "offset": [
        4888,
        5307
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCFC"
    },
    "331": {
      "fn": "HAV.approve",
      "jump": "i",
      "offset": [
        4888,
        5307
      ],
      "op": "JUMP",
      "path": "0"
    },
    "332": {
      "fn": "HAV.approve",
      "offset": [
        4888,
        5307
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "333": {
      "fn": "HAV.approve",
      "offset": [
        4888,
        5307
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x775"
    },
    "336": {
      "fn": "HAV.approve",
      "jump": "i",
      "offset": [
        4888,
        5307
      ],
      "op": "JUMP",
      "path": "0"
    },
    "337": {
      "fn": "HAV.bookFor",
      "offset": [
        2724,
        3430
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "338": {
      "fn": "HAV.bookFor",
      "offset": [
        2724,
        3430
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA0"
    },
    "341": {
      "fn": "HAV.bookFor",
      "offset": [
        2724,
        3430
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15F"
    },
    "344": {
      "fn": "HAV.bookFor",
      "offset": [
        2724,
        3430
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "345": {
      "fn": "HAV.bookFor",
      "offset": [
        2724,
        3430
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "347": {
      "fn": "HAV.bookFor",
      "offset": [
        2724,
        3430
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCAE"
    },
    "350": {
      "fn": "HAV.bookFor",
      "jump": "i",
      "offset": [
        2724,
        3430
      ],
      "op": "JUMP",
      "path": "0"
    },
    "351": {
      "fn": "HAV.bookFor",
      "offset": [
        2724,
        3430
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "352": {
      "fn": "HAV.bookFor",
      "offset": [
        2724,
        3430
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8AE"
    },
    "355": {
      "fn": "HAV.bookFor",
      "jump": "i",
      "offset": [
        2724,
        3430
      ],
      "op": "JUMP",
      "path": "0"
    },
    "356": {
      "fn": "HAV.lock",
      "offset": [
        4409,
        4788
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "357": {
      "fn": "HAV.lock",
      "offset": [
        4409,
        4788
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "358": {
      "fn": "HAV.lock",
      "offset": [
        4409,
        4788
      ],
      "op": "DUP1",
      "path": "0"
    },
    "359": {
      "fn": "HAV.lock",
      "offset": [
        4409,
        4788
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "360": {
      "fn": "HAV.lock",
      "offset": [
        4409,
        4788
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x170"
    },
    "363": {
      "fn": "HAV.lock",
      "offset": [
        4409,
        4788
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "364": {
      "fn": "HAV.lock",
      "offset": [
        4409,
        4788
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "366": {
      "fn": "HAV.lock",
      "offset": [
        4409,
        4788
      ],
      "op": "DUP1",
      "path": "0"
    },
    "367": {
      "fn": "HAV.lock",
      "offset": [
        4409,
        4788
      ],
      "op": "REVERT",
      "path": "0"
    },
    "368": {
      "fn": "HAV.lock",
      "offset": [
        4409,
        4788
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "369": {
      "op": "POP"
    },
    "370": {
      "fn": "HAV.lock",
      "offset": [
        4409,
        4788
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA0"
    },
    "373": {
      "fn": "HAV.lock",
      "offset": [
        4409,
        4788
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17F"
    },
    "376": {
      "fn": "HAV.lock",
      "offset": [
        4409,
        4788
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "377": {
      "fn": "HAV.lock",
      "offset": [
        4409,
        4788
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "379": {
      "fn": "HAV.lock",
      "offset": [
        4409,
        4788
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCFC"
    },
    "382": {
      "fn": "HAV.lock",
      "jump": "i",
      "offset": [
        4409,
        4788
      ],
      "op": "JUMP",
      "path": "0"
    },
    "383": {
      "fn": "HAV.lock",
      "offset": [
        4409,
        4788
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "384": {
      "fn": "HAV.lock",
      "offset": [
        4409,
        4788
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA7C"
    },
    "387": {
      "fn": "HAV.lock",
      "jump": "i",
      "offset": [
        4409,
        4788
      ],
      "op": "JUMP",
      "path": "0"
    },
    "388": {
      "fn": "HAV.unlock",
      "offset": [
        3550,
        4291
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "389": {
      "offset": [
        1076,
        1086
      ],
      "op": "CALLER",
      "path": "0"
    },
    "390": {
      "offset": [
        1068,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AA"
    },
    "393": {
      "fn": "HAV.unlock",
      "offset": [
        1068,
        1114
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "394": {
      "fn": "HAV.unlock",
      "offset": [
        1068,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "396": {
      "fn": "HAV.unlock",
      "offset": [
        1068,
        1114
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "397": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "401": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "403": {
      "op": "SHL"
    },
    "404": {
      "offset": [
        1068,
        1114
      ],
      "op": "DUP2",
      "path": "0"
    },
    "405": {
      "fn": "HAV.unlock",
      "offset": [
        1068,
        1114
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "406": {
      "fn": "HAV.unlock",
      "offset": [
        1068,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "408": {
      "fn": "HAV.unlock",
      "offset": [
        1068,
        1114
      ],
      "op": "ADD",
      "path": "0"
    },
    "409": {
      "fn": "HAV.unlock",
      "offset": [
        1068,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A1"
    },
    "412": {
      "fn": "HAV.unlock",
      "offset": [
        1068,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "413": {
      "fn": "HAV.unlock",
      "offset": [
        1068,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD54"
    },
    "416": {
      "fn": "HAV.unlock",
      "jump": "i",
      "offset": [
        1068,
        1114
      ],
      "op": "JUMP",
      "path": "0"
    },
    "417": {
      "fn": "HAV.unlock",
      "offset": [
        1068,
        1114
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "418": {
      "fn": "HAV.unlock",
      "offset": [
        1068,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "420": {
      "fn": "HAV.unlock",
      "offset": [
        1068,
        1114
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "421": {
      "fn": "HAV.unlock",
      "offset": [
        1068,
        1114
      ],
      "op": "DUP1",
      "path": "0"
    },
    "422": {
      "fn": "HAV.unlock",
      "offset": [
        1068,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "423": {
      "fn": "HAV.unlock",
      "offset": [
        1068,
        1114
      ],
      "op": "SUB",
      "path": "0"
    },
    "424": {
      "fn": "HAV.unlock",
      "offset": [
        1068,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "425": {
      "fn": "HAV.unlock",
      "offset": [
        1068,
        1114
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "426": {
      "fn": "HAV.unlock",
      "offset": [
        1068,
        1114
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "427": {
      "fn": "HAV.unlock",
      "offset": [
        3717,
        3734
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 0,
      "value": "0x1B3"
    },
    "430": {
      "fn": "HAV.unlock",
      "offset": [
        3725,
        3733
      ],
      "op": "DUP3",
      "path": "0"
    },
    "431": {
      "fn": "HAV.unlock",
      "offset": [
        3717,
        3724
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB7F"
    },
    "434": {
      "fn": "HAV.unlock",
      "jump": "i",
      "offset": [
        3717,
        3734
      ],
      "op": "JUMP",
      "path": "0"
    },
    "435": {
      "branch": 40,
      "fn": "HAV.unlock",
      "offset": [
        3717,
        3734
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "436": {
      "fn": "HAV.unlock",
      "offset": [
        3709,
        3747
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1EA"
    },
    "439": {
      "branch": 40,
      "fn": "HAV.unlock",
      "offset": [
        3709,
        3747
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "440": {
      "fn": "HAV.unlock",
      "offset": [
        3709,
        3747
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "442": {
      "fn": "HAV.unlock",
      "offset": [
        3709,
        3747
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "443": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "447": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "449": {
      "op": "SHL"
    },
    "450": {
      "fn": "HAV.unlock",
      "offset": [
        3709,
        3747
      ],
      "op": "DUP2",
      "path": "0"
    },
    "451": {
      "fn": "HAV.unlock",
      "offset": [
        3709,
        3747
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "452": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "454": {
      "fn": "HAV.unlock",
      "offset": [
        3709,
        3747
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "456": {
      "fn": "HAV.unlock",
      "offset": [
        3709,
        3747
      ],
      "op": "DUP3",
      "path": "0"
    },
    "457": {
      "fn": "HAV.unlock",
      "offset": [
        3709,
        3747
      ],
      "op": "ADD",
      "path": "0"
    },
    "458": {
      "op": "MSTORE"
    },
    "459": {
      "op": "PUSH1",
      "value": "0x8"
    },
    "461": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "463": {
      "op": "DUP3"
    },
    "464": {
      "op": "ADD"
    },
    "465": {
      "op": "MSTORE"
    },
    "466": {
      "op": "PUSH8",
      "value": "0x848109BDBDAD959"
    },
    "475": {
      "op": "PUSH1",
      "value": "0xC2"
    },
    "477": {
      "op": "SHL"
    },
    "478": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "480": {
      "op": "DUP3"
    },
    "481": {
      "op": "ADD"
    },
    "482": {
      "op": "MSTORE"
    },
    "483": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "485": {
      "op": "ADD"
    },
    "486": {
      "fn": "HAV.unlock",
      "offset": [
        3709,
        3747
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A1"
    },
    "489": {
      "op": "JUMP"
    },
    "490": {
      "fn": "HAV.unlock",
      "offset": [
        3709,
        3747
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "491": {
      "fn": "HAV.unlock",
      "offset": [
        3765,
        3784
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 1,
      "value": "0x1F3"
    },
    "494": {
      "fn": "HAV.unlock",
      "offset": [
        3775,
        3783
      ],
      "op": "DUP3",
      "path": "0"
    },
    "495": {
      "fn": "HAV.unlock",
      "offset": [
        3765,
        3774
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB9F"
    },
    "498": {
      "fn": "HAV.unlock",
      "jump": "i",
      "offset": [
        3765,
        3784
      ],
      "op": "JUMP",
      "path": "0"
    },
    "499": {
      "branch": 41,
      "fn": "HAV.unlock",
      "offset": [
        3765,
        3784
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "500": {
      "fn": "HAV.unlock",
      "offset": [
        3757,
        3800
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x22D"
    },
    "503": {
      "branch": 41,
      "fn": "HAV.unlock",
      "offset": [
        3757,
        3800
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "504": {
      "fn": "HAV.unlock",
      "offset": [
        3757,
        3800
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "506": {
      "fn": "HAV.unlock",
      "offset": [
        3757,
        3800
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "507": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "511": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "513": {
      "op": "SHL"
    },
    "514": {
      "fn": "HAV.unlock",
      "offset": [
        3757,
        3800
      ],
      "op": "DUP2",
      "path": "0"
    },
    "515": {
      "fn": "HAV.unlock",
      "offset": [
        3757,
        3800
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "516": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "518": {
      "fn": "HAV.unlock",
      "offset": [
        3757,
        3800
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "520": {
      "fn": "HAV.unlock",
      "offset": [
        3757,
        3800
      ],
      "op": "DUP3",
      "path": "0"
    },
    "521": {
      "fn": "HAV.unlock",
      "offset": [
        3757,
        3800
      ],
      "op": "ADD",
      "path": "0"
    },
    "522": {
      "op": "MSTORE"
    },
    "523": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "525": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "527": {
      "op": "DUP3"
    },
    "528": {
      "op": "ADD"
    },
    "529": {
      "op": "MSTORE"
    },
    "530": {
      "op": "PUSH11",
      "value": "0x84814195C9B5A5D1D1959"
    },
    "542": {
      "op": "PUSH1",
      "value": "0xAA"
    },
    "544": {
      "op": "SHL"
    },
    "545": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "547": {
      "op": "DUP3"
    },
    "548": {
      "op": "ADD"
    },
    "549": {
      "op": "MSTORE"
    },
    "550": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "552": {
      "op": "ADD"
    },
    "553": {
      "fn": "HAV.unlock",
      "offset": [
        3757,
        3800
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A1"
    },
    "556": {
      "op": "JUMP"
    },
    "557": {
      "fn": "HAV.unlock",
      "offset": [
        3757,
        3800
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "558": {
      "fn": "HAV.unlock",
      "offset": [
        3907,
        3925
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 2
    },
    "559": {
      "fn": "HAV.unlock",
      "offset": [
        3907,
        3925
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "560": {
      "fn": "HAV.unlock",
      "offset": [
        3899,
        3955
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x24B"
    },
    "563": {
      "fn": "HAV.unlock",
      "offset": [
        3899,
        3955
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "564": {
      "fn": "HAV.unlock",
      "offset": [
        3899,
        3955
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "566": {
      "fn": "HAV.unlock",
      "offset": [
        3899,
        3955
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "567": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "571": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "573": {
      "op": "SHL"
    },
    "574": {
      "fn": "HAV.unlock",
      "offset": [
        3899,
        3955
      ],
      "op": "DUP2",
      "path": "0"
    },
    "575": {
      "fn": "HAV.unlock",
      "offset": [
        3899,
        3955
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "576": {
      "fn": "HAV.unlock",
      "offset": [
        3899,
        3955
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "578": {
      "fn": "HAV.unlock",
      "offset": [
        3899,
        3955
      ],
      "op": "ADD",
      "path": "0"
    },
    "579": {
      "fn": "HAV.unlock",
      "offset": [
        3899,
        3955
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A1"
    },
    "582": {
      "fn": "HAV.unlock",
      "offset": [
        3899,
        3955
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "583": {
      "fn": "HAV.unlock",
      "offset": [
        3899,
        3955
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD77"
    },
    "586": {
      "fn": "HAV.unlock",
      "jump": "i",
      "offset": [
        3899,
        3955
      ],
      "op": "JUMP",
      "path": "0"
    },
    "587": {
      "fn": "HAV.unlock",
      "offset": [
        3899,
        3955
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "588": {
      "fn": "HAV.unlock",
      "offset": [
        3989,
        4011
      ],
      "op": "DUP1",
      "path": "0"
    },
    "589": {
      "fn": "HAV.unlock",
      "offset": [
        3989,
        4011
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "590": {
      "fn": "HAV.unlock",
      "offset": [
        3989,
        4011
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "592": {
      "fn": "HAV.unlock",
      "offset": [
        3989,
        4011
      ],
      "op": "DUP1",
      "path": "0"
    },
    "593": {
      "fn": "HAV.unlock",
      "offset": [
        3989,
        4011
      ],
      "op": "DUP4",
      "path": "0"
    },
    "594": {
      "fn": "HAV.unlock",
      "offset": [
        3989,
        4011
      ],
      "op": "ADD",
      "path": "0"
    },
    "595": {
      "fn": "HAV.unlock",
      "offset": [
        3989,
        4011
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "596": {
      "fn": "HAV.unlock",
      "offset": [
        3989,
        4011
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "597": {
      "fn": "HAV.unlock",
      "offset": [
        3989,
        4011
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "598": {
      "fn": "HAV.unlock",
      "offset": [
        3989,
        4011
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "599": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "601": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "603": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "605": {
      "op": "SHL"
    },
    "606": {
      "op": "SUB"
    },
    "607": {
      "fn": "HAV.unlock",
      "offset": [
        4047,
        4063
      ],
      "op": "DUP5",
      "path": "0",
      "statement": 3
    },
    "608": {
      "fn": "HAV.unlock",
      "offset": [
        4047,
        4063
      ],
      "op": "AND",
      "path": "0"
    },
    "609": {
      "fn": "HAV.unlock",
      "offset": [
        3965,
        3986
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "611": {
      "fn": "HAV.unlock",
      "offset": [
        4047,
        4063
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "612": {
      "fn": "HAV.unlock",
      "offset": [
        4047,
        4063
      ],
      "op": "DUP2",
      "path": "0"
    },
    "613": {
      "fn": "HAV.unlock",
      "offset": [
        4047,
        4063
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "614": {
      "fn": "HAV.unlock",
      "offset": [
        4047,
        4063
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "615": {
      "fn": "HAV.unlock",
      "offset": [
        4047,
        4063
      ],
      "op": "DUP3",
      "path": "0"
    },
    "616": {
      "fn": "HAV.unlock",
      "offset": [
        4047,
        4063
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "617": {
      "fn": "HAV.unlock",
      "offset": [
        4047,
        4063
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "618": {
      "fn": "HAV.unlock",
      "offset": [
        4047,
        4063
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "620": {
      "fn": "HAV.unlock",
      "offset": [
        4047,
        4063
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "621": {
      "fn": "HAV.unlock",
      "offset": [
        4047,
        4063
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "622": {
      "fn": "HAV.unlock",
      "offset": [
        4047,
        4063
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "623": {
      "fn": "HAV.unlock",
      "offset": [
        4047,
        4067
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "625": {
      "fn": "HAV.unlock",
      "offset": [
        4047,
        4067
      ],
      "op": "ADD",
      "path": "0"
    },
    "626": {
      "fn": "HAV.unlock",
      "offset": [
        4047,
        4067
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "627": {
      "fn": "HAV.unlock",
      "offset": [
        4030,
        4067
      ],
      "op": "DUP2",
      "path": "0"
    },
    "628": {
      "branch": 42,
      "fn": "HAV.unlock",
      "offset": [
        4030,
        4067
      ],
      "op": "EQ",
      "path": "0"
    },
    "629": {
      "fn": "HAV.unlock",
      "offset": [
        4022,
        4082
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2AD"
    },
    "632": {
      "branch": 42,
      "fn": "HAV.unlock",
      "offset": [
        4022,
        4082
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "633": {
      "fn": "HAV.unlock",
      "offset": [
        4022,
        4082
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "635": {
      "fn": "HAV.unlock",
      "offset": [
        4022,
        4082
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "636": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "640": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "642": {
      "op": "SHL"
    },
    "643": {
      "fn": "HAV.unlock",
      "offset": [
        4022,
        4082
      ],
      "op": "DUP2",
      "path": "0"
    },
    "644": {
      "fn": "HAV.unlock",
      "offset": [
        4022,
        4082
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "645": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "647": {
      "fn": "HAV.unlock",
      "offset": [
        4022,
        4082
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "649": {
      "fn": "HAV.unlock",
      "offset": [
        4022,
        4082
      ],
      "op": "DUP3",
      "path": "0"
    },
    "650": {
      "fn": "HAV.unlock",
      "offset": [
        4022,
        4082
      ],
      "op": "ADD",
      "path": "0"
    },
    "651": {
      "op": "MSTORE"
    },
    "652": {
      "op": "PUSH1",
      "value": "0xA"
    },
    "654": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "656": {
      "op": "DUP3"
    },
    "657": {
      "op": "ADD"
    },
    "658": {
      "op": "MSTORE"
    },
    "659": {
      "op": "PUSH10",
      "value": "0x84814185CDCDDDBDC99"
    },
    "670": {
      "op": "PUSH1",
      "value": "0xB2"
    },
    "672": {
      "op": "SHL"
    },
    "673": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "675": {
      "op": "DUP3"
    },
    "676": {
      "op": "ADD"
    },
    "677": {
      "op": "MSTORE"
    },
    "678": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "680": {
      "op": "ADD"
    },
    "681": {
      "fn": "HAV.unlock",
      "offset": [
        4022,
        4082
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A1"
    },
    "684": {
      "op": "JUMP"
    },
    "685": {
      "fn": "HAV.unlock",
      "offset": [
        4022,
        4082
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "686": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "688": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "690": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "692": {
      "op": "SHL"
    },
    "693": {
      "op": "SUB"
    },
    "694": {
      "fn": "HAV.unlock",
      "offset": [
        4194,
        4210
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 4
    },
    "695": {
      "fn": "HAV.unlock",
      "offset": [
        4194,
        4210
      ],
      "op": "AND",
      "path": "0"
    },
    "696": {
      "fn": "HAV.unlock",
      "offset": [
        4146,
        4165
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "698": {
      "fn": "HAV.unlock",
      "offset": [
        4194,
        4210
      ],
      "op": "DUP2",
      "path": "0"
    },
    "699": {
      "fn": "HAV.unlock",
      "offset": [
        4194,
        4210
      ],
      "op": "DUP2",
      "path": "0"
    },
    "700": {
      "fn": "HAV.unlock",
      "offset": [
        4194,
        4210
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "701": {
      "fn": "HAV.unlock",
      "offset": [
        4194,
        4210
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "703": {
      "fn": "HAV.unlock",
      "offset": [
        4194,
        4210
      ],
      "op": "DUP2",
      "path": "0"
    },
    "704": {
      "fn": "HAV.unlock",
      "offset": [
        4194,
        4210
      ],
      "op": "DUP2",
      "path": "0"
    },
    "705": {
      "fn": "HAV.unlock",
      "offset": [
        4194,
        4210
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "706": {
      "fn": "HAV.unlock",
      "offset": [
        4194,
        4210
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "708": {
      "fn": "HAV.unlock",
      "offset": [
        4194,
        4210
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "709": {
      "fn": "HAV.unlock",
      "offset": [
        4194,
        4210
      ],
      "op": "DUP3",
      "path": "0"
    },
    "710": {
      "fn": "HAV.unlock",
      "offset": [
        4194,
        4210
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "711": {
      "fn": "HAV.unlock",
      "offset": [
        4194,
        4210
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "712": {
      "fn": "HAV.unlock",
      "offset": [
        4194,
        4220
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "714": {
      "fn": "HAV.unlock",
      "offset": [
        4194,
        4220
      ],
      "op": "ADD",
      "path": "0"
    },
    "715": {
      "fn": "HAV.unlock",
      "offset": [
        4194,
        4227
      ],
      "op": "DUP1",
      "path": "0"
    },
    "716": {
      "fn": "HAV.unlock",
      "offset": [
        4194,
        4227
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "717": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "719": {
      "op": "NOT"
    },
    "720": {
      "fn": "HAV.unlock",
      "offset": [
        4194,
        4227
      ],
      "op": "AND",
      "path": "0"
    },
    "721": {
      "fn": "HAV.unlock",
      "offset": [
        4223,
        4227
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "723": {
      "fn": "HAV.unlock",
      "offset": [
        4194,
        4227
      ],
      "op": "OR",
      "path": "0"
    },
    "724": {
      "fn": "HAV.unlock",
      "offset": [
        4194,
        4227
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "725": {
      "fn": "HAV.unlock",
      "offset": [
        4194,
        4227
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "726": {
      "fn": "HAV.unlock",
      "offset": [
        4243,
        4284
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 5
    },
    "727": {
      "fn": "HAV.unlock",
      "offset": [
        4243,
        4284
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "728": {
      "fn": "HAV.unlock",
      "offset": [
        4250,
        4260
      ],
      "op": "CALLER",
      "path": "0"
    },
    "729": {
      "op": "DUP2"
    },
    "730": {
      "op": "MSTORE"
    },
    "731": {
      "op": "SWAP1"
    },
    "732": {
      "op": "DUP2"
    },
    "733": {
      "op": "ADD"
    },
    "734": {
      "op": "SWAP3"
    },
    "735": {
      "op": "SWAP1"
    },
    "736": {
      "op": "SWAP3"
    },
    "737": {
      "op": "MSTORE"
    },
    "738": {
      "fn": "HAV.unlock",
      "offset": [
        4168,
        4183
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "739": {
      "op": "SWAP1"
    },
    "740": {
      "op": "DUP3"
    },
    "741": {
      "op": "ADD"
    },
    "742": {
      "op": "DUP2"
    },
    "743": {
      "op": "SWAP1"
    },
    "744": {
      "op": "MSTORE"
    },
    "745": {
      "fn": "HAV.unlock",
      "offset": [
        4168,
        4183
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "746": {
      "fn": "HAV.unlock",
      "offset": [
        4243,
        4284
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xC1C90B8E0705B212262C0DBD7580EFE1862C2F185BF96899226F7596BEB2DB09"
    },
    "779": {
      "fn": "HAV.unlock",
      "offset": [
        4243,
        4284
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "780": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "782": {
      "op": "ADD"
    },
    "783": {
      "fn": "HAV.unlock",
      "offset": [
        4243,
        4284
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "784": {
      "fn": "HAV.unlock",
      "offset": [
        4243,
        4284
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "786": {
      "fn": "HAV.unlock",
      "offset": [
        4243,
        4284
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "787": {
      "fn": "HAV.unlock",
      "offset": [
        4243,
        4284
      ],
      "op": "DUP1",
      "path": "0"
    },
    "788": {
      "fn": "HAV.unlock",
      "offset": [
        4243,
        4284
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "789": {
      "fn": "HAV.unlock",
      "offset": [
        4243,
        4284
      ],
      "op": "SUB",
      "path": "0"
    },
    "790": {
      "fn": "HAV.unlock",
      "offset": [
        4243,
        4284
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "791": {
      "fn": "HAV.unlock",
      "offset": [
        4243,
        4284
      ],
      "op": "LOG1",
      "path": "0"
    },
    "792": {
      "fn": "HAV.unlock",
      "offset": [
        3699,
        4291
      ],
      "op": "POP",
      "path": "0"
    },
    "793": {
      "fn": "HAV.unlock",
      "offset": [
        3699,
        4291
      ],
      "op": "POP",
      "path": "0"
    },
    "794": {
      "fn": "HAV.unlock",
      "offset": [
        3550,
        4291
      ],
      "op": "POP",
      "path": "0"
    },
    "795": {
      "fn": "HAV.unlock",
      "offset": [
        3550,
        4291
      ],
      "op": "POP",
      "path": "0"
    },
    "796": {
      "fn": "HAV.unlock",
      "jump": "o",
      "offset": [
        3550,
        4291
      ],
      "op": "JUMP",
      "path": "0"
    },
    "797": {
      "fn": "HAV.revoke",
      "offset": [
        5406,
        5823
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "798": {
      "offset": [
        1076,
        1086
      ],
      "op": "CALLER",
      "path": "0"
    },
    "799": {
      "offset": [
        1068,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x33A"
    },
    "802": {
      "fn": "HAV.revoke",
      "offset": [
        1068,
        1114
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "803": {
      "fn": "HAV.revoke",
      "offset": [
        1068,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "805": {
      "fn": "HAV.revoke",
      "offset": [
        1068,
        1114
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "806": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "810": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "812": {
      "op": "SHL"
    },
    "813": {
      "offset": [
        1068,
        1114
      ],
      "op": "DUP2",
      "path": "0"
    },
    "814": {
      "fn": "HAV.revoke",
      "offset": [
        1068,
        1114
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "815": {
      "fn": "HAV.revoke",
      "offset": [
        1068,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "817": {
      "fn": "HAV.revoke",
      "offset": [
        1068,
        1114
      ],
      "op": "ADD",
      "path": "0"
    },
    "818": {
      "fn": "HAV.revoke",
      "offset": [
        1068,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A1"
    },
    "821": {
      "fn": "HAV.revoke",
      "offset": [
        1068,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "822": {
      "fn": "HAV.revoke",
      "offset": [
        1068,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD54"
    },
    "825": {
      "fn": "HAV.revoke",
      "jump": "i",
      "offset": [
        1068,
        1114
      ],
      "op": "JUMP",
      "path": "0"
    },
    "826": {
      "fn": "HAV.revoke",
      "offset": [
        1068,
        1114
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "827": {
      "fn": "HAV.revoke",
      "offset": [
        5483,
        5502
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 6,
      "value": "0x343"
    },
    "830": {
      "fn": "HAV.revoke",
      "offset": [
        5491,
        5501
      ],
      "op": "CALLER",
      "path": "0"
    },
    "831": {
      "fn": "HAV.revoke",
      "offset": [
        5483,
        5490
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB7F"
    },
    "834": {
      "fn": "HAV.revoke",
      "jump": "i",
      "offset": [
        5483,
        5502
      ],
      "op": "JUMP",
      "path": "0"
    },
    "835": {
      "branch": 43,
      "fn": "HAV.revoke",
      "offset": [
        5483,
        5502
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "836": {
      "fn": "HAV.revoke",
      "offset": [
        5475,
        5514
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x35F"
    },
    "839": {
      "branch": 43,
      "fn": "HAV.revoke",
      "offset": [
        5475,
        5514
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "840": {
      "fn": "HAV.revoke",
      "offset": [
        5475,
        5514
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "842": {
      "fn": "HAV.revoke",
      "offset": [
        5475,
        5514
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "843": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "847": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "849": {
      "op": "SHL"
    },
    "850": {
      "fn": "HAV.revoke",
      "offset": [
        5475,
        5514
      ],
      "op": "DUP2",
      "path": "0"
    },
    "851": {
      "fn": "HAV.revoke",
      "offset": [
        5475,
        5514
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "852": {
      "fn": "HAV.revoke",
      "offset": [
        5475,
        5514
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "854": {
      "fn": "HAV.revoke",
      "offset": [
        5475,
        5514
      ],
      "op": "ADD",
      "path": "0"
    },
    "855": {
      "fn": "HAV.revoke",
      "offset": [
        5475,
        5514
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A1"
    },
    "858": {
      "fn": "HAV.revoke",
      "offset": [
        5475,
        5514
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "859": {
      "fn": "HAV.revoke",
      "offset": [
        5475,
        5514
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDA5"
    },
    "862": {
      "fn": "HAV.revoke",
      "jump": "i",
      "offset": [
        5475,
        5514
      ],
      "op": "JUMP",
      "path": "0"
    },
    "863": {
      "fn": "HAV.revoke",
      "offset": [
        5475,
        5514
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "864": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "866": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "868": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "870": {
      "op": "SHL"
    },
    "871": {
      "op": "SUB"
    },
    "872": {
      "fn": "HAV.revoke",
      "offset": [
        5609,
        5631
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 7
    },
    "873": {
      "branch": 44,
      "fn": "HAV.revoke",
      "offset": [
        5609,
        5631
      ],
      "op": "AND",
      "path": "0"
    },
    "874": {
      "fn": "HAV.revoke",
      "offset": [
        5601,
        5645
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x385"
    },
    "877": {
      "branch": 44,
      "fn": "HAV.revoke",
      "offset": [
        5601,
        5645
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "878": {
      "fn": "HAV.revoke",
      "offset": [
        5601,
        5645
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "880": {
      "fn": "HAV.revoke",
      "offset": [
        5601,
        5645
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "881": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "885": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "887": {
      "op": "SHL"
    },
    "888": {
      "fn": "HAV.revoke",
      "offset": [
        5601,
        5645
      ],
      "op": "DUP2",
      "path": "0"
    },
    "889": {
      "fn": "HAV.revoke",
      "offset": [
        5601,
        5645
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "890": {
      "fn": "HAV.revoke",
      "offset": [
        5601,
        5645
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "892": {
      "fn": "HAV.revoke",
      "offset": [
        5601,
        5645
      ],
      "op": "ADD",
      "path": "0"
    },
    "893": {
      "fn": "HAV.revoke",
      "offset": [
        5601,
        5645
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A1"
    },
    "896": {
      "fn": "HAV.revoke",
      "offset": [
        5601,
        5645
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "897": {
      "fn": "HAV.revoke",
      "offset": [
        5601,
        5645
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD54"
    },
    "900": {
      "fn": "HAV.revoke",
      "jump": "i",
      "offset": [
        5601,
        5645
      ],
      "op": "JUMP",
      "path": "0"
    },
    "901": {
      "fn": "HAV.revoke",
      "offset": [
        5601,
        5645
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "902": {
      "fn": "HAV.revoke",
      "offset": [
        5674,
        5684
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 8
    },
    "903": {
      "fn": "HAV.revoke",
      "offset": [
        5664,
        5685
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "905": {
      "fn": "HAV.revoke",
      "offset": [
        5664,
        5685
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "906": {
      "fn": "HAV.revoke",
      "offset": [
        5664,
        5685
      ],
      "op": "DUP2",
      "path": "0"
    },
    "907": {
      "fn": "HAV.revoke",
      "offset": [
        5664,
        5685
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "908": {
      "fn": "HAV.revoke",
      "offset": [
        5664,
        5673
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "910": {
      "fn": "HAV.revoke",
      "offset": [
        5664,
        5685
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "912": {
      "fn": "HAV.revoke",
      "offset": [
        5664,
        5685
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "913": {
      "fn": "HAV.revoke",
      "offset": [
        5664,
        5685
      ],
      "op": "DUP2",
      "path": "0"
    },
    "914": {
      "fn": "HAV.revoke",
      "offset": [
        5664,
        5685
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "915": {
      "fn": "HAV.revoke",
      "offset": [
        5664,
        5685
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "917": {
      "fn": "HAV.revoke",
      "offset": [
        5664,
        5685
      ],
      "op": "DUP1",
      "path": "0"
    },
    "918": {
      "fn": "HAV.revoke",
      "offset": [
        5664,
        5685
      ],
      "op": "DUP4",
      "path": "0"
    },
    "919": {
      "fn": "HAV.revoke",
      "offset": [
        5664,
        5685
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "920": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "922": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "924": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "926": {
      "op": "SHL"
    },
    "927": {
      "op": "SUB"
    },
    "928": {
      "fn": "HAV.revoke",
      "offset": [
        5664,
        5695
      ],
      "op": "DUP6",
      "path": "0"
    },
    "929": {
      "fn": "HAV.revoke",
      "offset": [
        5664,
        5695
      ],
      "op": "AND",
      "path": "0"
    },
    "930": {
      "fn": "HAV.revoke",
      "offset": [
        5664,
        5695
      ],
      "op": "DUP5",
      "path": "0"
    },
    "931": {
      "fn": "HAV.revoke",
      "offset": [
        5664,
        5695
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "932": {
      "fn": "HAV.revoke",
      "offset": [
        5664,
        5695
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "933": {
      "fn": "HAV.revoke",
      "offset": [
        5664,
        5695
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "934": {
      "fn": "HAV.revoke",
      "offset": [
        5664,
        5695
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "935": {
      "fn": "HAV.revoke",
      "offset": [
        5664,
        5695
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "936": {
      "fn": "HAV.revoke",
      "offset": [
        5664,
        5695
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "937": {
      "fn": "HAV.revoke",
      "offset": [
        5664,
        5695
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "938": {
      "fn": "HAV.revoke",
      "offset": [
        5664,
        5695
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "940": {
      "branch": 45,
      "fn": "HAV.revoke",
      "offset": [
        5664,
        5695
      ],
      "op": "AND",
      "path": "0"
    },
    "941": {
      "fn": "HAV.revoke",
      "offset": [
        5656,
        5715
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3EA"
    },
    "944": {
      "branch": 45,
      "fn": "HAV.revoke",
      "offset": [
        5656,
        5715
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "945": {
      "fn": "HAV.revoke",
      "offset": [
        5656,
        5715
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "947": {
      "fn": "HAV.revoke",
      "offset": [
        5656,
        5715
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "948": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "952": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "954": {
      "op": "SHL"
    },
    "955": {
      "fn": "HAV.revoke",
      "offset": [
        5656,
        5715
      ],
      "op": "DUP2",
      "path": "0"
    },
    "956": {
      "fn": "HAV.revoke",
      "offset": [
        5656,
        5715
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "957": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "959": {
      "fn": "HAV.revoke",
      "offset": [
        5656,
        5715
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "961": {
      "fn": "HAV.revoke",
      "offset": [
        5656,
        5715
      ],
      "op": "DUP3",
      "path": "0"
    },
    "962": {
      "fn": "HAV.revoke",
      "offset": [
        5656,
        5715
      ],
      "op": "ADD",
      "path": "0"
    },
    "963": {
      "op": "MSTORE"
    },
    "964": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "966": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "968": {
      "op": "DUP3"
    },
    "969": {
      "op": "ADD"
    },
    "970": {
      "op": "MSTORE"
    },
    "971": {
      "op": "PUSH15",
      "value": "0x105B1C9958591E481C995D9BDAD959"
    },
    "987": {
      "op": "PUSH1",
      "value": "0x8A"
    },
    "989": {
      "op": "SHL"
    },
    "990": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "992": {
      "op": "DUP3"
    },
    "993": {
      "op": "ADD"
    },
    "994": {
      "op": "MSTORE"
    },
    "995": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "997": {
      "op": "ADD"
    },
    "998": {
      "fn": "HAV.revoke",
      "offset": [
        5656,
        5715
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A1"
    },
    "1001": {
      "op": "JUMP"
    },
    "1002": {
      "fn": "HAV.revoke",
      "offset": [
        5656,
        5715
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1003": {
      "fn": "HAV.revoke",
      "offset": [
        5736,
        5746
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 9
    },
    "1004": {
      "fn": "HAV.revoke",
      "offset": [
        5760,
        5765
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1006": {
      "fn": "HAV.revoke",
      "offset": [
        5726,
        5747
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1007": {
      "fn": "HAV.revoke",
      "offset": [
        5726,
        5747
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1008": {
      "fn": "HAV.revoke",
      "offset": [
        5726,
        5747
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1009": {
      "fn": "HAV.revoke",
      "offset": [
        5726,
        5735
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1011": {
      "fn": "HAV.revoke",
      "offset": [
        5726,
        5747
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1013": {
      "fn": "HAV.revoke",
      "offset": [
        5726,
        5747
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1014": {
      "fn": "HAV.revoke",
      "offset": [
        5726,
        5747
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1015": {
      "fn": "HAV.revoke",
      "offset": [
        5726,
        5747
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1016": {
      "fn": "HAV.revoke",
      "offset": [
        5726,
        5747
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1018": {
      "fn": "HAV.revoke",
      "offset": [
        5726,
        5747
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1019": {
      "fn": "HAV.revoke",
      "offset": [
        5726,
        5747
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1020": {
      "fn": "HAV.revoke",
      "offset": [
        5726,
        5747
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1021": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1023": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1025": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1027": {
      "op": "SHL"
    },
    "1028": {
      "op": "SUB"
    },
    "1029": {
      "fn": "HAV.revoke",
      "offset": [
        5726,
        5757
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1030": {
      "fn": "HAV.revoke",
      "offset": [
        5726,
        5757
      ],
      "op": "AND",
      "path": "0"
    },
    "1031": {
      "fn": "HAV.revoke",
      "offset": [
        5726,
        5757
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1032": {
      "fn": "HAV.revoke",
      "offset": [
        5726,
        5757
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1033": {
      "fn": "HAV.revoke",
      "offset": [
        5726,
        5757
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1034": {
      "fn": "HAV.revoke",
      "offset": [
        5726,
        5757
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1035": {
      "fn": "HAV.revoke",
      "offset": [
        5726,
        5757
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1036": {
      "fn": "HAV.revoke",
      "offset": [
        5726,
        5757
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1037": {
      "fn": "HAV.revoke",
      "offset": [
        5726,
        5757
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1038": {
      "fn": "HAV.revoke",
      "offset": [
        5726,
        5757
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1039": {
      "fn": "HAV.revoke",
      "offset": [
        5726,
        5757
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1040": {
      "fn": "HAV.revoke",
      "offset": [
        5726,
        5765
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1041": {
      "fn": "HAV.revoke",
      "offset": [
        5726,
        5765
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1042": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1044": {
      "op": "NOT"
    },
    "1045": {
      "fn": "HAV.revoke",
      "offset": [
        5726,
        5765
      ],
      "op": "AND",
      "path": "0"
    },
    "1046": {
      "fn": "HAV.revoke",
      "offset": [
        5726,
        5765
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1047": {
      "fn": "HAV.revoke",
      "offset": [
        5726,
        5765
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1048": {
      "fn": "HAV.revoke",
      "offset": [
        5781,
        5816
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 10
    },
    "1049": {
      "fn": "HAV.revoke",
      "offset": [
        5781,
        5816
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1050": {
      "op": "SWAP5"
    },
    "1051": {
      "op": "DUP6"
    },
    "1052": {
      "op": "MSTORE"
    },
    "1053": {
      "op": "SWAP2"
    },
    "1054": {
      "op": "DUP5"
    },
    "1055": {
      "op": "ADD"
    },
    "1056": {
      "op": "SWAP2"
    },
    "1057": {
      "op": "SWAP1"
    },
    "1058": {
      "op": "SWAP2"
    },
    "1059": {
      "op": "MSTORE"
    },
    "1060": {
      "op": "DUP3"
    },
    "1061": {
      "op": "ADD"
    },
    "1062": {
      "op": "MSTORE"
    },
    "1063": {
      "fn": "HAV.revoke",
      "offset": [
        5781,
        5816
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xB10892907D1785E9C412FBA4152A8282BCBB3A1B8E71701036C341CF9D5704AE"
    },
    "1096": {
      "fn": "HAV.revoke",
      "offset": [
        5781,
        5816
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1097": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1099": {
      "op": "ADD"
    },
    "1100": {
      "fn": "HAV.revoke",
      "offset": [
        5781,
        5816
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1101": {
      "fn": "HAV.revoke",
      "offset": [
        5781,
        5816
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1103": {
      "fn": "HAV.revoke",
      "offset": [
        5781,
        5816
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1104": {
      "fn": "HAV.revoke",
      "offset": [
        5781,
        5816
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1105": {
      "fn": "HAV.revoke",
      "offset": [
        5781,
        5816
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1106": {
      "fn": "HAV.revoke",
      "offset": [
        5781,
        5816
      ],
      "op": "SUB",
      "path": "0"
    },
    "1107": {
      "fn": "HAV.revoke",
      "offset": [
        5781,
        5816
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1108": {
      "fn": "HAV.revoke",
      "offset": [
        5781,
        5816
      ],
      "op": "LOG1",
      "path": "0"
    },
    "1109": {
      "fn": "HAV.revoke",
      "offset": [
        5406,
        5823
      ],
      "op": "POP",
      "path": "0"
    },
    "1110": {
      "fn": "HAV.revoke",
      "jump": "o",
      "offset": [
        5406,
        5823
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1111": {
      "fn": "HAV.book",
      "offset": [
        1966,
        2586
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1112": {
      "offset": [
        1076,
        1086
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1113": {
      "offset": [
        1068,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x474"
    },
    "1116": {
      "fn": "HAV.book",
      "offset": [
        1068,
        1114
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1117": {
      "fn": "HAV.book",
      "offset": [
        1068,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1119": {
      "fn": "HAV.book",
      "offset": [
        1068,
        1114
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1120": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1124": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1126": {
      "op": "SHL"
    },
    "1127": {
      "offset": [
        1068,
        1114
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1128": {
      "fn": "HAV.book",
      "offset": [
        1068,
        1114
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1129": {
      "fn": "HAV.book",
      "offset": [
        1068,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1131": {
      "fn": "HAV.book",
      "offset": [
        1068,
        1114
      ],
      "op": "ADD",
      "path": "0"
    },
    "1132": {
      "fn": "HAV.book",
      "offset": [
        1068,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A1"
    },
    "1135": {
      "fn": "HAV.book",
      "offset": [
        1068,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1136": {
      "fn": "HAV.book",
      "offset": [
        1068,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD54"
    },
    "1139": {
      "fn": "HAV.book",
      "jump": "i",
      "offset": [
        1068,
        1114
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1140": {
      "fn": "HAV.book",
      "offset": [
        1068,
        1114
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1141": {
      "fn": "HAV.book",
      "offset": [
        2057,
        2076
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 11,
      "value": "0x47D"
    },
    "1144": {
      "fn": "HAV.book",
      "offset": [
        2065,
        2075
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1145": {
      "fn": "HAV.book",
      "offset": [
        2057,
        2064
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB7F"
    },
    "1148": {
      "fn": "HAV.book",
      "jump": "i",
      "offset": [
        2057,
        2076
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1149": {
      "fn": "HAV.book",
      "offset": [
        2057,
        2076
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1150": {
      "branch": 46,
      "fn": "HAV.book",
      "offset": [
        2056,
        2076
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1151": {
      "fn": "HAV.book",
      "offset": [
        2048,
        2097
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4BD"
    },
    "1154": {
      "branch": 46,
      "fn": "HAV.book",
      "offset": [
        2048,
        2097
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1155": {
      "fn": "HAV.book",
      "offset": [
        2048,
        2097
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1157": {
      "fn": "HAV.book",
      "offset": [
        2048,
        2097
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1158": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1162": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1164": {
      "op": "SHL"
    },
    "1165": {
      "fn": "HAV.book",
      "offset": [
        2048,
        2097
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1166": {
      "fn": "HAV.book",
      "offset": [
        2048,
        2097
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1167": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1169": {
      "fn": "HAV.book",
      "offset": [
        2048,
        2097
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1171": {
      "fn": "HAV.book",
      "offset": [
        2048,
        2097
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1172": {
      "fn": "HAV.book",
      "offset": [
        2048,
        2097
      ],
      "op": "ADD",
      "path": "0"
    },
    "1173": {
      "op": "MSTORE"
    },
    "1174": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "1176": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1178": {
      "op": "DUP3"
    },
    "1179": {
      "op": "ADD"
    },
    "1180": {
      "op": "MSTORE"
    },
    "1181": {
      "op": "PUSH16",
      "value": "0x2CB7BA903430BB329030903937B7B697"
    },
    "1198": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "1200": {
      "op": "SHL"
    },
    "1201": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1203": {
      "op": "DUP3"
    },
    "1204": {
      "op": "ADD"
    },
    "1205": {
      "op": "MSTORE"
    },
    "1206": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1208": {
      "op": "ADD"
    },
    "1209": {
      "fn": "HAV.book",
      "offset": [
        2048,
        2097
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A1"
    },
    "1212": {
      "op": "JUMP"
    },
    "1213": {
      "fn": "HAV.book",
      "offset": [
        2048,
        2097
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1214": {
      "fn": "HAV.book",
      "offset": [
        2190,
        2213
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 12
    },
    "1215": {
      "fn": "HAV.book",
      "offset": [
        2190,
        2213
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1216": {
      "fn": "HAV.book",
      "offset": [
        2182,
        2243
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4DB"
    },
    "1219": {
      "fn": "HAV.book",
      "offset": [
        2182,
        2243
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1220": {
      "fn": "HAV.book",
      "offset": [
        2182,
        2243
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1222": {
      "fn": "HAV.book",
      "offset": [
        2182,
        2243
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1223": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1227": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1229": {
      "op": "SHL"
    },
    "1230": {
      "fn": "HAV.book",
      "offset": [
        2182,
        2243
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1231": {
      "fn": "HAV.book",
      "offset": [
        2182,
        2243
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1232": {
      "fn": "HAV.book",
      "offset": [
        2182,
        2243
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1234": {
      "fn": "HAV.book",
      "offset": [
        2182,
        2243
      ],
      "op": "ADD",
      "path": "0"
    },
    "1235": {
      "fn": "HAV.book",
      "offset": [
        2182,
        2243
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A1"
    },
    "1238": {
      "fn": "HAV.book",
      "offset": [
        2182,
        2243
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1239": {
      "fn": "HAV.book",
      "offset": [
        2182,
        2243
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD77"
    },
    "1242": {
      "fn": "HAV.book",
      "jump": "i",
      "offset": [
        2182,
        2243
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1243": {
      "fn": "HAV.book",
      "offset": [
        2182,
        2243
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1244": {
      "fn": "HAV.book",
      "offset": [
        2274,
        2285
      ],
      "op": "PUSH6",
      "path": "0",
      "statement": 13,
      "value": "0x2D79883D2000"
    },
    "1251": {
      "fn": "HAV.book",
      "offset": [
        2261,
        2270
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1252": {
      "fn": "HAV.book",
      "offset": [
        2261,
        2285
      ],
      "op": "LT",
      "path": "0"
    },
    "1253": {
      "branch": 47,
      "fn": "HAV.book",
      "offset": [
        2261,
        2285
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1254": {
      "fn": "HAV.book",
      "offset": [
        2253,
        2310
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x528"
    },
    "1257": {
      "branch": 47,
      "fn": "HAV.book",
      "offset": [
        2253,
        2310
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1258": {
      "fn": "HAV.book",
      "offset": [
        2253,
        2310
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1260": {
      "fn": "HAV.book",
      "offset": [
        2253,
        2310
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1261": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1265": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1267": {
      "op": "SHL"
    },
    "1268": {
      "fn": "HAV.book",
      "offset": [
        2253,
        2310
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1269": {
      "fn": "HAV.book",
      "offset": [
        2253,
        2310
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1270": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1272": {
      "fn": "HAV.book",
      "offset": [
        2253,
        2310
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1274": {
      "fn": "HAV.book",
      "offset": [
        2253,
        2310
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1275": {
      "fn": "HAV.book",
      "offset": [
        2253,
        2310
      ],
      "op": "ADD",
      "path": "0"
    },
    "1276": {
      "op": "MSTORE"
    },
    "1277": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "1279": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1281": {
      "op": "DUP3"
    },
    "1282": {
      "op": "ADD"
    },
    "1283": {
      "op": "MSTORE"
    },
    "1284": {
      "op": "PUSH20",
      "value": "0x5072696365203E3D2035302C3030302067776569"
    },
    "1305": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1307": {
      "op": "SHL"
    },
    "1308": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1310": {
      "op": "DUP3"
    },
    "1311": {
      "op": "ADD"
    },
    "1312": {
      "op": "MSTORE"
    },
    "1313": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1315": {
      "op": "ADD"
    },
    "1316": {
      "fn": "HAV.book",
      "offset": [
        2253,
        2310
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A1"
    },
    "1319": {
      "op": "JUMP"
    },
    "1320": {
      "fn": "HAV.book",
      "offset": [
        2253,
        2310
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1321": {
      "fn": "HAV.book",
      "offset": [
        2340,
        2367
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1322": {
      "fn": "HAV.book",
      "offset": [
        2340,
        2367
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1323": {
      "fn": "HAV.book",
      "offset": [
        2340,
        2367
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1325": {
      "fn": "HAV.book",
      "offset": [
        2340,
        2367
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1326": {
      "fn": "HAV.book",
      "offset": [
        2340,
        2367
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1327": {
      "fn": "HAV.book",
      "offset": [
        2340,
        2367
      ],
      "op": "ADD",
      "path": "0"
    },
    "1328": {
      "fn": "HAV.book",
      "offset": [
        2340,
        2367
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1329": {
      "fn": "HAV.book",
      "offset": [
        2340,
        2367
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1330": {
      "fn": "HAV.book",
      "offset": [
        2340,
        2367
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1331": {
      "fn": "HAV.book",
      "offset": [
        2340,
        2367
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1332": {
      "fn": "HAV.book",
      "offset": [
        2398,
        2501
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1334": {
      "fn": "HAV.book",
      "offset": [
        2398,
        2501
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1335": {
      "fn": "HAV.book",
      "offset": [
        2398,
        2501
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1336": {
      "fn": "HAV.book",
      "offset": [
        2398,
        2501
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "1338": {
      "fn": "HAV.book",
      "offset": [
        2398,
        2501
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1339": {
      "fn": "HAV.book",
      "offset": [
        2398,
        2501
      ],
      "op": "ADD",
      "path": "0"
    },
    "1340": {
      "fn": "HAV.book",
      "offset": [
        2398,
        2501
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1341": {
      "fn": "HAV.book",
      "offset": [
        2398,
        2501
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1342": {
      "fn": "HAV.book",
      "offset": [
        2417,
        2427
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1343": {
      "fn": "HAV.book",
      "offset": [
        2398,
        2501
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1344": {
      "fn": "HAV.book",
      "offset": [
        2398,
        2501
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1345": {
      "fn": "HAV.book",
      "offset": [
        2398,
        2501
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1346": {
      "fn": "HAV.book",
      "offset": [
        2441,
        2450
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1347": {
      "fn": "HAV.book",
      "offset": [
        2398,
        2501
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1348": {
      "fn": "HAV.book",
      "offset": [
        2398,
        2501
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1349": {
      "fn": "HAV.book",
      "offset": [
        2398,
        2501
      ],
      "op": "ADD",
      "path": "0"
    },
    "1350": {
      "fn": "HAV.book",
      "offset": [
        2398,
        2501
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1351": {
      "fn": "HAV.book",
      "offset": [
        2398,
        2501
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1352": {
      "fn": "HAV.book",
      "offset": [
        2398,
        2501
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1353": {
      "fn": "HAV.book",
      "offset": [
        2398,
        2501
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1354": {
      "fn": "HAV.book",
      "offset": [
        2398,
        2501
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1355": {
      "fn": "HAV.book",
      "offset": [
        2398,
        2501
      ],
      "op": "ADD",
      "path": "0"
    },
    "1356": {
      "fn": "HAV.book",
      "offset": [
        2398,
        2501
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1357": {
      "fn": "HAV.book",
      "offset": [
        2398,
        2501
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1358": {
      "fn": "HAV.book",
      "offset": [
        2398,
        2501
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1359": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1361": {
      "fn": "HAV.book",
      "offset": [
        2398,
        2501
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "1363": {
      "fn": "HAV.book",
      "offset": [
        2398,
        2501
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1364": {
      "fn": "HAV.book",
      "offset": [
        2398,
        2501
      ],
      "op": "ADD",
      "path": "0"
    },
    "1365": {
      "fn": "HAV.book",
      "offset": [
        2398,
        2501
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1366": {
      "fn": "HAV.book",
      "offset": [
        2398,
        2501
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1367": {
      "fn": "HAV.book",
      "offset": [
        2398,
        2501
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1368": {
      "fn": "HAV.book",
      "offset": [
        2512,
        2530
      ],
      "op": "DUP5",
      "path": "0",
      "statement": 14
    },
    "1369": {
      "fn": "HAV.book",
      "offset": [
        2512,
        2530
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1370": {
      "fn": "HAV.book",
      "offset": [
        2512,
        2530
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1371": {
      "fn": "HAV.book",
      "offset": [
        2512,
        2530
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1372": {
      "fn": "HAV.book",
      "offset": [
        2512,
        2530
      ],
      "op": "DUP10",
      "path": "0"
    },
    "1373": {
      "fn": "HAV.book",
      "offset": [
        2512,
        2530
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1374": {
      "fn": "HAV.book",
      "offset": [
        2512,
        2530
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1375": {
      "fn": "HAV.book",
      "offset": [
        2512,
        2530
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1376": {
      "fn": "HAV.book",
      "offset": [
        2512,
        2530
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1377": {
      "fn": "HAV.book",
      "offset": [
        2512,
        2530
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1378": {
      "fn": "HAV.book",
      "offset": [
        2512,
        2537
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1379": {
      "fn": "HAV.book",
      "offset": [
        2512,
        2537
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1380": {
      "fn": "HAV.book",
      "offset": [
        2512,
        2537
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1381": {
      "fn": "HAV.book",
      "offset": [
        2512,
        2537
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1382": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1384": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1386": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1388": {
      "op": "SHL"
    },
    "1389": {
      "op": "SUB"
    },
    "1390": {
      "op": "NOT"
    },
    "1391": {
      "fn": "HAV.book",
      "offset": [
        2512,
        2537
      ],
      "op": "AND",
      "path": "0"
    },
    "1392": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1394": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1396": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1398": {
      "op": "SHL"
    },
    "1399": {
      "op": "SUB"
    },
    "1400": {
      "fn": "HAV.book",
      "offset": [
        2512,
        2537
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1401": {
      "fn": "HAV.book",
      "offset": [
        2512,
        2537
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1402": {
      "fn": "HAV.book",
      "offset": [
        2512,
        2537
      ],
      "op": "AND",
      "path": "0"
    },
    "1403": {
      "fn": "HAV.book",
      "offset": [
        2512,
        2537
      ],
      "op": "OR",
      "path": "0"
    },
    "1404": {
      "fn": "HAV.book",
      "offset": [
        2512,
        2537
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1405": {
      "fn": "HAV.book",
      "offset": [
        2512,
        2537
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1406": {
      "fn": "HAV.book",
      "offset": [
        2512,
        2537
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1407": {
      "fn": "HAV.book",
      "offset": [
        2512,
        2537
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1408": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1410": {
      "fn": "HAV.book",
      "offset": [
        2512,
        2537
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1411": {
      "fn": "HAV.book",
      "offset": [
        2512,
        2537
      ],
      "op": "ADD",
      "path": "0"
    },
    "1412": {
      "fn": "HAV.book",
      "offset": [
        2512,
        2537
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1413": {
      "fn": "HAV.book",
      "offset": [
        2512,
        2537
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1414": {
      "fn": "HAV.book",
      "offset": [
        2512,
        2537
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1415": {
      "fn": "HAV.book",
      "offset": [
        2512,
        2537
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1417": {
      "fn": "HAV.book",
      "offset": [
        2512,
        2537
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1418": {
      "fn": "HAV.book",
      "offset": [
        2512,
        2537
      ],
      "op": "ADD",
      "path": "0"
    },
    "1419": {
      "fn": "HAV.book",
      "offset": [
        2512,
        2537
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1420": {
      "fn": "HAV.book",
      "offset": [
        2512,
        2537
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1421": {
      "fn": "HAV.book",
      "offset": [
        2512,
        2537
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1423": {
      "fn": "HAV.book",
      "offset": [
        2512,
        2537
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1424": {
      "fn": "HAV.book",
      "offset": [
        2512,
        2537
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1425": {
      "fn": "HAV.book",
      "offset": [
        2512,
        2537
      ],
      "op": "ADD",
      "path": "0"
    },
    "1426": {
      "fn": "HAV.book",
      "offset": [
        2512,
        2537
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1427": {
      "fn": "HAV.book",
      "offset": [
        2512,
        2537
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1428": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1430": {
      "op": "NOT"
    },
    "1431": {
      "fn": "HAV.book",
      "offset": [
        2512,
        2537
      ],
      "op": "AND",
      "path": "0"
    },
    "1432": {
      "fn": "HAV.book",
      "offset": [
        2512,
        2537
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1433": {
      "fn": "HAV.book",
      "offset": [
        2512,
        2537
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1434": {
      "fn": "HAV.book",
      "offset": [
        2512,
        2537
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1435": {
      "fn": "HAV.book",
      "offset": [
        2512,
        2537
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1436": {
      "fn": "HAV.book",
      "offset": [
        2512,
        2537
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1437": {
      "fn": "HAV.book",
      "offset": [
        2512,
        2537
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1438": {
      "fn": "HAV.book",
      "offset": [
        2512,
        2537
      ],
      "op": "OR",
      "path": "0"
    },
    "1439": {
      "fn": "HAV.book",
      "offset": [
        2512,
        2537
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1440": {
      "fn": "HAV.book",
      "offset": [
        2512,
        2537
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1441": {
      "fn": "HAV.book",
      "offset": [
        2553,
        2579
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 15
    },
    "1442": {
      "fn": "HAV.book",
      "offset": [
        2553,
        2579
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1443": {
      "op": "SWAP1"
    },
    "1444": {
      "op": "DUP2"
    },
    "1445": {
      "op": "MSTORE"
    },
    "1446": {
      "op": "SWAP4"
    },
    "1447": {
      "op": "DUP5"
    },
    "1448": {
      "op": "ADD"
    },
    "1449": {
      "op": "DUP4"
    },
    "1450": {
      "op": "SWAP1"
    },
    "1451": {
      "op": "MSTORE"
    },
    "1452": {
      "fn": "HAV.book",
      "offset": [
        2340,
        2367
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1453": {
      "fn": "HAV.book",
      "offset": [
        2340,
        2367
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1454": {
      "fn": "HAV.book",
      "offset": [
        2553,
        2579
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xBA49A8318D072C8E8DC370612E44C40798BF6DF880B71878A5C0FD0AEA854EED"
    },
    "1487": {
      "fn": "HAV.book",
      "offset": [
        2553,
        2579
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1488": {
      "op": "ADD"
    },
    "1489": {
      "fn": "HAV.book",
      "offset": [
        2553,
        2579
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1491": {
      "fn": "HAV.book",
      "offset": [
        2553,
        2579
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1492": {
      "fn": "HAV.book",
      "offset": [
        2553,
        2579
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1493": {
      "fn": "HAV.book",
      "offset": [
        2553,
        2579
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1494": {
      "fn": "HAV.book",
      "offset": [
        2553,
        2579
      ],
      "op": "SUB",
      "path": "0"
    },
    "1495": {
      "fn": "HAV.book",
      "offset": [
        2553,
        2579
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1496": {
      "fn": "HAV.book",
      "offset": [
        2553,
        2579
      ],
      "op": "LOG1",
      "path": "0"
    },
    "1497": {
      "fn": "HAV.book",
      "offset": [
        2038,
        2586
      ],
      "op": "POP",
      "path": "0"
    },
    "1498": {
      "fn": "HAV.book",
      "offset": [
        2038,
        2586
      ],
      "op": "POP",
      "path": "0"
    },
    "1499": {
      "fn": "HAV.book",
      "offset": [
        1966,
        2586
      ],
      "op": "POP",
      "path": "0"
    },
    "1500": {
      "fn": "HAV.book",
      "jump": "o",
      "offset": [
        1966,
        2586
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1501": {
      "fn": "HAV.leave",
      "offset": [
        5901,
        6282
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1502": {
      "offset": [
        1076,
        1086
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1503": {
      "offset": [
        1068,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5FA"
    },
    "1506": {
      "fn": "HAV.leave",
      "offset": [
        1068,
        1114
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1507": {
      "fn": "HAV.leave",
      "offset": [
        1068,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1509": {
      "fn": "HAV.leave",
      "offset": [
        1068,
        1114
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1510": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1514": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1516": {
      "op": "SHL"
    },
    "1517": {
      "offset": [
        1068,
        1114
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1518": {
      "fn": "HAV.leave",
      "offset": [
        1068,
        1114
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1519": {
      "fn": "HAV.leave",
      "offset": [
        1068,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1521": {
      "fn": "HAV.leave",
      "offset": [
        1068,
        1114
      ],
      "op": "ADD",
      "path": "0"
    },
    "1522": {
      "fn": "HAV.leave",
      "offset": [
        1068,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A1"
    },
    "1525": {
      "fn": "HAV.leave",
      "offset": [
        1068,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1526": {
      "fn": "HAV.leave",
      "offset": [
        1068,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD54"
    },
    "1529": {
      "fn": "HAV.leave",
      "jump": "i",
      "offset": [
        1068,
        1114
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1530": {
      "fn": "HAV.leave",
      "offset": [
        1068,
        1114
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1531": {
      "fn": "HAV.leave",
      "offset": [
        5977,
        5996
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 16,
      "value": "0x603"
    },
    "1534": {
      "fn": "HAV.leave",
      "offset": [
        5985,
        5995
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1535": {
      "fn": "HAV.leave",
      "offset": [
        5977,
        5984
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB7F"
    },
    "1538": {
      "fn": "HAV.leave",
      "jump": "i",
      "offset": [
        5977,
        5996
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1539": {
      "branch": 48,
      "fn": "HAV.leave",
      "offset": [
        5977,
        5996
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1540": {
      "fn": "HAV.leave",
      "offset": [
        5969,
        6008
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x61F"
    },
    "1543": {
      "branch": 48,
      "fn": "HAV.leave",
      "offset": [
        5969,
        6008
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1544": {
      "fn": "HAV.leave",
      "offset": [
        5969,
        6008
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1546": {
      "fn": "HAV.leave",
      "offset": [
        5969,
        6008
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1547": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1551": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1553": {
      "op": "SHL"
    },
    "1554": {
      "fn": "HAV.leave",
      "offset": [
        5969,
        6008
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1555": {
      "fn": "HAV.leave",
      "offset": [
        5969,
        6008
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1556": {
      "fn": "HAV.leave",
      "offset": [
        5969,
        6008
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1558": {
      "fn": "HAV.leave",
      "offset": [
        5969,
        6008
      ],
      "op": "ADD",
      "path": "0"
    },
    "1559": {
      "fn": "HAV.leave",
      "offset": [
        5969,
        6008
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A1"
    },
    "1562": {
      "fn": "HAV.leave",
      "offset": [
        5969,
        6008
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1563": {
      "fn": "HAV.leave",
      "offset": [
        5969,
        6008
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDA5"
    },
    "1566": {
      "fn": "HAV.leave",
      "jump": "i",
      "offset": [
        5969,
        6008
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1567": {
      "fn": "HAV.leave",
      "offset": [
        5969,
        6008
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1568": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1570": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1572": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1574": {
      "op": "SHL"
    },
    "1575": {
      "op": "SUB"
    },
    "1576": {
      "fn": "HAV.leave",
      "offset": [
        6115,
        6131
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 17
    },
    "1577": {
      "fn": "HAV.leave",
      "offset": [
        6115,
        6131
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1578": {
      "fn": "HAV.leave",
      "offset": [
        6115,
        6131
      ],
      "op": "AND",
      "path": "0"
    },
    "1579": {
      "fn": "HAV.leave",
      "offset": [
        6115,
        6121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1581": {
      "fn": "HAV.leave",
      "offset": [
        6115,
        6131
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1582": {
      "fn": "HAV.leave",
      "offset": [
        6115,
        6131
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1583": {
      "fn": "HAV.leave",
      "offset": [
        6115,
        6131
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1584": {
      "fn": "HAV.leave",
      "offset": [
        6115,
        6131
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1586": {
      "fn": "HAV.leave",
      "offset": [
        6115,
        6131
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1587": {
      "fn": "HAV.leave",
      "offset": [
        6115,
        6131
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1588": {
      "fn": "HAV.leave",
      "offset": [
        6115,
        6131
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1589": {
      "fn": "HAV.leave",
      "offset": [
        6115,
        6131
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1591": {
      "fn": "HAV.leave",
      "offset": [
        6115,
        6131
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1592": {
      "fn": "HAV.leave",
      "offset": [
        6115,
        6131
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1593": {
      "fn": "HAV.leave",
      "offset": [
        6115,
        6140
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1594": {
      "fn": "HAV.leave",
      "offset": [
        6115,
        6140
      ],
      "op": "AND",
      "path": "0"
    },
    "1595": {
      "fn": "HAV.leave",
      "offset": [
        6101,
        6111
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1596": {
      "branch": 49,
      "fn": "HAV.leave",
      "offset": [
        6101,
        6140
      ],
      "op": "EQ",
      "path": "0"
    },
    "1597": {
      "fn": "HAV.leave",
      "offset": [
        6093,
        6152
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x672"
    },
    "1600": {
      "branch": 49,
      "fn": "HAV.leave",
      "offset": [
        6093,
        6152
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1601": {
      "fn": "HAV.leave",
      "offset": [
        6093,
        6152
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1603": {
      "fn": "HAV.leave",
      "offset": [
        6093,
        6152
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1604": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1608": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1610": {
      "op": "SHL"
    },
    "1611": {
      "fn": "HAV.leave",
      "offset": [
        6093,
        6152
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1612": {
      "fn": "HAV.leave",
      "offset": [
        6093,
        6152
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1613": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1615": {
      "fn": "HAV.leave",
      "offset": [
        6093,
        6152
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1617": {
      "fn": "HAV.leave",
      "offset": [
        6093,
        6152
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1618": {
      "fn": "HAV.leave",
      "offset": [
        6093,
        6152
      ],
      "op": "ADD",
      "path": "0"
    },
    "1619": {
      "op": "MSTORE"
    },
    "1620": {
      "op": "PUSH1",
      "value": "0x7"
    },
    "1622": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1624": {
      "op": "DUP3"
    },
    "1625": {
      "op": "ADD"
    },
    "1626": {
      "op": "MSTORE"
    },
    "1627": {
      "op": "PUSH7",
      "value": "0x84813DDDB9959"
    },
    "1635": {
      "op": "PUSH1",
      "value": "0xCA"
    },
    "1637": {
      "op": "SHL"
    },
    "1638": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1640": {
      "op": "DUP3"
    },
    "1641": {
      "op": "ADD"
    },
    "1642": {
      "op": "MSTORE"
    },
    "1643": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1645": {
      "op": "ADD"
    },
    "1646": {
      "fn": "HAV.leave",
      "offset": [
        6093,
        6152
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A1"
    },
    "1649": {
      "op": "JUMP"
    },
    "1650": {
      "fn": "HAV.leave",
      "offset": [
        6093,
        6152
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1651": {
      "fn": "HAV.leave",
      "offset": [
        6225,
        6235
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 18
    },
    "1652": {
      "fn": "HAV.leave",
      "offset": [
        6171,
        6183
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1654": {
      "fn": "HAV.leave",
      "offset": [
        6218,
        6236
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1655": {
      "fn": "HAV.leave",
      "offset": [
        6218,
        6236
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1656": {
      "fn": "HAV.leave",
      "offset": [
        6218,
        6236
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1657": {
      "fn": "HAV.leave",
      "offset": [
        6218,
        6236
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1659": {
      "fn": "HAV.leave",
      "offset": [
        6218,
        6236
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1660": {
      "fn": "HAV.leave",
      "offset": [
        6218,
        6236
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1661": {
      "fn": "HAV.leave",
      "offset": [
        6218,
        6236
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1662": {
      "fn": "HAV.leave",
      "offset": [
        6218,
        6236
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1664": {
      "fn": "HAV.leave",
      "offset": [
        6218,
        6236
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1665": {
      "fn": "HAV.leave",
      "offset": [
        6218,
        6236
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1666": {
      "fn": "HAV.leave",
      "offset": [
        6218,
        6236
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1667": {
      "fn": "HAV.leave",
      "offset": [
        6211,
        6236
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1668": {
      "fn": "HAV.leave",
      "offset": [
        6211,
        6236
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1669": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1671": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1673": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1675": {
      "op": "SHL"
    },
    "1676": {
      "op": "SUB"
    },
    "1677": {
      "op": "NOT"
    },
    "1678": {
      "fn": "HAV.leave",
      "offset": [
        6211,
        6236
      ],
      "op": "AND",
      "path": "0"
    },
    "1679": {
      "fn": "HAV.leave",
      "offset": [
        6211,
        6236
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1680": {
      "fn": "HAV.leave",
      "offset": [
        6211,
        6236
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1681": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1683": {
      "fn": "HAV.leave",
      "offset": [
        6211,
        6236
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1684": {
      "fn": "HAV.leave",
      "offset": [
        6211,
        6236
      ],
      "op": "ADD",
      "path": "0"
    },
    "1685": {
      "fn": "HAV.leave",
      "offset": [
        6211,
        6236
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1686": {
      "fn": "HAV.leave",
      "offset": [
        6211,
        6236
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1687": {
      "fn": "HAV.leave",
      "offset": [
        6211,
        6236
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1688": {
      "fn": "HAV.leave",
      "offset": [
        6211,
        6236
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1690": {
      "fn": "HAV.leave",
      "offset": [
        6211,
        6236
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1691": {
      "fn": "HAV.leave",
      "offset": [
        6211,
        6236
      ],
      "op": "ADD",
      "path": "0"
    },
    "1692": {
      "fn": "HAV.leave",
      "offset": [
        6211,
        6236
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1693": {
      "fn": "HAV.leave",
      "offset": [
        6211,
        6236
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1694": {
      "fn": "HAV.leave",
      "offset": [
        6211,
        6236
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1695": {
      "fn": "HAV.leave",
      "offset": [
        6211,
        6236
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1696": {
      "fn": "HAV.leave",
      "offset": [
        6211,
        6236
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1698": {
      "fn": "HAV.leave",
      "offset": [
        6211,
        6236
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1699": {
      "fn": "HAV.leave",
      "offset": [
        6211,
        6236
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1700": {
      "fn": "HAV.leave",
      "offset": [
        6211,
        6236
      ],
      "op": "ADD",
      "path": "0"
    },
    "1701": {
      "fn": "HAV.leave",
      "offset": [
        6211,
        6236
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1702": {
      "fn": "HAV.leave",
      "offset": [
        6211,
        6236
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1703": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1705": {
      "op": "NOT"
    },
    "1706": {
      "fn": "HAV.leave",
      "offset": [
        6211,
        6236
      ],
      "op": "AND",
      "path": "0"
    },
    "1707": {
      "fn": "HAV.leave",
      "offset": [
        6211,
        6236
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1708": {
      "fn": "HAV.leave",
      "offset": [
        6211,
        6236
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1709": {
      "fn": "HAV.leave",
      "offset": [
        6252,
        6275
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 19
    },
    "1710": {
      "fn": "HAV.leave",
      "offset": [
        6252,
        6275
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1711": {
      "op": "SWAP3"
    },
    "1712": {
      "op": "DUP4"
    },
    "1713": {
      "op": "MSTORE"
    },
    "1714": {
      "fn": "HAV.leave",
      "offset": [
        6186,
        6201
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "1715": {
      "op": "SWAP1"
    },
    "1716": {
      "op": "DUP4"
    },
    "1717": {
      "op": "ADD"
    },
    "1718": {
      "op": "DUP2"
    },
    "1719": {
      "op": "SWAP1"
    },
    "1720": {
      "op": "MSTORE"
    },
    "1721": {
      "fn": "HAV.leave",
      "offset": [
        6186,
        6201
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1722": {
      "fn": "HAV.leave",
      "offset": [
        6252,
        6275
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x61A26F7C17D8780C095CCFA67E689A13EE4E06DDCE3DA18956369F4A396100E8"
    },
    "1755": {
      "fn": "HAV.leave",
      "offset": [
        6252,
        6275
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1756": {
      "op": "ADD"
    },
    "1757": {
      "fn": "HAV.leave",
      "offset": [
        6252,
        6275
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1758": {
      "fn": "HAV.leave",
      "offset": [
        6252,
        6275
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1760": {
      "fn": "HAV.leave",
      "offset": [
        6252,
        6275
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1761": {
      "fn": "HAV.leave",
      "offset": [
        6252,
        6275
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1762": {
      "fn": "HAV.leave",
      "offset": [
        6252,
        6275
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1763": {
      "fn": "HAV.leave",
      "offset": [
        6252,
        6275
      ],
      "op": "SUB",
      "path": "0"
    },
    "1764": {
      "fn": "HAV.leave",
      "offset": [
        6252,
        6275
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1765": {
      "fn": "HAV.leave",
      "offset": [
        6252,
        6275
      ],
      "op": "LOG1",
      "path": "0"
    },
    "1766": {
      "fn": "HAV.leave",
      "offset": [
        5959,
        6282
      ],
      "op": "POP",
      "path": "0"
    },
    "1767": {
      "fn": "HAV.leave",
      "offset": [
        5901,
        6282
      ],
      "op": "POP",
      "path": "0"
    },
    "1768": {
      "fn": "HAV.leave",
      "jump": "o",
      "offset": [
        5901,
        6282
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1769": {
      "fn": "HAV.viewOwner",
      "offset": [
        6357,
        6675
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1770": {
      "fn": "HAV.viewOwner",
      "offset": [
        6428,
        6435
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1772": {
      "offset": [
        1076,
        1086
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1773": {
      "offset": [
        1068,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x708"
    },
    "1776": {
      "fn": "HAV.viewOwner",
      "offset": [
        1068,
        1114
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1777": {
      "fn": "HAV.viewOwner",
      "offset": [
        1068,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1779": {
      "fn": "HAV.viewOwner",
      "offset": [
        1068,
        1114
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1780": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1784": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1786": {
      "op": "SHL"
    },
    "1787": {
      "offset": [
        1068,
        1114
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1788": {
      "fn": "HAV.viewOwner",
      "offset": [
        1068,
        1114
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1789": {
      "fn": "HAV.viewOwner",
      "offset": [
        1068,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1791": {
      "fn": "HAV.viewOwner",
      "offset": [
        1068,
        1114
      ],
      "op": "ADD",
      "path": "0"
    },
    "1792": {
      "fn": "HAV.viewOwner",
      "offset": [
        1068,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A1"
    },
    "1795": {
      "fn": "HAV.viewOwner",
      "offset": [
        1068,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1796": {
      "fn": "HAV.viewOwner",
      "offset": [
        1068,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD54"
    },
    "1799": {
      "fn": "HAV.viewOwner",
      "jump": "i",
      "offset": [
        1068,
        1114
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1800": {
      "fn": "HAV.viewOwner",
      "offset": [
        1068,
        1114
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1801": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1803": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1805": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1807": {
      "op": "SHL"
    },
    "1808": {
      "op": "SUB"
    },
    "1809": {
      "fn": "HAV.viewOwner",
      "offset": [
        6459,
        6481
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 20
    },
    "1810": {
      "branch": 50,
      "fn": "HAV.viewOwner",
      "offset": [
        6459,
        6481
      ],
      "op": "AND",
      "path": "0"
    },
    "1811": {
      "fn": "HAV.viewOwner",
      "offset": [
        6451,
        6495
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x72E"
    },
    "1814": {
      "branch": 50,
      "fn": "HAV.viewOwner",
      "offset": [
        6451,
        6495
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1815": {
      "fn": "HAV.viewOwner",
      "offset": [
        6451,
        6495
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1817": {
      "fn": "HAV.viewOwner",
      "offset": [
        6451,
        6495
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1818": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1822": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1824": {
      "op": "SHL"
    },
    "1825": {
      "fn": "HAV.viewOwner",
      "offset": [
        6451,
        6495
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1826": {
      "fn": "HAV.viewOwner",
      "offset": [
        6451,
        6495
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1827": {
      "fn": "HAV.viewOwner",
      "offset": [
        6451,
        6495
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1829": {
      "fn": "HAV.viewOwner",
      "offset": [
        6451,
        6495
      ],
      "op": "ADD",
      "path": "0"
    },
    "1830": {
      "fn": "HAV.viewOwner",
      "offset": [
        6451,
        6495
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A1"
    },
    "1833": {
      "fn": "HAV.viewOwner",
      "offset": [
        6451,
        6495
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1834": {
      "fn": "HAV.viewOwner",
      "offset": [
        6451,
        6495
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD54"
    },
    "1837": {
      "fn": "HAV.viewOwner",
      "jump": "i",
      "offset": [
        6451,
        6495
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1838": {
      "fn": "HAV.viewOwner",
      "offset": [
        6451,
        6495
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1839": {
      "fn": "HAV.viewOwner",
      "offset": [
        6513,
        6530
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 21,
      "value": "0x737"
    },
    "1842": {
      "fn": "HAV.viewOwner",
      "offset": [
        6521,
        6529
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1843": {
      "fn": "HAV.viewOwner",
      "offset": [
        6513,
        6520
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB7F"
    },
    "1846": {
      "fn": "HAV.viewOwner",
      "jump": "i",
      "offset": [
        6513,
        6530
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1847": {
      "branch": 51,
      "fn": "HAV.viewOwner",
      "offset": [
        6513,
        6530
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1848": {
      "fn": "HAV.viewOwner",
      "offset": [
        6505,
        6542
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x753"
    },
    "1851": {
      "branch": 51,
      "fn": "HAV.viewOwner",
      "offset": [
        6505,
        6542
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1852": {
      "fn": "HAV.viewOwner",
      "offset": [
        6505,
        6542
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1854": {
      "fn": "HAV.viewOwner",
      "offset": [
        6505,
        6542
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1855": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1859": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1861": {
      "op": "SHL"
    },
    "1862": {
      "fn": "HAV.viewOwner",
      "offset": [
        6505,
        6542
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1863": {
      "fn": "HAV.viewOwner",
      "offset": [
        6505,
        6542
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1864": {
      "fn": "HAV.viewOwner",
      "offset": [
        6505,
        6542
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1866": {
      "fn": "HAV.viewOwner",
      "offset": [
        6505,
        6542
      ],
      "op": "ADD",
      "path": "0"
    },
    "1867": {
      "fn": "HAV.viewOwner",
      "offset": [
        6505,
        6542
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A1"
    },
    "1870": {
      "fn": "HAV.viewOwner",
      "offset": [
        6505,
        6542
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1871": {
      "fn": "HAV.viewOwner",
      "offset": [
        6505,
        6542
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDA5"
    },
    "1874": {
      "fn": "HAV.viewOwner",
      "jump": "i",
      "offset": [
        6505,
        6542
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1875": {
      "fn": "HAV.viewOwner",
      "offset": [
        6505,
        6542
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1876": {
      "op": "POP"
    },
    "1877": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1879": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1881": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1883": {
      "op": "SHL"
    },
    "1884": {
      "op": "SUB"
    },
    "1885": {
      "fn": "HAV.viewOwner",
      "offset": [
        6643,
        6659
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 22
    },
    "1886": {
      "fn": "HAV.viewOwner",
      "offset": [
        6643,
        6659
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1887": {
      "fn": "HAV.viewOwner",
      "offset": [
        6643,
        6659
      ],
      "op": "AND",
      "path": "0"
    },
    "1888": {
      "fn": "HAV.viewOwner",
      "offset": [
        6643,
        6649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1890": {
      "fn": "HAV.viewOwner",
      "offset": [
        6643,
        6659
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1891": {
      "fn": "HAV.viewOwner",
      "offset": [
        6643,
        6659
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1892": {
      "fn": "HAV.viewOwner",
      "offset": [
        6643,
        6659
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1893": {
      "fn": "HAV.viewOwner",
      "offset": [
        6643,
        6659
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1895": {
      "fn": "HAV.viewOwner",
      "offset": [
        6643,
        6659
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1896": {
      "fn": "HAV.viewOwner",
      "offset": [
        6643,
        6659
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1897": {
      "fn": "HAV.viewOwner",
      "offset": [
        6643,
        6659
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1898": {
      "fn": "HAV.viewOwner",
      "offset": [
        6643,
        6659
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1900": {
      "fn": "HAV.viewOwner",
      "offset": [
        6643,
        6659
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1901": {
      "fn": "HAV.viewOwner",
      "offset": [
        6643,
        6659
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1902": {
      "fn": "HAV.viewOwner",
      "offset": [
        6643,
        6668
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1903": {
      "fn": "HAV.viewOwner",
      "offset": [
        6643,
        6668
      ],
      "op": "AND",
      "path": "0"
    },
    "1904": {
      "offset": [
        1124,
        1125
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1905": {
      "fn": "HAV.viewOwner",
      "offset": [
        6357,
        6675
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1906": {
      "fn": "HAV.viewOwner",
      "offset": [
        6357,
        6675
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1907": {
      "fn": "HAV.viewOwner",
      "offset": [
        6357,
        6675
      ],
      "op": "POP",
      "path": "0"
    },
    "1908": {
      "fn": "HAV.viewOwner",
      "jump": "o",
      "offset": [
        6357,
        6675
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1909": {
      "fn": "HAV.approve",
      "offset": [
        4888,
        5307
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1910": {
      "offset": [
        1076,
        1086
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1911": {
      "offset": [
        1068,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x792"
    },
    "1914": {
      "fn": "HAV.approve",
      "offset": [
        1068,
        1114
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1915": {
      "fn": "HAV.approve",
      "offset": [
        1068,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1917": {
      "fn": "HAV.approve",
      "offset": [
        1068,
        1114
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1918": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1922": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1924": {
      "op": "SHL"
    },
    "1925": {
      "offset": [
        1068,
        1114
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1926": {
      "fn": "HAV.approve",
      "offset": [
        1068,
        1114
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1927": {
      "fn": "HAV.approve",
      "offset": [
        1068,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1929": {
      "fn": "HAV.approve",
      "offset": [
        1068,
        1114
      ],
      "op": "ADD",
      "path": "0"
    },
    "1930": {
      "fn": "HAV.approve",
      "offset": [
        1068,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A1"
    },
    "1933": {
      "fn": "HAV.approve",
      "offset": [
        1068,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1934": {
      "fn": "HAV.approve",
      "offset": [
        1068,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD54"
    },
    "1937": {
      "fn": "HAV.approve",
      "jump": "i",
      "offset": [
        1068,
        1114
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1938": {
      "fn": "HAV.approve",
      "offset": [
        1068,
        1114
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1939": {
      "fn": "HAV.approve",
      "offset": [
        4966,
        4985
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 23,
      "value": "0x79B"
    },
    "1942": {
      "fn": "HAV.approve",
      "offset": [
        4974,
        4984
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1943": {
      "fn": "HAV.approve",
      "offset": [
        4966,
        4973
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB7F"
    },
    "1946": {
      "fn": "HAV.approve",
      "jump": "i",
      "offset": [
        4966,
        4985
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1947": {
      "branch": 52,
      "fn": "HAV.approve",
      "offset": [
        4966,
        4985
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1948": {
      "fn": "HAV.approve",
      "offset": [
        4958,
        4997
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7B7"
    },
    "1951": {
      "branch": 52,
      "fn": "HAV.approve",
      "offset": [
        4958,
        4997
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1952": {
      "fn": "HAV.approve",
      "offset": [
        4958,
        4997
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1954": {
      "fn": "HAV.approve",
      "offset": [
        4958,
        4997
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1955": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1959": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1961": {
      "op": "SHL"
    },
    "1962": {
      "fn": "HAV.approve",
      "offset": [
        4958,
        4997
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1963": {
      "fn": "HAV.approve",
      "offset": [
        4958,
        4997
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1964": {
      "fn": "HAV.approve",
      "offset": [
        4958,
        4997
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1966": {
      "fn": "HAV.approve",
      "offset": [
        4958,
        4997
      ],
      "op": "ADD",
      "path": "0"
    },
    "1967": {
      "fn": "HAV.approve",
      "offset": [
        4958,
        4997
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A1"
    },
    "1970": {
      "fn": "HAV.approve",
      "offset": [
        4958,
        4997
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1971": {
      "fn": "HAV.approve",
      "offset": [
        4958,
        4997
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDA5"
    },
    "1974": {
      "fn": "HAV.approve",
      "jump": "i",
      "offset": [
        4958,
        4997
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1975": {
      "fn": "HAV.approve",
      "offset": [
        4958,
        4997
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1976": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1978": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1980": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1982": {
      "op": "SHL"
    },
    "1983": {
      "op": "SUB"
    },
    "1984": {
      "fn": "HAV.approve",
      "offset": [
        5092,
        5114
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 24
    },
    "1985": {
      "branch": 53,
      "fn": "HAV.approve",
      "offset": [
        5092,
        5114
      ],
      "op": "AND",
      "path": "0"
    },
    "1986": {
      "fn": "HAV.approve",
      "offset": [
        5084,
        5128
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7DD"
    },
    "1989": {
      "branch": 53,
      "fn": "HAV.approve",
      "offset": [
        5084,
        5128
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1990": {
      "fn": "HAV.approve",
      "offset": [
        5084,
        5128
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1992": {
      "fn": "HAV.approve",
      "offset": [
        5084,
        5128
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1993": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1997": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1999": {
      "op": "SHL"
    },
    "2000": {
      "fn": "HAV.approve",
      "offset": [
        5084,
        5128
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2001": {
      "fn": "HAV.approve",
      "offset": [
        5084,
        5128
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2002": {
      "fn": "HAV.approve",
      "offset": [
        5084,
        5128
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2004": {
      "fn": "HAV.approve",
      "offset": [
        5084,
        5128
      ],
      "op": "ADD",
      "path": "0"
    },
    "2005": {
      "fn": "HAV.approve",
      "offset": [
        5084,
        5128
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A1"
    },
    "2008": {
      "fn": "HAV.approve",
      "offset": [
        5084,
        5128
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2009": {
      "fn": "HAV.approve",
      "offset": [
        5084,
        5128
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD54"
    },
    "2012": {
      "fn": "HAV.approve",
      "jump": "i",
      "offset": [
        5084,
        5128
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2013": {
      "fn": "HAV.approve",
      "offset": [
        5084,
        5128
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2014": {
      "fn": "HAV.approve",
      "offset": [
        5158,
        5168
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 25
    },
    "2015": {
      "fn": "HAV.approve",
      "offset": [
        5148,
        5169
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2017": {
      "fn": "HAV.approve",
      "offset": [
        5148,
        5169
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2018": {
      "fn": "HAV.approve",
      "offset": [
        5148,
        5169
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2019": {
      "fn": "HAV.approve",
      "offset": [
        5148,
        5169
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2020": {
      "fn": "HAV.approve",
      "offset": [
        5148,
        5157
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2022": {
      "fn": "HAV.approve",
      "offset": [
        5148,
        5169
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2024": {
      "fn": "HAV.approve",
      "offset": [
        5148,
        5169
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2025": {
      "fn": "HAV.approve",
      "offset": [
        5148,
        5169
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2026": {
      "fn": "HAV.approve",
      "offset": [
        5148,
        5169
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2027": {
      "fn": "HAV.approve",
      "offset": [
        5148,
        5169
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2029": {
      "fn": "HAV.approve",
      "offset": [
        5148,
        5169
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2030": {
      "fn": "HAV.approve",
      "offset": [
        5148,
        5169
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2031": {
      "fn": "HAV.approve",
      "offset": [
        5148,
        5169
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2032": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2034": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2036": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2038": {
      "op": "SHL"
    },
    "2039": {
      "op": "SUB"
    },
    "2040": {
      "fn": "HAV.approve",
      "offset": [
        5148,
        5179
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2041": {
      "fn": "HAV.approve",
      "offset": [
        5148,
        5179
      ],
      "op": "AND",
      "path": "0"
    },
    "2042": {
      "fn": "HAV.approve",
      "offset": [
        5148,
        5179
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2043": {
      "fn": "HAV.approve",
      "offset": [
        5148,
        5179
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2044": {
      "fn": "HAV.approve",
      "offset": [
        5148,
        5179
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2045": {
      "fn": "HAV.approve",
      "offset": [
        5148,
        5179
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2046": {
      "fn": "HAV.approve",
      "offset": [
        5148,
        5179
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2047": {
      "fn": "HAV.approve",
      "offset": [
        5148,
        5179
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2048": {
      "fn": "HAV.approve",
      "offset": [
        5148,
        5179
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2049": {
      "fn": "HAV.approve",
      "offset": [
        5148,
        5179
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2050": {
      "fn": "HAV.approve",
      "offset": [
        5148,
        5179
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "2052": {
      "fn": "HAV.approve",
      "offset": [
        5148,
        5179
      ],
      "op": "AND",
      "path": "0"
    },
    "2053": {
      "branch": 54,
      "fn": "HAV.approve",
      "offset": [
        5147,
        5179
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2054": {
      "fn": "HAV.approve",
      "offset": [
        5139,
        5200
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x844"
    },
    "2057": {
      "branch": 54,
      "fn": "HAV.approve",
      "offset": [
        5139,
        5200
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2058": {
      "fn": "HAV.approve",
      "offset": [
        5139,
        5200
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2060": {
      "fn": "HAV.approve",
      "offset": [
        5139,
        5200
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2061": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2065": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2067": {
      "op": "SHL"
    },
    "2068": {
      "fn": "HAV.approve",
      "offset": [
        5139,
        5200
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2069": {
      "fn": "HAV.approve",
      "offset": [
        5139,
        5200
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2070": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2072": {
      "fn": "HAV.approve",
      "offset": [
        5139,
        5200
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2074": {
      "fn": "HAV.approve",
      "offset": [
        5139,
        5200
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2075": {
      "fn": "HAV.approve",
      "offset": [
        5139,
        5200
      ],
      "op": "ADD",
      "path": "0"
    },
    "2076": {
      "op": "MSTORE"
    },
    "2077": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "2079": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2081": {
      "op": "DUP3"
    },
    "2082": {
      "op": "ADD"
    },
    "2083": {
      "op": "MSTORE"
    },
    "2084": {
      "op": "PUSH16",
      "value": "0x105B1C9958591E48185C1C1C9BDD9959"
    },
    "2101": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "2103": {
      "op": "SHL"
    },
    "2104": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2106": {
      "op": "DUP3"
    },
    "2107": {
      "op": "ADD"
    },
    "2108": {
      "op": "MSTORE"
    },
    "2109": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2111": {
      "op": "ADD"
    },
    "2112": {
      "fn": "HAV.approve",
      "offset": [
        5139,
        5200
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A1"
    },
    "2115": {
      "op": "JUMP"
    },
    "2116": {
      "fn": "HAV.approve",
      "offset": [
        5139,
        5200
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2117": {
      "fn": "HAV.approve",
      "offset": [
        5221,
        5231
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 26
    },
    "2118": {
      "fn": "HAV.approve",
      "offset": [
        5211,
        5232
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2120": {
      "fn": "HAV.approve",
      "offset": [
        5211,
        5232
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2121": {
      "fn": "HAV.approve",
      "offset": [
        5211,
        5232
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2122": {
      "fn": "HAV.approve",
      "offset": [
        5211,
        5232
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2123": {
      "fn": "HAV.approve",
      "offset": [
        5245,
        5249
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2125": {
      "fn": "HAV.approve",
      "offset": [
        5211,
        5232
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2127": {
      "fn": "HAV.approve",
      "offset": [
        5211,
        5232
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2128": {
      "fn": "HAV.approve",
      "offset": [
        5211,
        5232
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2129": {
      "fn": "HAV.approve",
      "offset": [
        5211,
        5232
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2130": {
      "fn": "HAV.approve",
      "offset": [
        5211,
        5232
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2132": {
      "fn": "HAV.approve",
      "offset": [
        5211,
        5232
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2133": {
      "fn": "HAV.approve",
      "offset": [
        5211,
        5232
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2134": {
      "fn": "HAV.approve",
      "offset": [
        5211,
        5232
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2135": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2137": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2139": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2141": {
      "op": "SHL"
    },
    "2142": {
      "op": "SUB"
    },
    "2143": {
      "fn": "HAV.approve",
      "offset": [
        5211,
        5242
      ],
      "op": "DUP8",
      "path": "0"
    },
    "2144": {
      "fn": "HAV.approve",
      "offset": [
        5211,
        5242
      ],
      "op": "AND",
      "path": "0"
    },
    "2145": {
      "fn": "HAV.approve",
      "offset": [
        5211,
        5242
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2146": {
      "fn": "HAV.approve",
      "offset": [
        5211,
        5242
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2147": {
      "fn": "HAV.approve",
      "offset": [
        5211,
        5242
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2148": {
      "fn": "HAV.approve",
      "offset": [
        5211,
        5242
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2149": {
      "fn": "HAV.approve",
      "offset": [
        5211,
        5242
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2150": {
      "fn": "HAV.approve",
      "offset": [
        5211,
        5242
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2151": {
      "fn": "HAV.approve",
      "offset": [
        5211,
        5242
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2152": {
      "fn": "HAV.approve",
      "offset": [
        5211,
        5242
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2153": {
      "fn": "HAV.approve",
      "offset": [
        5211,
        5242
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2154": {
      "fn": "HAV.approve",
      "offset": [
        5211,
        5242
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2155": {
      "fn": "HAV.approve",
      "offset": [
        5211,
        5249
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2156": {
      "fn": "HAV.approve",
      "offset": [
        5211,
        5249
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2157": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2159": {
      "op": "NOT"
    },
    "2160": {
      "fn": "HAV.approve",
      "offset": [
        5211,
        5249
      ],
      "op": "AND",
      "path": "0"
    },
    "2161": {
      "fn": "HAV.approve",
      "offset": [
        5211,
        5249
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2162": {
      "fn": "HAV.approve",
      "offset": [
        5211,
        5249
      ],
      "op": "OR",
      "path": "0"
    },
    "2163": {
      "fn": "HAV.approve",
      "offset": [
        5211,
        5249
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2164": {
      "fn": "HAV.approve",
      "offset": [
        5211,
        5249
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2165": {
      "fn": "HAV.approve",
      "offset": [
        5265,
        5300
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 27
    },
    "2166": {
      "fn": "HAV.approve",
      "offset": [
        5265,
        5300
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2167": {
      "op": "SWAP5"
    },
    "2168": {
      "op": "DUP6"
    },
    "2169": {
      "op": "MSTORE"
    },
    "2170": {
      "op": "SWAP1"
    },
    "2171": {
      "op": "DUP5"
    },
    "2172": {
      "op": "ADD"
    },
    "2173": {
      "op": "SWAP3"
    },
    "2174": {
      "op": "SWAP1"
    },
    "2175": {
      "op": "SWAP3"
    },
    "2176": {
      "op": "MSTORE"
    },
    "2177": {
      "op": "SWAP1"
    },
    "2178": {
      "op": "DUP3"
    },
    "2179": {
      "op": "ADD"
    },
    "2180": {
      "op": "MSTORE"
    },
    "2181": {
      "fn": "HAV.approve",
      "offset": [
        5265,
        5300
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xAAF27816598688732A80B26FB3B6D0BC241C08F38A6D8CA2A0723F4835D593D6"
    },
    "2214": {
      "fn": "HAV.approve",
      "offset": [
        5265,
        5300
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2215": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2217": {
      "op": "ADD"
    },
    "2218": {
      "fn": "HAV.approve",
      "offset": [
        5265,
        5300
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x44C"
    },
    "2221": {
      "op": "JUMP"
    },
    "2222": {
      "fn": "HAV.bookFor",
      "offset": [
        2724,
        3430
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2223": {
      "offset": [
        1076,
        1086
      ],
      "op": "CALLER",
      "path": "0"
    },
    "2224": {
      "offset": [
        1068,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8CB"
    },
    "2227": {
      "fn": "HAV.bookFor",
      "offset": [
        1068,
        1114
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2228": {
      "fn": "HAV.bookFor",
      "offset": [
        1068,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2230": {
      "fn": "HAV.bookFor",
      "offset": [
        1068,
        1114
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2231": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2235": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2237": {
      "op": "SHL"
    },
    "2238": {
      "offset": [
        1068,
        1114
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2239": {
      "fn": "HAV.bookFor",
      "offset": [
        1068,
        1114
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2240": {
      "fn": "HAV.bookFor",
      "offset": [
        1068,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2242": {
      "fn": "HAV.bookFor",
      "offset": [
        1068,
        1114
      ],
      "op": "ADD",
      "path": "0"
    },
    "2243": {
      "fn": "HAV.bookFor",
      "offset": [
        1068,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A1"
    },
    "2246": {
      "fn": "HAV.bookFor",
      "offset": [
        1068,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2247": {
      "fn": "HAV.bookFor",
      "offset": [
        1068,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD54"
    },
    "2250": {
      "fn": "HAV.bookFor",
      "jump": "i",
      "offset": [
        1068,
        1114
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2251": {
      "fn": "HAV.bookFor",
      "offset": [
        1068,
        1114
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2252": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2254": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2256": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2258": {
      "op": "SHL"
    },
    "2259": {
      "op": "SUB"
    },
    "2260": {
      "fn": "HAV.bookFor",
      "offset": [
        2835,
        2857
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 28
    },
    "2261": {
      "branch": 55,
      "fn": "HAV.bookFor",
      "offset": [
        2835,
        2857
      ],
      "op": "AND",
      "path": "0"
    },
    "2262": {
      "fn": "HAV.bookFor",
      "offset": [
        2827,
        2875
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x911"
    },
    "2265": {
      "branch": 55,
      "fn": "HAV.bookFor",
      "offset": [
        2827,
        2875
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2266": {
      "fn": "HAV.bookFor",
      "offset": [
        2827,
        2875
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2268": {
      "fn": "HAV.bookFor",
      "offset": [
        2827,
        2875
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2269": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2273": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2275": {
      "op": "SHL"
    },
    "2276": {
      "fn": "HAV.bookFor",
      "offset": [
        2827,
        2875
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2277": {
      "fn": "HAV.bookFor",
      "offset": [
        2827,
        2875
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2278": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2280": {
      "fn": "HAV.bookFor",
      "offset": [
        2827,
        2875
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2282": {
      "fn": "HAV.bookFor",
      "offset": [
        2827,
        2875
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2283": {
      "fn": "HAV.bookFor",
      "offset": [
        2827,
        2875
      ],
      "op": "ADD",
      "path": "0"
    },
    "2284": {
      "op": "MSTORE"
    },
    "2285": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "2287": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2289": {
      "op": "DUP3"
    },
    "2290": {
      "op": "ADD"
    },
    "2291": {
      "op": "MSTORE"
    },
    "2292": {
      "op": "PUSH13",
      "value": "0x2120466F722041646472657373"
    },
    "2306": {
      "op": "PUSH1",
      "value": "0x98"
    },
    "2308": {
      "op": "SHL"
    },
    "2309": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2311": {
      "op": "DUP3"
    },
    "2312": {
      "op": "ADD"
    },
    "2313": {
      "op": "MSTORE"
    },
    "2314": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2316": {
      "op": "ADD"
    },
    "2317": {
      "fn": "HAV.bookFor",
      "offset": [
        2827,
        2875
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A1"
    },
    "2320": {
      "op": "JUMP"
    },
    "2321": {
      "fn": "HAV.bookFor",
      "offset": [
        2827,
        2875
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2322": {
      "fn": "HAV.bookFor",
      "offset": [
        2894,
        2911
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 29,
      "value": "0x91A"
    },
    "2325": {
      "fn": "HAV.bookFor",
      "offset": [
        2902,
        2910
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2326": {
      "fn": "HAV.bookFor",
      "offset": [
        2894,
        2901
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB7F"
    },
    "2329": {
      "fn": "HAV.bookFor",
      "jump": "i",
      "offset": [
        2894,
        2911
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2330": {
      "fn": "HAV.bookFor",
      "offset": [
        2894,
        2911
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2331": {
      "branch": 56,
      "fn": "HAV.bookFor",
      "offset": [
        2893,
        2911
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2332": {
      "fn": "HAV.bookFor",
      "offset": [
        2885,
        2932
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x95A"
    },
    "2335": {
      "branch": 56,
      "fn": "HAV.bookFor",
      "offset": [
        2885,
        2932
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2336": {
      "fn": "HAV.bookFor",
      "offset": [
        2885,
        2932
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2338": {
      "fn": "HAV.bookFor",
      "offset": [
        2885,
        2932
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2339": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2343": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2345": {
      "op": "SHL"
    },
    "2346": {
      "fn": "HAV.bookFor",
      "offset": [
        2885,
        2932
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2347": {
      "fn": "HAV.bookFor",
      "offset": [
        2885,
        2932
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2348": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2350": {
      "fn": "HAV.bookFor",
      "offset": [
        2885,
        2932
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2352": {
      "fn": "HAV.bookFor",
      "offset": [
        2885,
        2932
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2353": {
      "fn": "HAV.bookFor",
      "offset": [
        2885,
        2932
      ],
      "op": "ADD",
      "path": "0"
    },
    "2354": {
      "op": "MSTORE"
    },
    "2355": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "2357": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2359": {
      "op": "DUP3"
    },
    "2360": {
      "op": "ADD"
    },
    "2361": {
      "op": "MSTORE"
    },
    "2362": {
      "op": "PUSH16",
      "value": "0x2CB7BA903430BB329030903937B7B697"
    },
    "2379": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "2381": {
      "op": "SHL"
    },
    "2382": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2384": {
      "op": "DUP3"
    },
    "2385": {
      "op": "ADD"
    },
    "2386": {
      "op": "MSTORE"
    },
    "2387": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2389": {
      "op": "ADD"
    },
    "2390": {
      "fn": "HAV.bookFor",
      "offset": [
        2885,
        2932
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A1"
    },
    "2393": {
      "op": "JUMP"
    },
    "2394": {
      "fn": "HAV.bookFor",
      "offset": [
        2885,
        2932
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2395": {
      "fn": "HAV.bookFor",
      "offset": [
        3025,
        3048
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 30
    },
    "2396": {
      "fn": "HAV.bookFor",
      "offset": [
        3025,
        3048
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2397": {
      "fn": "HAV.bookFor",
      "offset": [
        3017,
        3078
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x978"
    },
    "2400": {
      "fn": "HAV.bookFor",
      "offset": [
        3017,
        3078
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2401": {
      "fn": "HAV.bookFor",
      "offset": [
        3017,
        3078
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2403": {
      "fn": "HAV.bookFor",
      "offset": [
        3017,
        3078
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2404": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2408": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2410": {
      "op": "SHL"
    },
    "2411": {
      "fn": "HAV.bookFor",
      "offset": [
        3017,
        3078
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2412": {
      "fn": "HAV.bookFor",
      "offset": [
        3017,
        3078
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2413": {
      "fn": "HAV.bookFor",
      "offset": [
        3017,
        3078
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2415": {
      "fn": "HAV.bookFor",
      "offset": [
        3017,
        3078
      ],
      "op": "ADD",
      "path": "0"
    },
    "2416": {
      "fn": "HAV.bookFor",
      "offset": [
        3017,
        3078
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A1"
    },
    "2419": {
      "fn": "HAV.bookFor",
      "offset": [
        3017,
        3078
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2420": {
      "fn": "HAV.bookFor",
      "offset": [
        3017,
        3078
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD77"
    },
    "2423": {
      "fn": "HAV.bookFor",
      "jump": "i",
      "offset": [
        3017,
        3078
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2424": {
      "fn": "HAV.bookFor",
      "offset": [
        3017,
        3078
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2425": {
      "fn": "HAV.bookFor",
      "offset": [
        3109,
        3120
      ],
      "op": "PUSH6",
      "path": "0",
      "statement": 31,
      "value": "0x2D79883D2000"
    },
    "2432": {
      "fn": "HAV.bookFor",
      "offset": [
        3096,
        3105
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "2433": {
      "fn": "HAV.bookFor",
      "offset": [
        3096,
        3120
      ],
      "op": "LT",
      "path": "0"
    },
    "2434": {
      "branch": 57,
      "fn": "HAV.bookFor",
      "offset": [
        3096,
        3120
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2435": {
      "fn": "HAV.bookFor",
      "offset": [
        3088,
        3145
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9C5"
    },
    "2438": {
      "branch": 57,
      "fn": "HAV.bookFor",
      "offset": [
        3088,
        3145
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2439": {
      "fn": "HAV.bookFor",
      "offset": [
        3088,
        3145
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2441": {
      "fn": "HAV.bookFor",
      "offset": [
        3088,
        3145
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2442": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2446": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2448": {
      "op": "SHL"
    },
    "2449": {
      "fn": "HAV.bookFor",
      "offset": [
        3088,
        3145
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2450": {
      "fn": "HAV.bookFor",
      "offset": [
        3088,
        3145
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2451": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2453": {
      "fn": "HAV.bookFor",
      "offset": [
        3088,
        3145
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2455": {
      "fn": "HAV.bookFor",
      "offset": [
        3088,
        3145
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2456": {
      "fn": "HAV.bookFor",
      "offset": [
        3088,
        3145
      ],
      "op": "ADD",
      "path": "0"
    },
    "2457": {
      "op": "MSTORE"
    },
    "2458": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "2460": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2462": {
      "op": "DUP3"
    },
    "2463": {
      "op": "ADD"
    },
    "2464": {
      "op": "MSTORE"
    },
    "2465": {
      "op": "PUSH20",
      "value": "0x5072696365203E3D2035302C3030302067776569"
    },
    "2486": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2488": {
      "op": "SHL"
    },
    "2489": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2491": {
      "op": "DUP3"
    },
    "2492": {
      "op": "ADD"
    },
    "2493": {
      "op": "MSTORE"
    },
    "2494": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2496": {
      "op": "ADD"
    },
    "2497": {
      "fn": "HAV.bookFor",
      "offset": [
        3088,
        3145
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A1"
    },
    "2500": {
      "op": "JUMP"
    },
    "2501": {
      "fn": "HAV.bookFor",
      "offset": [
        3088,
        3145
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2502": {
      "fn": "HAV.bookFor",
      "offset": [
        3175,
        3202
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2503": {
      "fn": "HAV.bookFor",
      "offset": [
        3175,
        3202
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2504": {
      "fn": "HAV.bookFor",
      "offset": [
        3175,
        3202
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2506": {
      "fn": "HAV.bookFor",
      "offset": [
        3175,
        3202
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2507": {
      "fn": "HAV.bookFor",
      "offset": [
        3175,
        3202
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2508": {
      "fn": "HAV.bookFor",
      "offset": [
        3175,
        3202
      ],
      "op": "ADD",
      "path": "0"
    },
    "2509": {
      "fn": "HAV.bookFor",
      "offset": [
        3175,
        3202
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2510": {
      "fn": "HAV.bookFor",
      "offset": [
        3175,
        3202
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2511": {
      "fn": "HAV.bookFor",
      "offset": [
        3175,
        3202
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2512": {
      "fn": "HAV.bookFor",
      "offset": [
        3175,
        3202
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2513": {
      "fn": "HAV.bookFor",
      "offset": [
        3233,
        3334
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2515": {
      "fn": "HAV.bookFor",
      "offset": [
        3233,
        3334
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2516": {
      "fn": "HAV.bookFor",
      "offset": [
        3233,
        3334
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2517": {
      "fn": "HAV.bookFor",
      "offset": [
        3233,
        3334
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2519": {
      "fn": "HAV.bookFor",
      "offset": [
        3233,
        3334
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2520": {
      "fn": "HAV.bookFor",
      "offset": [
        3233,
        3334
      ],
      "op": "ADD",
      "path": "0"
    },
    "2521": {
      "fn": "HAV.bookFor",
      "offset": [
        3233,
        3334
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2522": {
      "fn": "HAV.bookFor",
      "offset": [
        3233,
        3334
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2523": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2525": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2527": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2529": {
      "op": "SHL"
    },
    "2530": {
      "op": "SUB"
    },
    "2531": {
      "fn": "HAV.bookFor",
      "offset": [
        3233,
        3334
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2532": {
      "fn": "HAV.bookFor",
      "offset": [
        3233,
        3334
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2533": {
      "fn": "HAV.bookFor",
      "offset": [
        3233,
        3334
      ],
      "op": "AND",
      "path": "0"
    },
    "2534": {
      "fn": "HAV.bookFor",
      "offset": [
        3233,
        3334
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2535": {
      "fn": "HAV.bookFor",
      "offset": [
        3233,
        3334
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2536": {
      "fn": "HAV.bookFor",
      "offset": [
        3233,
        3334
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2537": {
      "fn": "HAV.bookFor",
      "offset": [
        3274,
        3283
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "2538": {
      "fn": "HAV.bookFor",
      "offset": [
        3233,
        3334
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2539": {
      "fn": "HAV.bookFor",
      "offset": [
        3233,
        3334
      ],
      "op": "DUP8",
      "path": "0"
    },
    "2540": {
      "fn": "HAV.bookFor",
      "offset": [
        3233,
        3334
      ],
      "op": "ADD",
      "path": "0"
    },
    "2541": {
      "fn": "HAV.bookFor",
      "offset": [
        3233,
        3334
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2542": {
      "fn": "HAV.bookFor",
      "offset": [
        3233,
        3334
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2543": {
      "fn": "HAV.bookFor",
      "offset": [
        3233,
        3334
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2544": {
      "fn": "HAV.bookFor",
      "offset": [
        3233,
        3334
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2545": {
      "fn": "HAV.bookFor",
      "offset": [
        3233,
        3334
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2546": {
      "fn": "HAV.bookFor",
      "offset": [
        3233,
        3334
      ],
      "op": "ADD",
      "path": "0"
    },
    "2547": {
      "fn": "HAV.bookFor",
      "offset": [
        3233,
        3334
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2548": {
      "fn": "HAV.bookFor",
      "offset": [
        3233,
        3334
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2549": {
      "fn": "HAV.bookFor",
      "offset": [
        3233,
        3334
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2550": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2552": {
      "fn": "HAV.bookFor",
      "offset": [
        3233,
        3334
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "2554": {
      "fn": "HAV.bookFor",
      "offset": [
        3233,
        3334
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2555": {
      "fn": "HAV.bookFor",
      "offset": [
        3233,
        3334
      ],
      "op": "DUP8",
      "path": "0"
    },
    "2556": {
      "fn": "HAV.bookFor",
      "offset": [
        3233,
        3334
      ],
      "op": "ADD",
      "path": "0"
    },
    "2557": {
      "fn": "HAV.bookFor",
      "offset": [
        3233,
        3334
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2558": {
      "fn": "HAV.bookFor",
      "offset": [
        3233,
        3334
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2559": {
      "fn": "HAV.bookFor",
      "offset": [
        3233,
        3334
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2560": {
      "fn": "HAV.bookFor",
      "offset": [
        3345,
        3361
      ],
      "op": "DUP6",
      "path": "0",
      "statement": 32
    },
    "2561": {
      "fn": "HAV.bookFor",
      "offset": [
        3345,
        3361
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2562": {
      "fn": "HAV.bookFor",
      "offset": [
        3345,
        3361
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2563": {
      "fn": "HAV.bookFor",
      "offset": [
        3345,
        3361
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2564": {
      "fn": "HAV.bookFor",
      "offset": [
        3345,
        3361
      ],
      "op": "DUP12",
      "path": "0"
    },
    "2565": {
      "fn": "HAV.bookFor",
      "offset": [
        3345,
        3361
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2566": {
      "fn": "HAV.bookFor",
      "offset": [
        3345,
        3361
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2567": {
      "fn": "HAV.bookFor",
      "offset": [
        3345,
        3361
      ],
      "op": "DUP9",
      "path": "0"
    },
    "2568": {
      "fn": "HAV.bookFor",
      "offset": [
        3345,
        3361
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2569": {
      "fn": "HAV.bookFor",
      "offset": [
        3345,
        3361
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2570": {
      "fn": "HAV.bookFor",
      "offset": [
        3345,
        3368
      ],
      "op": "DUP8",
      "path": "0"
    },
    "2571": {
      "fn": "HAV.bookFor",
      "offset": [
        3345,
        3368
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2572": {
      "fn": "HAV.bookFor",
      "offset": [
        3345,
        3368
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2573": {
      "fn": "HAV.bookFor",
      "offset": [
        3345,
        3368
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2574": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2576": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2578": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2580": {
      "op": "SHL"
    },
    "2581": {
      "op": "SUB"
    },
    "2582": {
      "op": "NOT"
    },
    "2583": {
      "fn": "HAV.bookFor",
      "offset": [
        3345,
        3368
      ],
      "op": "AND",
      "path": "0"
    },
    "2584": {
      "fn": "HAV.bookFor",
      "offset": [
        3345,
        3368
      ],
      "op": "SWAP8",
      "path": "0"
    },
    "2585": {
      "fn": "HAV.bookFor",
      "offset": [
        3345,
        3368
      ],
      "op": "AND",
      "path": "0"
    },
    "2586": {
      "fn": "HAV.bookFor",
      "offset": [
        3345,
        3368
      ],
      "op": "SWAP7",
      "path": "0"
    },
    "2587": {
      "fn": "HAV.bookFor",
      "offset": [
        3345,
        3368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2588": {
      "fn": "HAV.bookFor",
      "offset": [
        3345,
        3368
      ],
      "op": "SWAP7",
      "path": "0"
    },
    "2589": {
      "fn": "HAV.bookFor",
      "offset": [
        3345,
        3368
      ],
      "op": "OR",
      "path": "0"
    },
    "2590": {
      "fn": "HAV.bookFor",
      "offset": [
        3345,
        3368
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2591": {
      "fn": "HAV.bookFor",
      "offset": [
        3345,
        3368
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2592": {
      "fn": "HAV.bookFor",
      "offset": [
        3345,
        3368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2593": {
      "fn": "HAV.bookFor",
      "offset": [
        3345,
        3368
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2594": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2596": {
      "fn": "HAV.bookFor",
      "offset": [
        3345,
        3368
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2597": {
      "fn": "HAV.bookFor",
      "offset": [
        3345,
        3368
      ],
      "op": "ADD",
      "path": "0"
    },
    "2598": {
      "fn": "HAV.bookFor",
      "offset": [
        3345,
        3368
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2599": {
      "fn": "HAV.bookFor",
      "offset": [
        3345,
        3368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2600": {
      "fn": "HAV.bookFor",
      "offset": [
        3345,
        3368
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2601": {
      "fn": "HAV.bookFor",
      "offset": [
        3345,
        3368
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "2603": {
      "fn": "HAV.bookFor",
      "offset": [
        3345,
        3368
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2604": {
      "fn": "HAV.bookFor",
      "offset": [
        3345,
        3368
      ],
      "op": "ADD",
      "path": "0"
    },
    "2605": {
      "fn": "HAV.bookFor",
      "offset": [
        3345,
        3368
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2606": {
      "fn": "HAV.bookFor",
      "offset": [
        3345,
        3368
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2607": {
      "fn": "HAV.bookFor",
      "offset": [
        3345,
        3368
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "2609": {
      "fn": "HAV.bookFor",
      "offset": [
        3345,
        3368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2610": {
      "fn": "HAV.bookFor",
      "offset": [
        3345,
        3368
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2611": {
      "fn": "HAV.bookFor",
      "offset": [
        3345,
        3368
      ],
      "op": "ADD",
      "path": "0"
    },
    "2612": {
      "fn": "HAV.bookFor",
      "offset": [
        3345,
        3368
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2613": {
      "fn": "HAV.bookFor",
      "offset": [
        3345,
        3368
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2614": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2616": {
      "op": "NOT"
    },
    "2617": {
      "fn": "HAV.bookFor",
      "offset": [
        3345,
        3368
      ],
      "op": "AND",
      "path": "0"
    },
    "2618": {
      "fn": "HAV.bookFor",
      "offset": [
        3345,
        3368
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2619": {
      "fn": "HAV.bookFor",
      "offset": [
        3345,
        3368
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2620": {
      "fn": "HAV.bookFor",
      "offset": [
        3345,
        3368
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2621": {
      "fn": "HAV.bookFor",
      "offset": [
        3345,
        3368
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2622": {
      "fn": "HAV.bookFor",
      "offset": [
        3345,
        3368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2623": {
      "fn": "HAV.bookFor",
      "offset": [
        3345,
        3368
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2624": {
      "fn": "HAV.bookFor",
      "offset": [
        3345,
        3368
      ],
      "op": "OR",
      "path": "0"
    },
    "2625": {
      "fn": "HAV.bookFor",
      "offset": [
        3345,
        3368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2626": {
      "fn": "HAV.bookFor",
      "offset": [
        3345,
        3368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2627": {
      "fn": "HAV.bookFor",
      "offset": [
        3345,
        3368
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2628": {
      "fn": "HAV.bookFor",
      "offset": [
        3384,
        3423
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 33
    },
    "2629": {
      "fn": "HAV.bookFor",
      "offset": [
        3384,
        3423
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2630": {
      "fn": "HAV.bookFor",
      "offset": [
        3392,
        3402
      ],
      "op": "CALLER",
      "path": "0"
    },
    "2631": {
      "op": "DUP2"
    },
    "2632": {
      "op": "MSTORE"
    },
    "2633": {
      "op": "SWAP6"
    },
    "2634": {
      "op": "DUP7"
    },
    "2635": {
      "op": "ADD"
    },
    "2636": {
      "op": "MSTORE"
    },
    "2637": {
      "op": "SWAP2"
    },
    "2638": {
      "op": "DUP5"
    },
    "2639": {
      "op": "ADD"
    },
    "2640": {
      "op": "DUP4"
    },
    "2641": {
      "op": "SWAP1"
    },
    "2642": {
      "op": "MSTORE"
    },
    "2643": {
      "fn": "HAV.bookFor",
      "offset": [
        3175,
        3202
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2644": {
      "fn": "HAV.bookFor",
      "offset": [
        3175,
        3202
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2645": {
      "fn": "HAV.bookFor",
      "offset": [
        3384,
        3423
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x91226C3460AE6C8EFEA379CB28BA0D3C10B90ED7104C7DF82F1A8617B6278857"
    },
    "2678": {
      "fn": "HAV.bookFor",
      "offset": [
        3384,
        3423
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2679": {
      "op": "ADD"
    },
    "2680": {
      "fn": "HAV.bookFor",
      "offset": [
        3384,
        3423
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x30F"
    },
    "2683": {
      "op": "JUMP"
    },
    "2684": {
      "fn": "HAV.lock",
      "offset": [
        4409,
        4788
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2685": {
      "offset": [
        1076,
        1086
      ],
      "op": "CALLER",
      "path": "0"
    },
    "2686": {
      "offset": [
        1068,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA99"
    },
    "2689": {
      "fn": "HAV.lock",
      "offset": [
        1068,
        1114
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2690": {
      "fn": "HAV.lock",
      "offset": [
        1068,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2692": {
      "fn": "HAV.lock",
      "offset": [
        1068,
        1114
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2693": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2697": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2699": {
      "op": "SHL"
    },
    "2700": {
      "offset": [
        1068,
        1114
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2701": {
      "fn": "HAV.lock",
      "offset": [
        1068,
        1114
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2702": {
      "fn": "HAV.lock",
      "offset": [
        1068,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2704": {
      "fn": "HAV.lock",
      "offset": [
        1068,
        1114
      ],
      "op": "ADD",
      "path": "0"
    },
    "2705": {
      "fn": "HAV.lock",
      "offset": [
        1068,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A1"
    },
    "2708": {
      "fn": "HAV.lock",
      "offset": [
        1068,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2709": {
      "fn": "HAV.lock",
      "offset": [
        1068,
        1114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD54"
    },
    "2712": {
      "fn": "HAV.lock",
      "jump": "i",
      "offset": [
        1068,
        1114
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2713": {
      "fn": "HAV.lock",
      "offset": [
        1068,
        1114
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2714": {
      "fn": "HAV.lock",
      "offset": [
        4554,
        4571
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 34,
      "value": "0xAA2"
    },
    "2717": {
      "fn": "HAV.lock",
      "offset": [
        4562,
        4570
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2718": {
      "fn": "HAV.lock",
      "offset": [
        4554,
        4561
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB7F"
    },
    "2721": {
      "fn": "HAV.lock",
      "jump": "i",
      "offset": [
        4554,
        4571
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2722": {
      "branch": 58,
      "fn": "HAV.lock",
      "offset": [
        4554,
        4571
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2723": {
      "fn": "HAV.lock",
      "offset": [
        4546,
        4584
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAD9"
    },
    "2726": {
      "branch": 58,
      "fn": "HAV.lock",
      "offset": [
        4546,
        4584
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2727": {
      "fn": "HAV.lock",
      "offset": [
        4546,
        4584
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2729": {
      "fn": "HAV.lock",
      "offset": [
        4546,
        4584
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2730": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2734": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2736": {
      "op": "SHL"
    },
    "2737": {
      "fn": "HAV.lock",
      "offset": [
        4546,
        4584
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2738": {
      "fn": "HAV.lock",
      "offset": [
        4546,
        4584
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2739": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2741": {
      "fn": "HAV.lock",
      "offset": [
        4546,
        4584
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2743": {
      "fn": "HAV.lock",
      "offset": [
        4546,
        4584
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2744": {
      "fn": "HAV.lock",
      "offset": [
        4546,
        4584
      ],
      "op": "ADD",
      "path": "0"
    },
    "2745": {
      "op": "MSTORE"
    },
    "2746": {
      "op": "PUSH1",
      "value": "0x8"
    },
    "2748": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2750": {
      "op": "DUP3"
    },
    "2751": {
      "op": "ADD"
    },
    "2752": {
      "op": "MSTORE"
    },
    "2753": {
      "op": "PUSH8",
      "value": "0x848109BDBDAD959"
    },
    "2762": {
      "op": "PUSH1",
      "value": "0xC2"
    },
    "2764": {
      "op": "SHL"
    },
    "2765": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2767": {
      "op": "DUP3"
    },
    "2768": {
      "op": "ADD"
    },
    "2769": {
      "op": "MSTORE"
    },
    "2770": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2772": {
      "op": "ADD"
    },
    "2773": {
      "fn": "HAV.lock",
      "offset": [
        4546,
        4584
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A1"
    },
    "2776": {
      "op": "JUMP"
    },
    "2777": {
      "fn": "HAV.lock",
      "offset": [
        4546,
        4584
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2778": {
      "fn": "HAV.lock",
      "offset": [
        4602,
        4621
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 35,
      "value": "0xAE2"
    },
    "2781": {
      "fn": "HAV.lock",
      "offset": [
        4612,
        4620
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2782": {
      "fn": "HAV.lock",
      "offset": [
        4602,
        4611
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB9F"
    },
    "2785": {
      "fn": "HAV.lock",
      "jump": "i",
      "offset": [
        4602,
        4621
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2786": {
      "branch": 59,
      "fn": "HAV.lock",
      "offset": [
        4602,
        4621
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2787": {
      "fn": "HAV.lock",
      "offset": [
        4594,
        4637
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB1C"
    },
    "2790": {
      "branch": 59,
      "fn": "HAV.lock",
      "offset": [
        4594,
        4637
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2791": {
      "fn": "HAV.lock",
      "offset": [
        4594,
        4637
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2793": {
      "fn": "HAV.lock",
      "offset": [
        4594,
        4637
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2794": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2798": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2800": {
      "op": "SHL"
    },
    "2801": {
      "fn": "HAV.lock",
      "offset": [
        4594,
        4637
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2802": {
      "fn": "HAV.lock",
      "offset": [
        4594,
        4637
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2803": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2805": {
      "fn": "HAV.lock",
      "offset": [
        4594,
        4637
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2807": {
      "fn": "HAV.lock",
      "offset": [
        4594,
        4637
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2808": {
      "fn": "HAV.lock",
      "offset": [
        4594,
        4637
      ],
      "op": "ADD",
      "path": "0"
    },
    "2809": {
      "op": "MSTORE"
    },
    "2810": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "2812": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2814": {
      "op": "DUP3"
    },
    "2815": {
      "op": "ADD"
    },
    "2816": {
      "op": "MSTORE"
    },
    "2817": {
      "op": "PUSH11",
      "value": "0x84814195C9B5A5D1D1959"
    },
    "2829": {
      "op": "PUSH1",
      "value": "0xAA"
    },
    "2831": {
      "op": "SHL"
    },
    "2832": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2834": {
      "op": "DUP3"
    },
    "2835": {
      "op": "ADD"
    },
    "2836": {
      "op": "MSTORE"
    },
    "2837": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2839": {
      "op": "ADD"
    },
    "2840": {
      "fn": "HAV.lock",
      "offset": [
        4594,
        4637
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A1"
    },
    "2843": {
      "op": "JUMP"
    },
    "2844": {
      "fn": "HAV.lock",
      "offset": [
        4594,
        4637
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2845": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2847": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2849": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2851": {
      "op": "SHL"
    },
    "2852": {
      "op": "SUB"
    },
    "2853": {
      "fn": "HAV.lock",
      "offset": [
        4694,
        4710
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 36
    },
    "2854": {
      "fn": "HAV.lock",
      "offset": [
        4694,
        4710
      ],
      "op": "AND",
      "path": "0"
    },
    "2855": {
      "fn": "HAV.lock",
      "offset": [
        4648,
        4665
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2857": {
      "fn": "HAV.lock",
      "offset": [
        4694,
        4710
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2858": {
      "fn": "HAV.lock",
      "offset": [
        4694,
        4710
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2859": {
      "fn": "HAV.lock",
      "offset": [
        4694,
        4710
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2860": {
      "fn": "HAV.lock",
      "offset": [
        4694,
        4710
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2862": {
      "fn": "HAV.lock",
      "offset": [
        4694,
        4710
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2863": {
      "fn": "HAV.lock",
      "offset": [
        4694,
        4710
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2864": {
      "fn": "HAV.lock",
      "offset": [
        4694,
        4710
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2865": {
      "fn": "HAV.lock",
      "offset": [
        4694,
        4710
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2867": {
      "fn": "HAV.lock",
      "offset": [
        4694,
        4710
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2868": {
      "fn": "HAV.lock",
      "offset": [
        4694,
        4710
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2869": {
      "fn": "HAV.lock",
      "offset": [
        4694,
        4710
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2870": {
      "fn": "HAV.lock",
      "offset": [
        4694,
        4710
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2871": {
      "fn": "HAV.lock",
      "offset": [
        4694,
        4720
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "2873": {
      "fn": "HAV.lock",
      "offset": [
        4694,
        4720
      ],
      "op": "ADD",
      "path": "0"
    },
    "2874": {
      "fn": "HAV.lock",
      "offset": [
        4694,
        4728
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2875": {
      "fn": "HAV.lock",
      "offset": [
        4694,
        4728
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2876": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2878": {
      "op": "NOT"
    },
    "2879": {
      "fn": "HAV.lock",
      "offset": [
        4694,
        4728
      ],
      "op": "AND",
      "path": "0"
    },
    "2880": {
      "fn": "HAV.lock",
      "offset": [
        4694,
        4728
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2881": {
      "fn": "HAV.lock",
      "offset": [
        4694,
        4728
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2882": {
      "fn": "HAV.lock",
      "offset": [
        4744,
        4781
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 37
    },
    "2883": {
      "fn": "HAV.lock",
      "offset": [
        4744,
        4781
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2884": {
      "fn": "HAV.lock",
      "offset": [
        4749,
        4759
      ],
      "op": "CALLER",
      "path": "0"
    },
    "2885": {
      "op": "DUP2"
    },
    "2886": {
      "op": "MSTORE"
    },
    "2887": {
      "op": "SWAP1"
    },
    "2888": {
      "op": "DUP2"
    },
    "2889": {
      "op": "ADD"
    },
    "2890": {
      "op": "SWAP3"
    },
    "2891": {
      "op": "SWAP1"
    },
    "2892": {
      "op": "SWAP3"
    },
    "2893": {
      "op": "MSTORE"
    },
    "2894": {
      "fn": "HAV.lock",
      "offset": [
        4668,
        4683
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "2895": {
      "op": "SWAP1"
    },
    "2896": {
      "op": "DUP3"
    },
    "2897": {
      "op": "ADD"
    },
    "2898": {
      "op": "DUP2"
    },
    "2899": {
      "op": "SWAP1"
    },
    "2900": {
      "op": "MSTORE"
    },
    "2901": {
      "fn": "HAV.lock",
      "offset": [
        4668,
        4683
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2902": {
      "fn": "HAV.lock",
      "offset": [
        4744,
        4781
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xEC36C0364D931187A76CF66D7EEE08FAD0EC2E8B7458A8D8B26B36769D4D13F3"
    },
    "2935": {
      "fn": "HAV.lock",
      "offset": [
        4744,
        4781
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2936": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2938": {
      "op": "ADD"
    },
    "2939": {
      "fn": "HAV.lock",
      "offset": [
        4744,
        4781
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6DD"
    },
    "2942": {
      "op": "JUMP"
    },
    "2943": {
      "fn": "HAV.hasRoom",
      "offset": [
        1237,
        1418
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2944": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2946": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2948": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2950": {
      "op": "SHL"
    },
    "2951": {
      "op": "SUB"
    },
    "2952": {
      "fn": "HAV.hasRoom",
      "offset": [
        1320,
        1336
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 38
    },
    "2953": {
      "fn": "HAV.hasRoom",
      "offset": [
        1320,
        1336
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2954": {
      "fn": "HAV.hasRoom",
      "offset": [
        1320,
        1336
      ],
      "op": "AND",
      "path": "0"
    },
    "2955": {
      "fn": "HAV.hasRoom",
      "offset": [
        1293,
        1297
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2957": {
      "fn": "HAV.hasRoom",
      "offset": [
        1320,
        1336
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2958": {
      "fn": "HAV.hasRoom",
      "offset": [
        1320,
        1336
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2959": {
      "fn": "HAV.hasRoom",
      "offset": [
        1320,
        1336
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2960": {
      "fn": "HAV.hasRoom",
      "offset": [
        1320,
        1336
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2962": {
      "fn": "HAV.hasRoom",
      "offset": [
        1320,
        1336
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2963": {
      "fn": "HAV.hasRoom",
      "offset": [
        1320,
        1336
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2964": {
      "fn": "HAV.hasRoom",
      "offset": [
        1320,
        1336
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2965": {
      "fn": "HAV.hasRoom",
      "offset": [
        1320,
        1336
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2967": {
      "fn": "HAV.hasRoom",
      "offset": [
        1320,
        1336
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2968": {
      "fn": "HAV.hasRoom",
      "offset": [
        1320,
        1336
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2969": {
      "fn": "HAV.hasRoom",
      "offset": [
        1320,
        1345
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2970": {
      "fn": "HAV.hasRoom",
      "offset": [
        1320,
        1345
      ],
      "op": "AND",
      "path": "0"
    },
    "2971": {
      "fn": "HAV.hasRoom",
      "offset": [
        1320,
        1359
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2972": {
      "fn": "HAV.hasRoom",
      "offset": [
        1320,
        1359
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2973": {
      "fn": "HAV.hasRoom",
      "offset": [
        1320,
        1359
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2974": {
      "fn": "HAV.hasRoom",
      "jump": "o",
      "offset": [
        1237,
        1418
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2975": {
      "fn": "HAV.isAllowed",
      "offset": [
        1514,
        1844
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2976": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2978": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2980": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2982": {
      "op": "SHL"
    },
    "2983": {
      "op": "SUB"
    },
    "2984": {
      "fn": "HAV.isAllowed",
      "offset": [
        1608,
        1624
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2985": {
      "fn": "HAV.isAllowed",
      "offset": [
        1608,
        1624
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2986": {
      "fn": "HAV.isAllowed",
      "offset": [
        1608,
        1624
      ],
      "op": "AND",
      "path": "0"
    },
    "2987": {
      "fn": "HAV.isAllowed",
      "offset": [
        1572,
        1576
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2989": {
      "fn": "HAV.isAllowed",
      "offset": [
        1608,
        1624
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2990": {
      "fn": "HAV.isAllowed",
      "offset": [
        1608,
        1624
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2991": {
      "fn": "HAV.isAllowed",
      "offset": [
        1608,
        1624
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2992": {
      "fn": "HAV.isAllowed",
      "offset": [
        1608,
        1624
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2994": {
      "fn": "HAV.isAllowed",
      "offset": [
        1608,
        1624
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2995": {
      "fn": "HAV.isAllowed",
      "offset": [
        1608,
        1624
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2996": {
      "fn": "HAV.isAllowed",
      "offset": [
        1608,
        1624
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2997": {
      "fn": "HAV.isAllowed",
      "offset": [
        1608,
        1624
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2999": {
      "fn": "HAV.isAllowed",
      "offset": [
        1608,
        1624
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3000": {
      "fn": "HAV.isAllowed",
      "offset": [
        1608,
        1624
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3001": {
      "fn": "HAV.isAllowed",
      "offset": [
        1608,
        1633
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3002": {
      "fn": "HAV.isAllowed",
      "offset": [
        1572,
        1576
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3003": {
      "fn": "HAV.isAllowed",
      "offset": [
        1572,
        1576
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3004": {
      "fn": "HAV.isAllowed",
      "offset": [
        1608,
        1633
      ],
      "op": "AND",
      "path": "0"
    },
    "3005": {
      "fn": "HAV.isAllowed",
      "offset": [
        1652,
        1662
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 39
    },
    "3006": {
      "fn": "HAV.isAllowed",
      "offset": [
        1652,
        1671
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3007": {
      "fn": "HAV.isAllowed",
      "offset": [
        1652,
        1671
      ],
      "op": "EQ",
      "path": "0"
    },
    "3008": {
      "fn": "HAV.isAllowed",
      "offset": [
        1652,
        1671
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3009": {
      "fn": "HAV.isAllowed",
      "offset": [
        1651,
        1709
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBED"
    },
    "3012": {
      "fn": "HAV.isAllowed",
      "offset": [
        1651,
        1709
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3013": {
      "op": "POP"
    },
    "3014": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3016": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3018": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3020": {
      "op": "SHL"
    },
    "3021": {
      "op": "SUB"
    },
    "3022": {
      "fn": "HAV.isAllowed",
      "offset": [
        1677,
        1696
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3023": {
      "fn": "HAV.isAllowed",
      "offset": [
        1677,
        1696
      ],
      "op": "AND",
      "path": "0"
    },
    "3024": {
      "fn": "HAV.isAllowed",
      "offset": [
        1677,
        1696
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3026": {
      "fn": "HAV.isAllowed",
      "offset": [
        1677,
        1696
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3027": {
      "fn": "HAV.isAllowed",
      "offset": [
        1677,
        1696
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3028": {
      "fn": "HAV.isAllowed",
      "offset": [
        1677,
        1696
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3029": {
      "fn": "HAV.isAllowed",
      "offset": [
        1677,
        1686
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3031": {
      "fn": "HAV.isAllowed",
      "offset": [
        1677,
        1696
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3033": {
      "fn": "HAV.isAllowed",
      "offset": [
        1677,
        1696
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3034": {
      "fn": "HAV.isAllowed",
      "offset": [
        1677,
        1696
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3035": {
      "fn": "HAV.isAllowed",
      "offset": [
        1677,
        1696
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3036": {
      "fn": "HAV.isAllowed",
      "offset": [
        1677,
        1696
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3038": {
      "fn": "HAV.isAllowed",
      "offset": [
        1677,
        1696
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3039": {
      "fn": "HAV.isAllowed",
      "offset": [
        1677,
        1696
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3040": {
      "fn": "HAV.isAllowed",
      "offset": [
        1677,
        1696
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3041": {
      "fn": "HAV.isAllowed",
      "offset": [
        1697,
        1707
      ],
      "op": "CALLER",
      "path": "0"
    },
    "3042": {
      "fn": "HAV.isAllowed",
      "offset": [
        1677,
        1708
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3043": {
      "fn": "HAV.isAllowed",
      "offset": [
        1677,
        1708
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3044": {
      "fn": "HAV.isAllowed",
      "offset": [
        1677,
        1708
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3045": {
      "fn": "HAV.isAllowed",
      "offset": [
        1677,
        1708
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3046": {
      "fn": "HAV.isAllowed",
      "offset": [
        1677,
        1708
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3047": {
      "fn": "HAV.isAllowed",
      "offset": [
        1677,
        1708
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3048": {
      "fn": "HAV.isAllowed",
      "offset": [
        1677,
        1708
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3049": {
      "fn": "HAV.isAllowed",
      "offset": [
        1677,
        1708
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3050": {
      "fn": "HAV.isAllowed",
      "offset": [
        1677,
        1708
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "3052": {
      "fn": "HAV.isAllowed",
      "offset": [
        1677,
        1708
      ],
      "op": "AND",
      "path": "0"
    },
    "3053": {
      "fn": "HAV.isAllowed",
      "offset": [
        1651,
        1709
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3054": {
      "fn": "HAV.isAllowed",
      "offset": [
        1643,
        1710
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "3055": {
      "fn": "HAV.isAllowed",
      "offset": [
        1514,
        1844
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3056": {
      "op": "POP"
    },
    "3057": {
      "op": "POP"
    },
    "3058": {
      "op": "POP"
    },
    "3059": {
      "fn": "HAV.isAllowed",
      "jump": "o",
      "offset": [
        1514,
        1844
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3060": {
      "op": "JUMPDEST"
    },
    "3061": {
      "op": "DUP1"
    },
    "3062": {
      "op": "CALLDATALOAD"
    },
    "3063": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3065": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3067": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3069": {
      "op": "SHL"
    },
    "3070": {
      "op": "SUB"
    },
    "3071": {
      "op": "DUP2"
    },
    "3072": {
      "op": "AND"
    },
    "3073": {
      "op": "DUP2"
    },
    "3074": {
      "op": "EQ"
    },
    "3075": {
      "op": "PUSH2",
      "value": "0x770"
    },
    "3078": {
      "op": "JUMPI"
    },
    "3079": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3081": {
      "op": "DUP1"
    },
    "3082": {
      "op": "REVERT"
    },
    "3083": {
      "op": "JUMPDEST"
    },
    "3084": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3089": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3091": {
      "op": "SHL"
    },
    "3092": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3094": {
      "op": "MSTORE"
    },
    "3095": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "3097": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3099": {
      "op": "MSTORE"
    },
    "3100": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3102": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3104": {
      "op": "REVERT"
    },
    "3105": {
      "op": "JUMPDEST"
    },
    "3106": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3108": {
      "op": "DUP3"
    },
    "3109": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3111": {
      "op": "DUP4"
    },
    "3112": {
      "op": "ADD"
    },
    "3113": {
      "op": "SLT"
    },
    "3114": {
      "op": "PUSH2",
      "value": "0xC32"
    },
    "3117": {
      "op": "JUMPI"
    },
    "3118": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3120": {
      "op": "DUP1"
    },
    "3121": {
      "op": "REVERT"
    },
    "3122": {
      "op": "JUMPDEST"
    },
    "3123": {
      "op": "DUP2"
    },
    "3124": {
      "op": "CALLDATALOAD"
    },
    "3125": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3134": {
      "op": "DUP1"
    },
    "3135": {
      "op": "DUP3"
    },
    "3136": {
      "op": "GT"
    },
    "3137": {
      "op": "ISZERO"
    },
    "3138": {
      "op": "PUSH2",
      "value": "0xC4D"
    },
    "3141": {
      "op": "JUMPI"
    },
    "3142": {
      "op": "PUSH2",
      "value": "0xC4D"
    },
    "3145": {
      "op": "PUSH2",
      "value": "0xC0B"
    },
    "3148": {
      "jump": "i",
      "op": "JUMP"
    },
    "3149": {
      "op": "JUMPDEST"
    },
    "3150": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3152": {
      "op": "MLOAD"
    },
    "3153": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3155": {
      "op": "DUP4"
    },
    "3156": {
      "op": "ADD"
    },
    "3157": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3159": {
      "op": "NOT"
    },
    "3160": {
      "op": "SWAP1"
    },
    "3161": {
      "op": "DUP2"
    },
    "3162": {
      "op": "AND"
    },
    "3163": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "3165": {
      "op": "ADD"
    },
    "3166": {
      "op": "AND"
    },
    "3167": {
      "op": "DUP2"
    },
    "3168": {
      "op": "ADD"
    },
    "3169": {
      "op": "SWAP1"
    },
    "3170": {
      "op": "DUP3"
    },
    "3171": {
      "op": "DUP3"
    },
    "3172": {
      "op": "GT"
    },
    "3173": {
      "op": "DUP2"
    },
    "3174": {
      "op": "DUP4"
    },
    "3175": {
      "op": "LT"
    },
    "3176": {
      "op": "OR"
    },
    "3177": {
      "op": "ISZERO"
    },
    "3178": {
      "op": "PUSH2",
      "value": "0xC75"
    },
    "3181": {
      "op": "JUMPI"
    },
    "3182": {
      "op": "PUSH2",
      "value": "0xC75"
    },
    "3185": {
      "op": "PUSH2",
      "value": "0xC0B"
    },
    "3188": {
      "jump": "i",
      "op": "JUMP"
    },
    "3189": {
      "op": "JUMPDEST"
    },
    "3190": {
      "op": "DUP2"
    },
    "3191": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3193": {
      "op": "MSTORE"
    },
    "3194": {
      "op": "DUP4"
    },
    "3195": {
      "op": "DUP2"
    },
    "3196": {
      "op": "MSTORE"
    },
    "3197": {
      "op": "DUP7"
    },
    "3198": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3200": {
      "op": "DUP6"
    },
    "3201": {
      "op": "DUP9"
    },
    "3202": {
      "op": "ADD"
    },
    "3203": {
      "op": "ADD"
    },
    "3204": {
      "op": "GT"
    },
    "3205": {
      "op": "ISZERO"
    },
    "3206": {
      "op": "PUSH2",
      "value": "0xC8E"
    },
    "3209": {
      "op": "JUMPI"
    },
    "3210": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3212": {
      "op": "DUP1"
    },
    "3213": {
      "op": "REVERT"
    },
    "3214": {
      "op": "JUMPDEST"
    },
    "3215": {
      "op": "DUP4"
    },
    "3216": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3218": {
      "op": "DUP8"
    },
    "3219": {
      "op": "ADD"
    },
    "3220": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3222": {
      "op": "DUP4"
    },
    "3223": {
      "op": "ADD"
    },
    "3224": {
      "op": "CALLDATACOPY"
    },
    "3225": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3227": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3229": {
      "op": "DUP6"
    },
    "3230": {
      "op": "DUP4"
    },
    "3231": {
      "op": "ADD"
    },
    "3232": {
      "op": "ADD"
    },
    "3233": {
      "op": "MSTORE"
    },
    "3234": {
      "op": "DUP1"
    },
    "3235": {
      "op": "SWAP5"
    },
    "3236": {
      "op": "POP"
    },
    "3237": {
      "op": "POP"
    },
    "3238": {
      "op": "POP"
    },
    "3239": {
      "op": "POP"
    },
    "3240": {
      "op": "POP"
    },
    "3241": {
      "op": "SWAP3"
    },
    "3242": {
      "op": "SWAP2"
    },
    "3243": {
      "op": "POP"
    },
    "3244": {
      "op": "POP"
    },
    "3245": {
      "jump": "o",
      "op": "JUMP"
    },
    "3246": {
      "op": "JUMPDEST"
    },
    "3247": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3249": {
      "op": "DUP1"
    },
    "3250": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3252": {
      "op": "DUP4"
    },
    "3253": {
      "op": "DUP6"
    },
    "3254": {
      "op": "SUB"
    },
    "3255": {
      "op": "SLT"
    },
    "3256": {
      "op": "ISZERO"
    },
    "3257": {
      "op": "PUSH2",
      "value": "0xCC1"
    },
    "3260": {
      "op": "JUMPI"
    },
    "3261": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3263": {
      "op": "DUP1"
    },
    "3264": {
      "op": "REVERT"
    },
    "3265": {
      "op": "JUMPDEST"
    },
    "3266": {
      "op": "PUSH2",
      "value": "0xCCA"
    },
    "3269": {
      "op": "DUP4"
    },
    "3270": {
      "op": "PUSH2",
      "value": "0xBF4"
    },
    "3273": {
      "jump": "i",
      "op": "JUMP"
    },
    "3274": {
      "op": "JUMPDEST"
    },
    "3275": {
      "op": "SWAP2"
    },
    "3276": {
      "op": "POP"
    },
    "3277": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3279": {
      "op": "DUP4"
    },
    "3280": {
      "op": "ADD"
    },
    "3281": {
      "op": "CALLDATALOAD"
    },
    "3282": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3291": {
      "op": "DUP2"
    },
    "3292": {
      "op": "GT"
    },
    "3293": {
      "op": "ISZERO"
    },
    "3294": {
      "op": "PUSH2",
      "value": "0xCE6"
    },
    "3297": {
      "op": "JUMPI"
    },
    "3298": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3300": {
      "op": "DUP1"
    },
    "3301": {
      "op": "REVERT"
    },
    "3302": {
      "op": "JUMPDEST"
    },
    "3303": {
      "op": "PUSH2",
      "value": "0xCF2"
    },
    "3306": {
      "op": "DUP6"
    },
    "3307": {
      "op": "DUP3"
    },
    "3308": {
      "op": "DUP7"
    },
    "3309": {
      "op": "ADD"
    },
    "3310": {
      "op": "PUSH2",
      "value": "0xC21"
    },
    "3313": {
      "jump": "i",
      "op": "JUMP"
    },
    "3314": {
      "op": "JUMPDEST"
    },
    "3315": {
      "op": "SWAP2"
    },
    "3316": {
      "op": "POP"
    },
    "3317": {
      "op": "POP"
    },
    "3318": {
      "op": "SWAP3"
    },
    "3319": {
      "op": "POP"
    },
    "3320": {
      "op": "SWAP3"
    },
    "3321": {
      "op": "SWAP1"
    },
    "3322": {
      "op": "POP"
    },
    "3323": {
      "jump": "o",
      "op": "JUMP"
    },
    "3324": {
      "op": "JUMPDEST"
    },
    "3325": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3327": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3329": {
      "op": "DUP3"
    },
    "3330": {
      "op": "DUP5"
    },
    "3331": {
      "op": "SUB"
    },
    "3332": {
      "op": "SLT"
    },
    "3333": {
      "op": "ISZERO"
    },
    "3334": {
      "op": "PUSH2",
      "value": "0xD0E"
    },
    "3337": {
      "op": "JUMPI"
    },
    "3338": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3340": {
      "op": "DUP1"
    },
    "3341": {
      "op": "REVERT"
    },
    "3342": {
      "op": "JUMPDEST"
    },
    "3343": {
      "op": "PUSH2",
      "value": "0xBED"
    },
    "3346": {
      "op": "DUP3"
    },
    "3347": {
      "op": "PUSH2",
      "value": "0xBF4"
    },
    "3350": {
      "jump": "i",
      "op": "JUMP"
    },
    "3351": {
      "op": "JUMPDEST"
    },
    "3352": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3354": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3356": {
      "op": "DUP3"
    },
    "3357": {
      "op": "DUP5"
    },
    "3358": {
      "op": "SUB"
    },
    "3359": {
      "op": "SLT"
    },
    "3360": {
      "op": "ISZERO"
    },
    "3361": {
      "op": "PUSH2",
      "value": "0xD29"
    },
    "3364": {
      "op": "JUMPI"
    },
    "3365": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3367": {
      "op": "DUP1"
    },
    "3368": {
      "op": "REVERT"
    },
    "3369": {
      "op": "JUMPDEST"
    },
    "3370": {
      "op": "DUP2"
    },
    "3371": {
      "op": "CALLDATALOAD"
    },
    "3372": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3381": {
      "op": "DUP2"
    },
    "3382": {
      "op": "GT"
    },
    "3383": {
      "op": "ISZERO"
    },
    "3384": {
      "op": "PUSH2",
      "value": "0xD40"
    },
    "3387": {
      "op": "JUMPI"
    },
    "3388": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3390": {
      "op": "DUP1"
    },
    "3391": {
      "op": "REVERT"
    },
    "3392": {
      "op": "JUMPDEST"
    },
    "3393": {
      "op": "PUSH2",
      "value": "0xD4C"
    },
    "3396": {
      "op": "DUP5"
    },
    "3397": {
      "op": "DUP3"
    },
    "3398": {
      "op": "DUP6"
    },
    "3399": {
      "op": "ADD"
    },
    "3400": {
      "op": "PUSH2",
      "value": "0xC21"
    },
    "3403": {
      "jump": "i",
      "op": "JUMP"
    },
    "3404": {
      "op": "JUMPDEST"
    },
    "3405": {
      "op": "SWAP5"
    },
    "3406": {
      "op": "SWAP4"
    },
    "3407": {
      "op": "POP"
    },
    "3408": {
      "op": "POP"
    },
    "3409": {
      "op": "POP"
    },
    "3410": {
      "op": "POP"
    },
    "3411": {
      "jump": "o",
      "op": "JUMP"
    },
    "3412": {
      "op": "JUMPDEST"
    },
    "3413": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3415": {
      "op": "DUP1"
    },
    "3416": {
      "op": "DUP3"
    },
    "3417": {
      "op": "MSTORE"
    },
    "3418": {
      "op": "PUSH1",
      "value": "0x9"
    },
    "3420": {
      "op": "SWAP1"
    },
    "3421": {
      "op": "DUP3"
    },
    "3422": {
      "op": "ADD"
    },
    "3423": {
      "op": "MSTORE"
    },
    "3424": {
      "op": "PUSH9",
      "value": "0x212041646472657373"
    },
    "3434": {
      "op": "PUSH1",
      "value": "0xB8"
    },
    "3436": {
      "op": "SHL"
    },
    "3437": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3439": {
      "op": "DUP3"
    },
    "3440": {
      "op": "ADD"
    },
    "3441": {
      "op": "MSTORE"
    },
    "3442": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3444": {
      "op": "ADD"
    },
    "3445": {
      "op": "SWAP1"
    },
    "3446": {
      "jump": "o",
      "op": "JUMP"
    },
    "3447": {
      "op": "JUMPDEST"
    },
    "3448": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3450": {
      "op": "DUP1"
    },
    "3451": {
      "op": "DUP3"
    },
    "3452": {
      "op": "MSTORE"
    },
    "3453": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "3455": {
      "op": "SWAP1"
    },
    "3456": {
      "op": "DUP3"
    },
    "3457": {
      "op": "ADD"
    },
    "3458": {
      "op": "MSTORE"
    },
    "3459": {
      "op": "PUSH20",
      "value": "0x50617373776F7264206C656E677468203D3D203"
    },
    "3480": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3482": {
      "op": "SHL"
    },
    "3483": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3485": {
      "op": "DUP3"
    },
    "3486": {
      "op": "ADD"
    },
    "3487": {
      "op": "MSTORE"
    },
    "3488": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3490": {
      "op": "ADD"
    },
    "3491": {
      "op": "SWAP1"
    },
    "3492": {
      "jump": "o",
      "op": "JUMP"
    },
    "3493": {
      "op": "JUMPDEST"
    },
    "3494": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3496": {
      "op": "DUP1"
    },
    "3497": {
      "op": "DUP3"
    },
    "3498": {
      "op": "MSTORE"
    },
    "3499": {
      "op": "PUSH1",
      "value": "0x7"
    },
    "3501": {
      "op": "SWAP1"
    },
    "3502": {
      "op": "DUP3"
    },
    "3503": {
      "op": "ADD"
    },
    "3504": {
      "op": "MSTORE"
    },
    "3505": {
      "op": "PUSH7",
      "value": "0x10902937B7B697"
    },
    "3513": {
      "op": "PUSH1",
      "value": "0xC9"
    },
    "3515": {
      "op": "SHL"
    },
    "3516": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3518": {
      "op": "DUP3"
    },
    "3519": {
      "op": "ADD"
    },
    "3520": {
      "op": "MSTORE"
    },
    "3521": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3523": {
      "op": "ADD"
    },
    "3524": {
      "op": "SWAP1"
    },
    "3525": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "57980e57f12813eb8a3ad0594714f94dd796bb9f",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >0.6.0;\n\n/*\n * @title: Hotel and vending Solidity smart contract.\n * @author: Anthony (fps) https://github.com/fps8k .\n * @dev: \n*/\n\ncontract HAV\n{\n    event Book(address, bytes32);\n    event BookFor(address, address, bytes32);\n    event Unlock(address, address, uint256);\n    event Lock(address, address, uint256);\n    event Approve(address, address, bool);\n    event Revoke(address, address, bool);\n    event Leave(address, uint256);\n\n\n    // Room attributes. Assuming that there are infinite rooms in the hotel all capped at 50,000 gwei flat.\n\n    struct Rooms\n    {\n        address occupant;\n        uint256 price;\n        bytes32 key;\n        bool door_open;\n    }\n\n\n    // Mappings.\n\n    mapping(address => Rooms) private guests;                           // Maps each user to a room.\n    mapping(address => mapping(address => bool)) private approvals;     // Allows one to allow a person or some people ability to their rooms.\n\n\n    // Modifiers and control functions.\n\n    modifier isValidSender()\n    {\n        require(msg.sender != address(0), \"! Address\");\n        _;\n    }\n\n\n    /*\n    * @dev:\n    *\n    * Makes sure the `_address` has a room already in the hotel.\n    */\n\n    function hasRoom(address _address) private view returns(bool)\n    {\n        return guests[_address].occupant != address(0);\n\n        // Returns true if the address has a room.\n    }\n\n\n    /*\n    * @dev:\n    *\n    * Checks if `_address` is allowed to access a room.\n    */\n\n    function isAllowed(address _address) private view returns(bool)\n    {\n        address owner = guests[_address].occupant;\n        return ((msg.sender == owner) || (approvals[_address][msg.sender]));\n\n        // Returns true if the `msg.sender` is the owner of the room -- OR -- the `msg.sender` is approved by the `_address`.\n    }\n    \n\n\n\n    /*\n    * @dev:\n    *\n    * Grants `msg.sender` access to a room and he sets his password.\n    * \n    */\n\n    function book(string memory _password) public payable isValidSender\n    {\n        require(!hasRoom(msg.sender), \"You have a room.\");                  // Makes sure the `msg.sender` has no room at the moment.\n        require(bytes(_password).length != 0, \"Password length == 0\");\n        require(msg.value >= 50_000 gwei, \"Price >= 50,000 gwei\");\n\n        bytes32 password = keccak256(bytes(_password));\n\n        Rooms memory room = Rooms(\n            msg.sender,\n            msg.value,\n            password,\n            false\n        );\n\n        guests[msg.sender] = room;\n\n        emit Book(msg.sender, password);\n    }\n\n\n\n\n    /*\n    * @dev:\n    *\n    * Grants `msg.sender` access to book a room for `_address` and he sets his password.\n    * \n    */\n\n    function bookFor(address _address, string memory _password) public payable isValidSender\n    {\n        require(_address != address(0), \"! For Address\");\n        require(!hasRoom(_address), \"You have a room.\");                  // Makes sure the `msg.sender` has no room at the moment.\n        require(bytes(_password).length != 0, \"Password length == 0\");\n        require(msg.value >= 50_000 gwei, \"Price >= 50,000 gwei\");\n\n        bytes32 password = keccak256(bytes(_password));\n\n        Rooms memory room = Rooms(\n            _address,\n            msg.value,\n            password,\n            false\n        );\n\n        guests[_address] = room;\n\n        emit BookFor(msg.sender, _address, password);\n    }\n\n\n\n\n    /*\n    * @dev:\n    *\n    * Unlocks your door.\n    * `msg.sender` must be approved or own the room.\n    */\n\n    function unlock(address _address, string memory _key) public isValidSender          // `_address` is the address of the room you want to access.\n    {\n        require(hasRoom(_address), \"! Booked\");\n        require(isAllowed(_address), \"! Permitted\");                                    // `_address` has allowed the `msg.sender` to unlock.\n        require(bytes(_key).length != 0, \"Password length == 0\");\n        bytes32 test_password = keccak256(bytes(_key));\n\n        require(test_password == guests[_address].key, \"! Password\");                   // Tests for the key and password.\n\n        uint256 unlock_time = block.timestamp;\n\n        guests[_address].door_open = true;\n\n        emit Unlock(msg.sender, _address, unlock_time);\n    }\n\n\n\n\n    /*\n    * @dev:\n    *\n    * Locks your door.\n    * `msg.sender` must be approved or own the room.\n    */\n\n    function lock(address _address) public isValidSender          // `_address` is the address of the room you want to access.\n    {\n        require(hasRoom(_address), \"! Booked\");\n        require(isAllowed(_address), \"! Permitted\");\n\n        uint256 lock_time = block.timestamp;\n\n        guests[_address].door_open = false;\n\n        emit Lock(msg.sender, _address, lock_time);\n    }\n\n\n\n\n    /*\n    * @dev: \n    * \n    * Approves `address` to access `msg.sender`'s room.\n    */\n\n    function approve(address _address) public isValidSender\n    {\n        require(hasRoom(msg.sender), \"! Room.\");                  // Makes sure the `msg.sender` has a room at the moment.   \n        require(_address != address(0), \"! Address\");\n\n        require(!approvals[msg.sender][_address], \"Already approved\");\n\n        approvals[msg.sender][_address] = true;\n\n        emit Approve(msg.sender, _address, true);\n    }\n\n\n\n\n    /*\n    * @dev: \n    * \n    * Revokes `address` to access `msg.sender`'s room.\n    */\n\n    function revoke(address _address) public isValidSender\n    {\n        require(hasRoom(msg.sender), \"! Room.\");                  // Makes sure the `msg.sender` has a room at the moment.   \n        require(_address != address(0), \"! Address\");\n\n        require(approvals[msg.sender][_address], \"Already revoked\");\n\n        approvals[msg.sender][_address] = false;\n\n        emit Revoke(msg.sender, _address, false);\n    }\n\n\n\n\n    /*\n    * @dev:\n    *\n    * Leave, says bye to the hotel.\n    */\n\n    function leave(address _address) public isValidSender\n    {\n        require(hasRoom(msg.sender), \"! Room.\");                  // Makes sure the `msg.sender` has no room at the moment.\n        require(msg.sender == guests[_address].occupant, \"! Owned\");\n        \n        uint256 left = block.timestamp;\n        delete guests[msg.sender];\n\n        emit Leave(msg.sender, left);\n    }\n\n\n\n\n    /*\n    * @dev:\n    *\n    * Sees the owner of the room\n    */\n\n    function viewOwner(address _address) public view isValidSender returns(address)\n    {\n        require(_address != address(0), \"! Address\");\n        require(hasRoom(_address), \"! Room.\");                  // Makes sure the `msg.sender` has no room at the moment.\n        \n        return guests[_address].occupant;\n    }\n\n}",
  "sourceMap": "181:6497:0:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/HotelAndVending.sol",
  "type": "contract"
}